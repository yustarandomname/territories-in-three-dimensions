import{_ as Di,S as jr,i as es,s as ts,C as Gs,D as Vs,E as Ws,F as Xs,g as gt,d as bt,I as Fs,W as wr,$ as bn,y as Qt,z as jt,A as en,B as tn,a0 as Ld,o as Eu,a as Li,e as pu,c as Ii,b as kn,f as mu,h as Tn,a1 as gu,a2 as Wo,a3 as Vf,v as _u,a4 as k1,t as G1,k as A0,l as R0,m as C0,n as P0,a5 as V1,w as L0,a6 as W1,a7 as X1,H as Tu}from"../chunks/index.2ecf17a4.js";import{w as Si,d as Id,r as q1}from"../chunks/index.0449cfc6.js";import{c as bo}from"../chunks/_commonjsHelpers.87174ba5.js";let Ht;const Mr=new Array(128).fill(void 0);Mr.push(void 0,null,!0,!1);function Yt(r){return Mr[r]}let Bo=Mr.length;function Y1(r){r<132||(Mr[r]=Bo,Bo=r)}function Cs(r){const e=Yt(r);return Y1(r),e}const I0=typeof TextDecoder<"u"?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};typeof TextDecoder<"u"&&I0.decode();let Uo=null;function ru(){return(Uo===null||Uo.byteLength===0)&&(Uo=new Uint8Array(Ht.memory.buffer)),Uo}function gl(r,e){return r=r>>>0,I0.decode(ru().subarray(r,r+e))}function Wi(r){Bo===Mr.length&&Mr.push(Mr.length+1);const e=Bo;return Bo=Mr[e],Mr[e]=r,e}function of(r){return r==null}let Do=null;function Z1(){return(Do===null||Do.byteLength===0)&&(Do=new Float64Array(Ht.memory.buffer)),Do}let No=null;function ai(){return(No===null||No.byteLength===0)&&(No=new Int32Array(Ht.memory.buffer)),No}let vu=0;const su=typeof TextEncoder<"u"?new TextEncoder("utf-8"):{encode:()=>{throw Error("TextEncoder not available")}},$1=typeof su.encodeInto=="function"?function(r,e){return su.encodeInto(r,e)}:function(r,e){const t=su.encode(r);return e.set(t),{read:r.length,written:t.length}};function Vg(r,e,t){if(t===void 0){const c=su.encode(r),u=e(c.length,1)>>>0;return ru().subarray(u,u+c.length).set(c),vu=c.length,u}let n=r.length,i=e(n,1)>>>0;const s=ru();let o=0;for(;o<n;o++){const c=r.charCodeAt(o);if(c>127)break;s[i+o]=c}if(o!==n){o!==0&&(r=r.slice(o)),i=t(i,n,n=o+r.length*3,1)>>>0;const c=ru().subarray(i+o,i+n),u=$1(r,c);o+=u.written}return vu=o,i}function Wf(r){const e=typeof r;if(e=="number"||e=="boolean"||r==null)return`${r}`;if(e=="string")return`"${r}"`;if(e=="symbol"){const i=r.description;return i==null?"Symbol":`Symbol(${i})`}if(e=="function"){const i=r.name;return typeof i=="string"&&i.length>0?`Function(${i})`:"Function"}if(Array.isArray(r)){const i=r.length;let s="[";i>0&&(s+=Wf(r[0]));for(let o=1;o<i;o++)s+=", "+Wf(r[o]);return s+="]",s}const t=/\[object ([^\]]+)\]/.exec(toString.call(r));let n;if(t.length>1)n=t[1];else return toString.call(r);if(n=="Object")try{return"Object("+JSON.stringify(r)+")"}catch{return"Object"}return r instanceof Error?`${r.name}: ${r.message}
${r.stack}`:n}function K1(r,e){if(!(r instanceof e))throw new Error(`expected instance of ${e.name}`);return r.ptr}function J1(r){K1(r,Xo);const e=Ht.mc(r.__wbg_ptr);return Ud.__wrap(e)}class Xo{static __wrap(e){e=e>>>0;const t=Object.create(Xo.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();Ht.__wbg_universe_free(e)}static new(e){const t=Ht.universe_new(e);return Xo.__wrap(t)}add_node(e){try{const i=Ht.__wbindgen_add_to_stack_pointer(-16);Ht.universe_add_node(i,this.__wbg_ptr,Wi(e));var t=ai()[i/4+0],n=ai()[i/4+1];if(n)throw Cs(t)}finally{Ht.__wbindgen_add_to_stack_pointer(16)}}}class Ud{static __wrap(e){e=e>>>0;const t=Object.create(Ud.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();Ht.__wbg_verticesindeces_free(e)}get_vertices(){try{const i=Ht.__wbindgen_add_to_stack_pointer(-16);Ht.verticesindeces_get_vertices(i,this.__wbg_ptr);var e=ai()[i/4+0],t=ai()[i/4+1],n=ai()[i/4+2];if(n)throw Cs(t);return Cs(e)}finally{Ht.__wbindgen_add_to_stack_pointer(16)}}get_indeces(){try{const i=Ht.__wbindgen_add_to_stack_pointer(-16);Ht.verticesindeces_get_indeces(i,this.__wbg_ptr);var e=ai()[i/4+0],t=ai()[i/4+1],n=ai()[i/4+2];if(n)throw Cs(t);return Cs(e)}finally{Ht.__wbindgen_add_to_stack_pointer(16)}}}async function Q1(r,e){if(typeof Response=="function"&&r instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(r,e)}catch(n){if(r.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",n);else throw n}const t=await r.arrayBuffer();return await WebAssembly.instantiate(t,e)}else{const t=await WebAssembly.instantiate(r,e);return t instanceof WebAssembly.Instance?{instance:t,module:r}:t}}function j1(){const r={};return r.wbg={},r.wbg.__wbg_alert_85de89ce72c9d9e9=function(e,t){alert(gl(e,t))},r.wbg.__wbindgen_is_object=function(e){const t=Yt(e);return typeof t=="object"&&t!==null},r.wbg.__wbindgen_is_undefined=function(e){return Yt(e)===void 0},r.wbg.__wbindgen_in=function(e,t){return Yt(e)in Yt(t)},r.wbg.__wbindgen_object_drop_ref=function(e){Cs(e)},r.wbg.__wbindgen_error_new=function(e,t){const n=new Error(gl(e,t));return Wi(n)},r.wbg.__wbindgen_number_new=function(e){return Wi(e)},r.wbg.__wbindgen_object_clone_ref=function(e){const t=Yt(e);return Wi(t)},r.wbg.__wbindgen_jsval_loose_eq=function(e,t){return Yt(e)==Yt(t)},r.wbg.__wbindgen_string_new=function(e,t){const n=gl(e,t);return Wi(n)},r.wbg.__wbindgen_boolean_get=function(e){const t=Yt(e);return typeof t=="boolean"?t?1:0:2},r.wbg.__wbindgen_number_get=function(e,t){const n=Yt(t),i=typeof n=="number"?n:void 0;Z1()[e/8+1]=of(i)?0:i,ai()[e/4+0]=!of(i)},r.wbg.__wbindgen_string_get=function(e,t){const n=Yt(t),i=typeof n=="string"?n:void 0;var s=of(i)?0:Vg(i,Ht.__wbindgen_malloc,Ht.__wbindgen_realloc),o=vu;ai()[e/4+1]=o,ai()[e/4+0]=s},r.wbg.__wbg_getwithrefkey_15c62c2b8546208d=function(e,t){const n=Yt(e)[Yt(t)];return Wi(n)},r.wbg.__wbg_new_898a68150f225f2e=function(){const e=new Array;return Wi(e)},r.wbg.__wbg_set_502d29070ea18557=function(e,t,n){Yt(e)[t>>>0]=Cs(n)},r.wbg.__wbg_instanceof_ArrayBuffer_39ac22089b74fddb=function(e){let t;try{t=Yt(e)instanceof ArrayBuffer}catch{t=!1}return t},r.wbg.__wbg_isSafeInteger_bb8e18dd21c97288=function(e){return Number.isSafeInteger(Yt(e))},r.wbg.__wbg_buffer_085ec1f694018c4f=function(e){const t=Yt(e).buffer;return Wi(t)},r.wbg.__wbg_new_8125e318e6245eed=function(e){const t=new Uint8Array(Yt(e));return Wi(t)},r.wbg.__wbg_set_5cf90238115182c3=function(e,t,n){Yt(e).set(Yt(t),n>>>0)},r.wbg.__wbg_length_72e2208bbc0efc61=function(e){return Yt(e).length},r.wbg.__wbg_instanceof_Uint8Array_d8d9cb2b8e8ac1d4=function(e){let t;try{t=Yt(e)instanceof Uint8Array}catch{t=!1}return t},r.wbg.__wbindgen_debug_string=function(e,t){const n=Wf(Yt(t)),i=Vg(n,Ht.__wbindgen_malloc,Ht.__wbindgen_realloc),s=vu;ai()[e/4+1]=s,ai()[e/4+0]=i},r.wbg.__wbindgen_throw=function(e,t){throw new Error(gl(e,t))},r.wbg.__wbindgen_memory=function(){const e=Ht.memory;return Wi(e)},r}function eT(r,e){return Ht=r.exports,U0.__wbindgen_wasm_module=e,Do=null,No=null,Uo=null,Ht}async function U0(r){if(Ht!==void 0)return Ht;typeof r>"u"&&(r="assets/my_crate_bg.wasm");const e=j1();(typeof r=="string"||typeof Request=="function"&&r instanceof Request||typeof URL=="function"&&r instanceof URL)&&(r=fetch(r));const{instance:t,module:n}=await Q1(await r,e);return eT(t,n)}/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Au="153",ws={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},Es={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},D0=0,Xf=1,N0=2,tT=3,O0=0,Dd=1,Ru=2,Xi=3,Ji=0,In=1,qi=2,nT=2,Er=0,Ds=1,qf=2,Yf=3,Zf=4,F0=5,As=100,B0=101,z0=102,$f=103,Kf=104,H0=200,k0=201,G0=202,V0=203,Nd=204,Od=205,W0=206,X0=207,q0=208,Y0=209,Z0=210,$0=0,K0=1,J0=2,yu=3,Q0=4,j0=5,ev=6,tv=7,hc=0,nv=1,iv=2,$i=0,rv=1,sv=2,av=3,Fd=4,ov=5,Cu=300,$r=301,Kr=302,qo=303,Yo=304,Ya=306,Zo=1e3,Ln=1001,$o=1002,on=1003,xu=1004,iT=1004,zo=1005,rT=1005,cn=1006,Bd=1007,sT=1007,Jr=1008,aT=1008,Tr=1009,cv=1010,lv=1011,Pu=1012,zd=1013,Sr=1014,Yi=1015,Va=1016,Hd=1017,kd=1018,qr=1020,uv=1021,oi=1023,hv=1024,fv=1025,Yr=1026,Bs=1027,dv=1028,Gd=1029,pv=1030,Vd=1031,Wd=1033,au=33776,ou=33777,cu=33778,lu=33779,Jf=35840,Qf=35841,jf=35842,ed=35843,mv=36196,td=37492,nd=37496,id=37808,rd=37809,sd=37810,ad=37811,od=37812,cd=37813,ld=37814,ud=37815,hd=37816,fd=37817,dd=37818,pd=37819,md=37820,gd=37821,uu=36492,gv=36283,_d=36284,vd=36285,yd=36286,_v=2200,vv=2201,yv=2202,Ko=2300,Jo=2301,hu=2302,Ps=2400,Ls=2401,Qo=2402,Lu=2500,Xd=2501,oT=0,cT=1,lT=2,jo=3e3,Ar=3001,xv=3200,Mv=3201,ns=0,bv=1,Zr="",ut="srgb",Ni="srgb-linear",qd="display-p3",uT=0,fu=7680,hT=7681,fT=7682,dT=7683,pT=34055,mT=34056,gT=5386,_T=512,vT=513,yT=514,xT=515,MT=516,bT=517,ST=518,Sv=519,wv=512,Ev=513,Tv=514,Av=515,Rv=516,Cv=517,Pv=518,Lv=519,ec=35044,wT=35048,ET=35040,TT=35045,AT=35049,RT=35041,CT=35046,PT=35050,LT=35042,IT="100",xd="300 es",Mu=1035,Zi=2e3,tc=2001;class ji{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,o=i.length;s<o;s++)i[s].call(this,e);e.target=null}}}const Cn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let Wg=1234567;const Ns=Math.PI/180,Wa=180/Math.PI;function li(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Cn[r&255]+Cn[r>>8&255]+Cn[r>>16&255]+Cn[r>>24&255]+"-"+Cn[e&255]+Cn[e>>8&255]+"-"+Cn[e>>16&15|64]+Cn[e>>24&255]+"-"+Cn[t&63|128]+Cn[t>>8&255]+"-"+Cn[t>>16&255]+Cn[t>>24&255]+Cn[n&255]+Cn[n>>8&255]+Cn[n>>16&255]+Cn[n>>24&255]).toLowerCase()}function nn(r,e,t){return Math.max(e,Math.min(t,r))}function Yd(r,e){return(r%e+e)%e}function UT(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function DT(r,e,t){return r!==e?(t-r)/(e-r):0}function Ho(r,e,t){return(1-t)*r+t*e}function NT(r,e,t,n){return Ho(r,e,1-Math.exp(-t*n))}function OT(r,e=1){return e-Math.abs(Yd(r,e*2)-e)}function FT(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function BT(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function zT(r,e){return r+Math.floor(Math.random()*(e-r+1))}function HT(r,e){return r+Math.random()*(e-r)}function kT(r){return r*(.5-Math.random())}function GT(r){r!==void 0&&(Wg=r);let e=Wg+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function VT(r){return r*Ns}function WT(r){return r*Wa}function Md(r){return(r&r-1)===0&&r!==0}function Iv(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function bu(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function XT(r,e,t,n,i){const s=Math.cos,o=Math.sin,c=s(t/2),u=o(t/2),h=s((e+n)/2),d=o((e+n)/2),m=s((e-n)/2),p=o((e-n)/2),_=s((n-e)/2),v=o((n-e)/2);switch(i){case"XYX":r.set(c*d,u*m,u*p,c*h);break;case"YZY":r.set(u*p,c*d,u*m,c*h);break;case"ZXZ":r.set(u*m,u*p,c*d,c*h);break;case"XZX":r.set(c*d,u*v,u*_,c*h);break;case"YXY":r.set(u*_,c*d,u*v,c*h);break;case"ZYZ":r.set(u*v,u*_,c*d,c*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function ci(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function mt(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const qT={DEG2RAD:Ns,RAD2DEG:Wa,generateUUID:li,clamp:nn,euclideanModulo:Yd,mapLinear:UT,inverseLerp:DT,lerp:Ho,damp:NT,pingpong:OT,smoothstep:FT,smootherstep:BT,randInt:zT,randFloat:HT,randFloatSpread:kT,seededRandom:GT,degToRad:VT,radToDeg:WT,isPowerOfTwo:Md,ceilPowerOfTwo:Iv,floorPowerOfTwo:bu,setQuaternionFromProperEuler:XT,normalize:mt,denormalize:ci};class ce{constructor(e=0,t=0){ce.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(nn(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*n-o*i+e.x,this.y=s*i+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class pt{constructor(e,t,n,i,s,o,c,u,h){pt.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,o,c,u,h)}set(e,t,n,i,s,o,c,u,h){const d=this.elements;return d[0]=e,d[1]=i,d[2]=c,d[3]=t,d[4]=s,d[5]=u,d[6]=n,d[7]=o,d[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,o=n[0],c=n[3],u=n[6],h=n[1],d=n[4],m=n[7],p=n[2],_=n[5],v=n[8],M=i[0],y=i[3],g=i[6],S=i[1],b=i[4],E=i[7],A=i[2],L=i[5],F=i[8];return s[0]=o*M+c*S+u*A,s[3]=o*y+c*b+u*L,s[6]=o*g+c*E+u*F,s[1]=h*M+d*S+m*A,s[4]=h*y+d*b+m*L,s[7]=h*g+d*E+m*F,s[2]=p*M+_*S+v*A,s[5]=p*y+_*b+v*L,s[8]=p*g+_*E+v*F,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],c=e[5],u=e[6],h=e[7],d=e[8];return t*o*d-t*c*h-n*s*d+n*c*u+i*s*h-i*o*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],c=e[5],u=e[6],h=e[7],d=e[8],m=d*o-c*h,p=c*u-d*s,_=h*s-o*u,v=t*m+n*p+i*_;if(v===0)return this.set(0,0,0,0,0,0,0,0,0);const M=1/v;return e[0]=m*M,e[1]=(i*h-d*n)*M,e[2]=(c*n-i*o)*M,e[3]=p*M,e[4]=(d*t-i*u)*M,e[5]=(i*s-c*t)*M,e[6]=_*M,e[7]=(n*u-h*t)*M,e[8]=(o*t-n*s)*M,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,o,c){const u=Math.cos(s),h=Math.sin(s);return this.set(n*u,n*h,-n*(u*o+h*c)+o+e,-i*h,i*u,-i*(-h*o+u*c)+c+t,0,0,1),this}scale(e,t){return this.premultiply(cf.makeScale(e,t)),this}rotate(e){return this.premultiply(cf.makeRotation(-e)),this}translate(e,t){return this.premultiply(cf.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const cf=new pt;function Uv(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}const YT={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Fa(r,e){return new YT[r](e)}function nc(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}const Xg={};function ko(r){r in Xg||(Xg[r]=!0,console.warn(r))}function ka(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function lf(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}const ZT=new pt().fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),$T=new pt().fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]);function KT(r){return r.convertSRGBToLinear().applyMatrix3($T)}function JT(r){return r.applyMatrix3(ZT).convertLinearToSRGB()}const QT={[Ni]:r=>r,[ut]:r=>r.convertSRGBToLinear(),[qd]:KT},jT={[Ni]:r=>r,[ut]:r=>r.convertLinearToSRGB(),[qd]:JT},si={enabled:!0,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(r){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!r},get workingColorSpace(){return Ni},set workingColorSpace(r){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(r,e,t){if(this.enabled===!1||e===t||!e||!t)return r;const n=QT[e],i=jT[t];if(n===void 0||i===void 0)throw new Error(`Unsupported color space conversion, "${e}" to "${t}".`);return i(n(r))},fromWorkingColorSpace:function(r,e){return this.convert(r,this.workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this.workingColorSpace)}};let ma;class Zd{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{ma===void 0&&(ma=nc("canvas")),ma.width=e.width,ma.height=e.height;const n=ma.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=ma}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=nc("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let o=0;o<s.length;o++)s[o]=ka(s[o]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(ka(t[n]/255)*255):t[n]=ka(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let eA=0;class Is{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:eA++}),this.uuid=li(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let o=0,c=i.length;o<c;o++)i[o].isDataTexture?s.push(uf(i[o].image)):s.push(uf(i[o]))}else s=uf(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function uf(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?Zd.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let tA=0;class ln extends ji{constructor(e=ln.DEFAULT_IMAGE,t=ln.DEFAULT_MAPPING,n=Ln,i=Ln,s=cn,o=Jr,c=oi,u=Tr,h=ln.DEFAULT_ANISOTROPY,d=Zr){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:tA++}),this.uuid=li(),this.name="",this.source=new Is(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=o,this.anisotropy=h,this.format=c,this.internalFormat=null,this.type=u,this.offset=new ce(0,0),this.repeat=new ce(1,1),this.center=new ce(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new pt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof d=="string"?this.colorSpace=d:(ko("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=d===Ar?ut:Zr),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Cu)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Zo:e.x=e.x-Math.floor(e.x);break;case Ln:e.x=e.x<0?0:1;break;case $o:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Zo:e.y=e.y-Math.floor(e.y);break;case Ln:e.y=e.y<0?0:1;break;case $o:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return ko("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===ut?Ar:jo}set encoding(e){ko("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===Ar?ut:Zr}}ln.DEFAULT_IMAGE=null;ln.DEFAULT_MAPPING=Cu;ln.DEFAULT_ANISOTROPY=1;class Dt{constructor(e=0,t=0,n=0,i=1){Dt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*i+o[12]*s,this.y=o[1]*t+o[5]*n+o[9]*i+o[13]*s,this.z=o[2]*t+o[6]*n+o[10]*i+o[14]*s,this.w=o[3]*t+o[7]*n+o[11]*i+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const u=e.elements,h=u[0],d=u[4],m=u[8],p=u[1],_=u[5],v=u[9],M=u[2],y=u[6],g=u[10];if(Math.abs(d-p)<.01&&Math.abs(m-M)<.01&&Math.abs(v-y)<.01){if(Math.abs(d+p)<.1&&Math.abs(m+M)<.1&&Math.abs(v+y)<.1&&Math.abs(h+_+g-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const b=(h+1)/2,E=(_+1)/2,A=(g+1)/2,L=(d+p)/4,F=(m+M)/4,N=(v+y)/4;return b>E&&b>A?b<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(b),i=L/n,s=F/n):E>A?E<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(E),n=L/i,s=N/i):A<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(A),n=F/s,i=N/s),this.set(n,i,s,t),this}let S=Math.sqrt((y-v)*(y-v)+(m-M)*(m-M)+(p-d)*(p-d));return Math.abs(S)<.001&&(S=1),this.x=(y-v)/S,this.y=(m-M)/S,this.z=(p-d)/S,this.w=Math.acos((h+_+g-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class Oi extends ji{constructor(e=1,t=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Dt(0,0,e,t),this.scissorTest=!1,this.viewport=new Dt(0,0,e,t);const i={width:e,height:t,depth:1};n.encoding!==void 0&&(ko("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===Ar?ut:Zr),this.texture=new ln(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:cn,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Is(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Iu extends ln{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=on,this.minFilter=on,this.wrapR=Ln,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class nA extends Oi{constructor(e=1,t=1,n=1){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new Iu(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class $d extends ln{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=on,this.minFilter=on,this.wrapR=Ln,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class iA extends Oi{constructor(e=1,t=1,n=1){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new $d(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class rA extends Oi{constructor(e=1,t=1,n=1,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const s=this.texture;this.texture=[];for(let o=0;o<n;o++)this.texture[o]=s.clone(),this.texture[o].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.texture.length;i<s;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class Un{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,s,o,c){let u=n[i+0],h=n[i+1],d=n[i+2],m=n[i+3];const p=s[o+0],_=s[o+1],v=s[o+2],M=s[o+3];if(c===0){e[t+0]=u,e[t+1]=h,e[t+2]=d,e[t+3]=m;return}if(c===1){e[t+0]=p,e[t+1]=_,e[t+2]=v,e[t+3]=M;return}if(m!==M||u!==p||h!==_||d!==v){let y=1-c;const g=u*p+h*_+d*v+m*M,S=g>=0?1:-1,b=1-g*g;if(b>Number.EPSILON){const A=Math.sqrt(b),L=Math.atan2(A,g*S);y=Math.sin(y*L)/A,c=Math.sin(c*L)/A}const E=c*S;if(u=u*y+p*E,h=h*y+_*E,d=d*y+v*E,m=m*y+M*E,y===1-c){const A=1/Math.sqrt(u*u+h*h+d*d+m*m);u*=A,h*=A,d*=A,m*=A}}e[t]=u,e[t+1]=h,e[t+2]=d,e[t+3]=m}static multiplyQuaternionsFlat(e,t,n,i,s,o){const c=n[i],u=n[i+1],h=n[i+2],d=n[i+3],m=s[o],p=s[o+1],_=s[o+2],v=s[o+3];return e[t]=c*v+d*m+u*_-h*p,e[t+1]=u*v+d*p+h*m-c*_,e[t+2]=h*v+d*_+c*p-u*m,e[t+3]=d*v-c*m-u*p-h*_,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,s=e._z,o=e._order,c=Math.cos,u=Math.sin,h=c(n/2),d=c(i/2),m=c(s/2),p=u(n/2),_=u(i/2),v=u(s/2);switch(o){case"XYZ":this._x=p*d*m+h*_*v,this._y=h*_*m-p*d*v,this._z=h*d*v+p*_*m,this._w=h*d*m-p*_*v;break;case"YXZ":this._x=p*d*m+h*_*v,this._y=h*_*m-p*d*v,this._z=h*d*v-p*_*m,this._w=h*d*m+p*_*v;break;case"ZXY":this._x=p*d*m-h*_*v,this._y=h*_*m+p*d*v,this._z=h*d*v+p*_*m,this._w=h*d*m-p*_*v;break;case"ZYX":this._x=p*d*m-h*_*v,this._y=h*_*m+p*d*v,this._z=h*d*v-p*_*m,this._w=h*d*m+p*_*v;break;case"YZX":this._x=p*d*m+h*_*v,this._y=h*_*m+p*d*v,this._z=h*d*v-p*_*m,this._w=h*d*m-p*_*v;break;case"XZY":this._x=p*d*m-h*_*v,this._y=h*_*m-p*d*v,this._z=h*d*v+p*_*m,this._w=h*d*m+p*_*v;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],o=t[1],c=t[5],u=t[9],h=t[2],d=t[6],m=t[10],p=n+c+m;if(p>0){const _=.5/Math.sqrt(p+1);this._w=.25/_,this._x=(d-u)*_,this._y=(s-h)*_,this._z=(o-i)*_}else if(n>c&&n>m){const _=2*Math.sqrt(1+n-c-m);this._w=(d-u)/_,this._x=.25*_,this._y=(i+o)/_,this._z=(s+h)/_}else if(c>m){const _=2*Math.sqrt(1+c-n-m);this._w=(s-h)/_,this._x=(i+o)/_,this._y=.25*_,this._z=(u+d)/_}else{const _=2*Math.sqrt(1+m-n-c);this._w=(o-i)/_,this._x=(s+h)/_,this._y=(u+d)/_,this._z=.25*_}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(nn(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,o=e._w,c=t._x,u=t._y,h=t._z,d=t._w;return this._x=n*d+o*c+i*h-s*u,this._y=i*d+o*u+s*c-n*h,this._z=s*d+o*h+n*u-i*c,this._w=o*d-n*c-i*u-s*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,o=this._w;let c=o*e._w+n*e._x+i*e._y+s*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=o,this._x=n,this._y=i,this._z=s,this;const u=1-c*c;if(u<=Number.EPSILON){const _=1-t;return this._w=_*o+t*this._w,this._x=_*n+t*this._x,this._y=_*i+t*this._y,this._z=_*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(u),d=Math.atan2(h,c),m=Math.sin((1-t)*d)/h,p=Math.sin(t*d)/h;return this._w=o*m+this._w*p,this._x=n*m+this._x*p,this._y=i*m+this._y*p,this._z=s*m+this._z*p,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(s),n*Math.cos(s),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class I{constructor(e=0,t=0,n=0){I.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(qg.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(qg.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,o=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*o,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*o,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,o=e.y,c=e.z,u=e.w,h=u*t+o*i-c*n,d=u*n+c*t-s*i,m=u*i+s*n-o*t,p=-s*t-o*n-c*i;return this.x=h*u+p*-s+d*-c-m*-o,this.y=d*u+p*-o+m*-s-h*-c,this.z=m*u+p*-c+h*-o-d*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,o=t.x,c=t.y,u=t.z;return this.x=i*u-s*c,this.y=s*o-n*u,this.z=n*c-i*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return hf.copy(this).projectOnVector(e),this.sub(hf)}reflect(e){return this.sub(hf.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(nn(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const hf=new I,qg=new Un;class er{constructor(e=new I(1/0,1/0,1/0),t=new I(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(pr.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(pr.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=pr.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){if(e.updateWorldMatrix(!1,!1),e.boundingBox!==void 0)e.boundingBox===null&&e.computeBoundingBox(),ga.copy(e.boundingBox),ga.applyMatrix4(e.matrixWorld),this.union(ga);else{const i=e.geometry;if(i!==void 0)if(t&&i.attributes!==void 0&&i.attributes.position!==void 0){const s=i.attributes.position;for(let o=0,c=s.count;o<c;o++)pr.fromBufferAttribute(s,o).applyMatrix4(e.matrixWorld),this.expandByPoint(pr)}else i.boundingBox===null&&i.computeBoundingBox(),ga.copy(i.boundingBox),ga.applyMatrix4(e.matrixWorld),this.union(ga)}const n=e.children;for(let i=0,s=n.length;i<s;i++)this.expandByObject(n[i],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,pr),pr.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(So),_l.subVectors(this.max,So),_a.subVectors(e.a,So),va.subVectors(e.b,So),ya.subVectors(e.c,So),Hr.subVectors(va,_a),kr.subVectors(ya,va),ms.subVectors(_a,ya);let t=[0,-Hr.z,Hr.y,0,-kr.z,kr.y,0,-ms.z,ms.y,Hr.z,0,-Hr.x,kr.z,0,-kr.x,ms.z,0,-ms.x,-Hr.y,Hr.x,0,-kr.y,kr.x,0,-ms.y,ms.x,0];return!ff(t,_a,va,ya,_l)||(t=[1,0,0,0,1,0,0,0,1],!ff(t,_a,va,ya,_l))?!1:(vl.crossVectors(Hr,kr),t=[vl.x,vl.y,vl.z],ff(t,_a,va,ya,_l))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,pr).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(pr).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(dr[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),dr[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),dr[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),dr[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),dr[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),dr[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),dr[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),dr[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(dr),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const dr=[new I,new I,new I,new I,new I,new I,new I,new I],pr=new I,ga=new er,_a=new I,va=new I,ya=new I,Hr=new I,kr=new I,ms=new I,So=new I,_l=new I,vl=new I,gs=new I;function ff(r,e,t,n,i){for(let s=0,o=r.length-3;s<=o;s+=3){gs.fromArray(r,s);const c=i.x*Math.abs(gs.x)+i.y*Math.abs(gs.y)+i.z*Math.abs(gs.z),u=e.dot(gs),h=t.dot(gs),d=n.dot(gs);if(Math.max(-Math.max(u,h,d),Math.min(u,h,d))>c)return!1}return!0}const sA=new er,wo=new I,df=new I;class Fi{constructor(e=new I,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):sA.setFromPoints(e).getCenter(n);let i=0;for(let s=0,o=e.length;s<o;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;wo.subVectors(e,this.center);const t=wo.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.addScaledVector(wo,i/n),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(df.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(wo.copy(e.center).add(df)),this.expandByPoint(wo.copy(e.center).sub(df))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const mr=new I,pf=new I,yl=new I,Gr=new I,mf=new I,xl=new I,gf=new I;class Za{constructor(e=new I,t=new I(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,mr)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=mr.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(mr.copy(this.origin).addScaledVector(this.direction,t),mr.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){pf.copy(e).add(t).multiplyScalar(.5),yl.copy(t).sub(e).normalize(),Gr.copy(this.origin).sub(pf);const s=e.distanceTo(t)*.5,o=-this.direction.dot(yl),c=Gr.dot(this.direction),u=-Gr.dot(yl),h=Gr.lengthSq(),d=Math.abs(1-o*o);let m,p,_,v;if(d>0)if(m=o*u-c,p=o*c-u,v=s*d,m>=0)if(p>=-v)if(p<=v){const M=1/d;m*=M,p*=M,_=m*(m+o*p+2*c)+p*(o*m+p+2*u)+h}else p=s,m=Math.max(0,-(o*p+c)),_=-m*m+p*(p+2*u)+h;else p=-s,m=Math.max(0,-(o*p+c)),_=-m*m+p*(p+2*u)+h;else p<=-v?(m=Math.max(0,-(-o*s+c)),p=m>0?-s:Math.min(Math.max(-s,-u),s),_=-m*m+p*(p+2*u)+h):p<=v?(m=0,p=Math.min(Math.max(-s,-u),s),_=p*(p+2*u)+h):(m=Math.max(0,-(o*s+c)),p=m>0?s:Math.min(Math.max(-s,-u),s),_=-m*m+p*(p+2*u)+h);else p=o>0?-s:s,m=Math.max(0,-(o*p+c)),_=-m*m+p*(p+2*u)+h;return n&&n.copy(this.origin).addScaledVector(this.direction,m),i&&i.copy(pf).addScaledVector(yl,p),_}intersectSphere(e,t){mr.subVectors(e.center,this.origin);const n=mr.dot(this.direction),i=mr.dot(mr)-n*n,s=e.radius*e.radius;if(i>s)return null;const o=Math.sqrt(s-i),c=n-o,u=n+o;return u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,o,c,u;const h=1/this.direction.x,d=1/this.direction.y,m=1/this.direction.z,p=this.origin;return h>=0?(n=(e.min.x-p.x)*h,i=(e.max.x-p.x)*h):(n=(e.max.x-p.x)*h,i=(e.min.x-p.x)*h),d>=0?(s=(e.min.y-p.y)*d,o=(e.max.y-p.y)*d):(s=(e.max.y-p.y)*d,o=(e.min.y-p.y)*d),n>o||s>i||((s>n||isNaN(n))&&(n=s),(o<i||isNaN(i))&&(i=o),m>=0?(c=(e.min.z-p.z)*m,u=(e.max.z-p.z)*m):(c=(e.max.z-p.z)*m,u=(e.min.z-p.z)*m),n>u||c>i)||((c>n||n!==n)&&(n=c),(u<i||i!==i)&&(i=u),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,mr)!==null}intersectTriangle(e,t,n,i,s){mf.subVectors(t,e),xl.subVectors(n,e),gf.crossVectors(mf,xl);let o=this.direction.dot(gf),c;if(o>0){if(i)return null;c=1}else if(o<0)c=-1,o=-o;else return null;Gr.subVectors(this.origin,e);const u=c*this.direction.dot(xl.crossVectors(Gr,xl));if(u<0)return null;const h=c*this.direction.dot(mf.cross(Gr));if(h<0||u+h>o)return null;const d=-c*Gr.dot(gf);return d<0?null:this.at(d/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class at{constructor(e,t,n,i,s,o,c,u,h,d,m,p,_,v,M,y){at.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,n,i,s,o,c,u,h,d,m,p,_,v,M,y)}set(e,t,n,i,s,o,c,u,h,d,m,p,_,v,M,y){const g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=i,g[1]=s,g[5]=o,g[9]=c,g[13]=u,g[2]=h,g[6]=d,g[10]=m,g[14]=p,g[3]=_,g[7]=v,g[11]=M,g[15]=y,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new at().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/xa.setFromMatrixColumn(e,0).length(),s=1/xa.setFromMatrixColumn(e,1).length(),o=1/xa.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,s=e.z,o=Math.cos(n),c=Math.sin(n),u=Math.cos(i),h=Math.sin(i),d=Math.cos(s),m=Math.sin(s);if(e.order==="XYZ"){const p=o*d,_=o*m,v=c*d,M=c*m;t[0]=u*d,t[4]=-u*m,t[8]=h,t[1]=_+v*h,t[5]=p-M*h,t[9]=-c*u,t[2]=M-p*h,t[6]=v+_*h,t[10]=o*u}else if(e.order==="YXZ"){const p=u*d,_=u*m,v=h*d,M=h*m;t[0]=p+M*c,t[4]=v*c-_,t[8]=o*h,t[1]=o*m,t[5]=o*d,t[9]=-c,t[2]=_*c-v,t[6]=M+p*c,t[10]=o*u}else if(e.order==="ZXY"){const p=u*d,_=u*m,v=h*d,M=h*m;t[0]=p-M*c,t[4]=-o*m,t[8]=v+_*c,t[1]=_+v*c,t[5]=o*d,t[9]=M-p*c,t[2]=-o*h,t[6]=c,t[10]=o*u}else if(e.order==="ZYX"){const p=o*d,_=o*m,v=c*d,M=c*m;t[0]=u*d,t[4]=v*h-_,t[8]=p*h+M,t[1]=u*m,t[5]=M*h+p,t[9]=_*h-v,t[2]=-h,t[6]=c*u,t[10]=o*u}else if(e.order==="YZX"){const p=o*u,_=o*h,v=c*u,M=c*h;t[0]=u*d,t[4]=M-p*m,t[8]=v*m+_,t[1]=m,t[5]=o*d,t[9]=-c*d,t[2]=-h*d,t[6]=_*m+v,t[10]=p-M*m}else if(e.order==="XZY"){const p=o*u,_=o*h,v=c*u,M=c*h;t[0]=u*d,t[4]=-m,t[8]=h*d,t[1]=p*m+M,t[5]=o*d,t[9]=_*m-v,t[2]=v*m-_,t[6]=c*d,t[10]=M*m+p}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(aA,e,oA)}lookAt(e,t,n){const i=this.elements;return ni.subVectors(e,t),ni.lengthSq()===0&&(ni.z=1),ni.normalize(),Vr.crossVectors(n,ni),Vr.lengthSq()===0&&(Math.abs(n.z)===1?ni.x+=1e-4:ni.z+=1e-4,ni.normalize(),Vr.crossVectors(n,ni)),Vr.normalize(),Ml.crossVectors(ni,Vr),i[0]=Vr.x,i[4]=Ml.x,i[8]=ni.x,i[1]=Vr.y,i[5]=Ml.y,i[9]=ni.y,i[2]=Vr.z,i[6]=Ml.z,i[10]=ni.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,o=n[0],c=n[4],u=n[8],h=n[12],d=n[1],m=n[5],p=n[9],_=n[13],v=n[2],M=n[6],y=n[10],g=n[14],S=n[3],b=n[7],E=n[11],A=n[15],L=i[0],F=i[4],N=i[8],T=i[12],U=i[1],$=i[5],he=i[9],Y=i[13],Z=i[2],X=i[6],pe=i[10],ne=i[14],oe=i[3],me=i[7],_e=i[11],Ee=i[15];return s[0]=o*L+c*U+u*Z+h*oe,s[4]=o*F+c*$+u*X+h*me,s[8]=o*N+c*he+u*pe+h*_e,s[12]=o*T+c*Y+u*ne+h*Ee,s[1]=d*L+m*U+p*Z+_*oe,s[5]=d*F+m*$+p*X+_*me,s[9]=d*N+m*he+p*pe+_*_e,s[13]=d*T+m*Y+p*ne+_*Ee,s[2]=v*L+M*U+y*Z+g*oe,s[6]=v*F+M*$+y*X+g*me,s[10]=v*N+M*he+y*pe+g*_e,s[14]=v*T+M*Y+y*ne+g*Ee,s[3]=S*L+b*U+E*Z+A*oe,s[7]=S*F+b*$+E*X+A*me,s[11]=S*N+b*he+E*pe+A*_e,s[15]=S*T+b*Y+E*ne+A*Ee,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],o=e[1],c=e[5],u=e[9],h=e[13],d=e[2],m=e[6],p=e[10],_=e[14],v=e[3],M=e[7],y=e[11],g=e[15];return v*(+s*u*m-i*h*m-s*c*p+n*h*p+i*c*_-n*u*_)+M*(+t*u*_-t*h*p+s*o*p-i*o*_+i*h*d-s*u*d)+y*(+t*h*m-t*c*_-s*o*m+n*o*_+s*c*d-n*h*d)+g*(-i*c*d-t*u*m+t*c*p+i*o*m-n*o*p+n*u*d)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],c=e[5],u=e[6],h=e[7],d=e[8],m=e[9],p=e[10],_=e[11],v=e[12],M=e[13],y=e[14],g=e[15],S=m*y*h-M*p*h+M*u*_-c*y*_-m*u*g+c*p*g,b=v*p*h-d*y*h-v*u*_+o*y*_+d*u*g-o*p*g,E=d*M*h-v*m*h+v*c*_-o*M*_-d*c*g+o*m*g,A=v*m*u-d*M*u-v*c*p+o*M*p+d*c*y-o*m*y,L=t*S+n*b+i*E+s*A;if(L===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const F=1/L;return e[0]=S*F,e[1]=(M*p*s-m*y*s-M*i*_+n*y*_+m*i*g-n*p*g)*F,e[2]=(c*y*s-M*u*s+M*i*h-n*y*h-c*i*g+n*u*g)*F,e[3]=(m*u*s-c*p*s-m*i*h+n*p*h+c*i*_-n*u*_)*F,e[4]=b*F,e[5]=(d*y*s-v*p*s+v*i*_-t*y*_-d*i*g+t*p*g)*F,e[6]=(v*u*s-o*y*s-v*i*h+t*y*h+o*i*g-t*u*g)*F,e[7]=(o*p*s-d*u*s+d*i*h-t*p*h-o*i*_+t*u*_)*F,e[8]=E*F,e[9]=(v*m*s-d*M*s-v*n*_+t*M*_+d*n*g-t*m*g)*F,e[10]=(o*M*s-v*c*s+v*n*h-t*M*h-o*n*g+t*c*g)*F,e[11]=(d*c*s-o*m*s-d*n*h+t*m*h+o*n*_-t*c*_)*F,e[12]=A*F,e[13]=(d*M*i-v*m*i+v*n*p-t*M*p-d*n*y+t*m*y)*F,e[14]=(v*c*i-o*M*i-v*n*u+t*M*u+o*n*y-t*c*y)*F,e[15]=(o*m*i-d*c*i+d*n*u-t*m*u-o*n*p+t*c*p)*F,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,o=e.x,c=e.y,u=e.z,h=s*o,d=s*c;return this.set(h*o+n,h*c-i*u,h*u+i*c,0,h*c+i*u,d*c+n,d*u-i*o,0,h*u-i*c,d*u+i*o,s*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,o){return this.set(1,n,s,0,e,1,o,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,o=t._y,c=t._z,u=t._w,h=s+s,d=o+o,m=c+c,p=s*h,_=s*d,v=s*m,M=o*d,y=o*m,g=c*m,S=u*h,b=u*d,E=u*m,A=n.x,L=n.y,F=n.z;return i[0]=(1-(M+g))*A,i[1]=(_+E)*A,i[2]=(v-b)*A,i[3]=0,i[4]=(_-E)*L,i[5]=(1-(p+g))*L,i[6]=(y+S)*L,i[7]=0,i[8]=(v+b)*F,i[9]=(y-S)*F,i[10]=(1-(p+M))*F,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=xa.set(i[0],i[1],i[2]).length();const o=xa.set(i[4],i[5],i[6]).length(),c=xa.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],Ri.copy(this);const h=1/s,d=1/o,m=1/c;return Ri.elements[0]*=h,Ri.elements[1]*=h,Ri.elements[2]*=h,Ri.elements[4]*=d,Ri.elements[5]*=d,Ri.elements[6]*=d,Ri.elements[8]*=m,Ri.elements[9]*=m,Ri.elements[10]*=m,t.setFromRotationMatrix(Ri),n.x=s,n.y=o,n.z=c,this}makePerspective(e,t,n,i,s,o,c=Zi){const u=this.elements,h=2*s/(t-e),d=2*s/(n-i),m=(t+e)/(t-e),p=(n+i)/(n-i);let _,v;if(c===Zi)_=-(o+s)/(o-s),v=-2*o*s/(o-s);else if(c===tc)_=-o/(o-s),v=-o*s/(o-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+c);return u[0]=h,u[4]=0,u[8]=m,u[12]=0,u[1]=0,u[5]=d,u[9]=p,u[13]=0,u[2]=0,u[6]=0,u[10]=_,u[14]=v,u[3]=0,u[7]=0,u[11]=-1,u[15]=0,this}makeOrthographic(e,t,n,i,s,o,c=Zi){const u=this.elements,h=1/(t-e),d=1/(n-i),m=1/(o-s),p=(t+e)*h,_=(n+i)*d;let v,M;if(c===Zi)v=(o+s)*m,M=-2*m;else if(c===tc)v=s*m,M=-1*m;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+c);return u[0]=2*h,u[4]=0,u[8]=0,u[12]=-p,u[1]=0,u[5]=2*d,u[9]=0,u[13]=-_,u[2]=0,u[6]=0,u[10]=M,u[14]=-v,u[3]=0,u[7]=0,u[11]=0,u[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const xa=new I,Ri=new at,aA=new I(0,0,0),oA=new I(1,1,1),Vr=new I,Ml=new I,ni=new I,Yg=new at,Zg=new Un;class fc{constructor(e=0,t=0,n=0,i=fc.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],o=i[4],c=i[8],u=i[1],h=i[5],d=i[9],m=i[2],p=i[6],_=i[10];switch(t){case"XYZ":this._y=Math.asin(nn(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-d,_),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(p,h),this._z=0);break;case"YXZ":this._x=Math.asin(-nn(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(c,_),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-m,s),this._z=0);break;case"ZXY":this._x=Math.asin(nn(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(-m,_),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(u,s));break;case"ZYX":this._y=Math.asin(-nn(m,-1,1)),Math.abs(m)<.9999999?(this._x=Math.atan2(p,_),this._z=Math.atan2(u,s)):(this._x=0,this._z=Math.atan2(-o,h));break;case"YZX":this._z=Math.asin(nn(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-d,h),this._y=Math.atan2(-m,s)):(this._x=0,this._y=Math.atan2(c,_));break;case"XZY":this._z=Math.asin(-nn(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(p,h),this._y=Math.atan2(c,s)):(this._x=Math.atan2(-d,_),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Yg.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Yg,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Zg.setFromEuler(this),this.setFromQuaternion(Zg,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}fc.DEFAULT_ORDER="XYZ";class Uu{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let cA=0;const $g=new I,Ma=new Un,gr=new at,bl=new I,Eo=new I,lA=new I,uA=new Un,Kg=new I(1,0,0),Jg=new I(0,1,0),Qg=new I(0,0,1),hA={type:"added"},jg={type:"removed"};class Ct extends ji{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:cA++}),this.uuid=li(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Ct.DEFAULT_UP.clone();const e=new I,t=new fc,n=new Un,i=new I(1,1,1);function s(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new at},normalMatrix:{value:new pt}}),this.matrix=new at,this.matrixWorld=new at,this.matrixAutoUpdate=Ct.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Ct.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new Uu,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Ma.setFromAxisAngle(e,t),this.quaternion.multiply(Ma),this}rotateOnWorldAxis(e,t){return Ma.setFromAxisAngle(e,t),this.quaternion.premultiply(Ma),this}rotateX(e){return this.rotateOnAxis(Kg,e)}rotateY(e){return this.rotateOnAxis(Jg,e)}rotateZ(e){return this.rotateOnAxis(Qg,e)}translateOnAxis(e,t){return $g.copy(e).applyQuaternion(this.quaternion),this.position.add($g.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Kg,e)}translateY(e){return this.translateOnAxis(Jg,e)}translateZ(e){return this.translateOnAxis(Qg,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(gr.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?bl.copy(e):bl.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Eo.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?gr.lookAt(Eo,bl,this.up):gr.lookAt(bl,Eo,this.up),this.quaternion.setFromRotationMatrix(gr),i&&(gr.extractRotation(i.matrixWorld),Ma.setFromRotationMatrix(gr),this.quaternion.premultiply(Ma.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(hA)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(jg)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(jg)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),gr.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),gr.multiply(e.parent.matrixWorld)),e.applyMatrix4(gr),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t){let n=[];this[e]===t&&n.push(this);for(let i=0,s=this.children.length;i<s;i++){const o=this.children[i].getObjectsByProperty(e,t);o.length>0&&(n=n.concat(o))}return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Eo,e,lA),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Eo,uA,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const s=t[n];(s.matrixWorldAutoUpdate===!0||e===!0)&&s.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,o=i.length;s<o;s++){const c=i[s];c.matrixWorldAutoUpdate===!0&&c.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function s(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let h=0,d=u.length;h<d;h++){const m=u[h];s(e.shapes,m)}else s(e.shapes,u)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,h=this.material.length;u<h;u++)c.push(s(e.materials,this.material[u]));i.material=c}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];i.animations.push(s(e.animations,u))}}if(t){const c=o(e.geometries),u=o(e.materials),h=o(e.textures),d=o(e.images),m=o(e.shapes),p=o(e.skeletons),_=o(e.animations),v=o(e.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),h.length>0&&(n.textures=h),d.length>0&&(n.images=d),m.length>0&&(n.shapes=m),p.length>0&&(n.skeletons=p),_.length>0&&(n.animations=_),v.length>0&&(n.nodes=v)}return n.object=i,n;function o(c){const u=[];for(const h in c){const d=c[h];delete d.metadata,u.push(d)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Ct.DEFAULT_UP=new I(0,1,0);Ct.DEFAULT_MATRIX_AUTO_UPDATE=!0;Ct.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Ci=new I,_r=new I,_f=new I,vr=new I,ba=new I,Sa=new I,e_=new I,vf=new I,yf=new I,xf=new I;let Sl=!1;class $n{constructor(e=new I,t=new I,n=new I){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),Ci.subVectors(e,t),i.cross(Ci);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){Ci.subVectors(i,t),_r.subVectors(n,t),_f.subVectors(e,t);const o=Ci.dot(Ci),c=Ci.dot(_r),u=Ci.dot(_f),h=_r.dot(_r),d=_r.dot(_f),m=o*h-c*c;if(m===0)return s.set(-2,-1,-1);const p=1/m,_=(h*u-c*d)*p,v=(o*d-c*u)*p;return s.set(1-_-v,v,_)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,vr),vr.x>=0&&vr.y>=0&&vr.x+vr.y<=1}static getUV(e,t,n,i,s,o,c,u){return Sl===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Sl=!0),this.getInterpolation(e,t,n,i,s,o,c,u)}static getInterpolation(e,t,n,i,s,o,c,u){return this.getBarycoord(e,t,n,i,vr),u.setScalar(0),u.addScaledVector(s,vr.x),u.addScaledVector(o,vr.y),u.addScaledVector(c,vr.z),u}static isFrontFacing(e,t,n,i){return Ci.subVectors(n,t),_r.subVectors(e,t),Ci.cross(_r).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Ci.subVectors(this.c,this.b),_r.subVectors(this.a,this.b),Ci.cross(_r).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return $n.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return $n.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,s){return Sl===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Sl=!0),$n.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}getInterpolation(e,t,n,i,s){return $n.getInterpolation(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return $n.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return $n.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let o,c;ba.subVectors(i,n),Sa.subVectors(s,n),vf.subVectors(e,n);const u=ba.dot(vf),h=Sa.dot(vf);if(u<=0&&h<=0)return t.copy(n);yf.subVectors(e,i);const d=ba.dot(yf),m=Sa.dot(yf);if(d>=0&&m<=d)return t.copy(i);const p=u*m-d*h;if(p<=0&&u>=0&&d<=0)return o=u/(u-d),t.copy(n).addScaledVector(ba,o);xf.subVectors(e,s);const _=ba.dot(xf),v=Sa.dot(xf);if(v>=0&&_<=v)return t.copy(s);const M=_*h-u*v;if(M<=0&&h>=0&&v<=0)return c=h/(h-v),t.copy(n).addScaledVector(Sa,c);const y=d*v-_*m;if(y<=0&&m-d>=0&&_-v>=0)return e_.subVectors(s,i),c=(m-d)/(m-d+(_-v)),t.copy(i).addScaledVector(e_,c);const g=1/(y+M+p);return o=M*g,c=p*g,t.copy(n).addScaledVector(ba,o).addScaledVector(Sa,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let fA=0;class Dn extends ji{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:fA++}),this.uuid=li(),this.name="",this.type="Material",this.blending=Ds,this.side=Ji,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=Nd,this.blendDst=Od,this.blendEquation=As,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=yu,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Sv,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=fu,this.stencilZFail=fu,this.stencilZPass=fu,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];if(i===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(n.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(n.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(n.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==Ds&&(n.blending=this.blending),this.side!==Ji&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(n.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData);function i(s){const o=[];for(const c in s){const u=s[c];delete u.metadata,o.push(u)}return o}if(t){const s=i(e.textures),o=i(e.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}const Dv={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Pi={h:0,s:0,l:0},wl={h:0,s:0,l:0};function Mf(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}class Oe{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,n)}set(e,t,n){if(t===void 0&&n===void 0){const i=e;i&&i.isColor?this.copy(i):typeof i=="number"?this.setHex(i):typeof i=="string"&&this.setStyle(i)}else this.setRGB(e,t,n);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=ut){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,si.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=si.workingColorSpace){return this.r=e,this.g=t,this.b=n,si.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=si.workingColorSpace){if(e=Yd(e,1),t=nn(t,0,1),n=nn(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,o=2*n-s;this.r=Mf(o,s,e+1/3),this.g=Mf(o,s,e),this.b=Mf(o,s,e-1/3)}return si.toWorkingColorSpace(this,i),this}setStyle(e,t=ut){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const o=i[1],c=i[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return n(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],o=s.length;if(o===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=ut){const n=Dv[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=ka(e.r),this.g=ka(e.g),this.b=ka(e.b),this}copyLinearToSRGB(e){return this.r=lf(e.r),this.g=lf(e.g),this.b=lf(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=ut){return si.fromWorkingColorSpace(Pn.copy(this),e),Math.round(nn(Pn.r*255,0,255))*65536+Math.round(nn(Pn.g*255,0,255))*256+Math.round(nn(Pn.b*255,0,255))}getHexString(e=ut){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=si.workingColorSpace){si.fromWorkingColorSpace(Pn.copy(this),t);const n=Pn.r,i=Pn.g,s=Pn.b,o=Math.max(n,i,s),c=Math.min(n,i,s);let u,h;const d=(c+o)/2;if(c===o)u=0,h=0;else{const m=o-c;switch(h=d<=.5?m/(o+c):m/(2-o-c),o){case n:u=(i-s)/m+(i<s?6:0);break;case i:u=(s-n)/m+2;break;case s:u=(n-i)/m+4;break}u/=6}return e.h=u,e.s=h,e.l=d,e}getRGB(e,t=si.workingColorSpace){return si.fromWorkingColorSpace(Pn.copy(this),t),e.r=Pn.r,e.g=Pn.g,e.b=Pn.b,e}getStyle(e=ut){si.fromWorkingColorSpace(Pn.copy(this),e);const t=Pn.r,n=Pn.g,i=Pn.b;return e!==ut?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(n*255)},${Math.round(i*255)})`}offsetHSL(e,t,n){return this.getHSL(Pi),Pi.h+=e,Pi.s+=t,Pi.l+=n,this.setHSL(Pi.h,Pi.s,Pi.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(Pi),e.getHSL(wl);const n=Ho(Pi.h,wl.h,t),i=Ho(Pi.s,wl.s,t),s=Ho(Pi.l,wl.l,t);return this.setHSL(n,i,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,s=e.elements;return this.r=s[0]*t+s[3]*n+s[6]*i,this.g=s[1]*t+s[4]*n+s[7]*i,this.b=s[2]*t+s[5]*n+s[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const Pn=new Oe;Oe.NAMES=Dv;class is extends Dn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Oe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=hc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const br=dA();function dA(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),n=new Uint32Array(512),i=new Uint32Array(512);for(let u=0;u<256;++u){const h=u-127;h<-27?(n[u]=0,n[u|256]=32768,i[u]=24,i[u|256]=24):h<-14?(n[u]=1024>>-h-14,n[u|256]=1024>>-h-14|32768,i[u]=-h-1,i[u|256]=-h-1):h<=15?(n[u]=h+15<<10,n[u|256]=h+15<<10|32768,i[u]=13,i[u|256]=13):h<128?(n[u]=31744,n[u|256]=64512,i[u]=24,i[u|256]=24):(n[u]=31744,n[u|256]=64512,i[u]=13,i[u|256]=13)}const s=new Uint32Array(2048),o=new Uint32Array(64),c=new Uint32Array(64);for(let u=1;u<1024;++u){let h=u<<13,d=0;for(;!(h&8388608);)h<<=1,d-=8388608;h&=-8388609,d+=947912704,s[u]=h|d}for(let u=1024;u<2048;++u)s[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)o[u]=u<<23;o[31]=1199570944,o[32]=2147483648;for(let u=33;u<63;++u)o[u]=2147483648+(u-32<<23);o[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(c[u]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:s,exponentTable:o,offsetTable:c}}function Zn(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=nn(r,-65504,65504),br.floatView[0]=r;const e=br.uint32View[0],t=e>>23&511;return br.baseTable[t]+((e&8388607)>>br.shiftTable[t])}function Oo(r){const e=r>>10;return br.uint32View[0]=br.mantissaTable[br.offsetTable[e]+(r&1023)]+br.exponentTable[e],br.floatView[0]}const pA={toHalfFloat:Zn,fromHalfFloat:Oo},hn=new I,El=new ce;class Nt{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n,this.usage=ec,this.updateRange={offset:0,count:-1},this.gpuType=Yi,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)El.fromBufferAttribute(this,t),El.applyMatrix3(e),this.setXY(t,El.x,El.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)hn.fromBufferAttribute(this,t),hn.applyMatrix3(e),this.setXYZ(t,hn.x,hn.y,hn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)hn.fromBufferAttribute(this,t),hn.applyMatrix4(e),this.setXYZ(t,hn.x,hn.y,hn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)hn.fromBufferAttribute(this,t),hn.applyNormalMatrix(e),this.setXYZ(t,hn.x,hn.y,hn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)hn.fromBufferAttribute(this,t),hn.transformDirection(e),this.setXYZ(t,hn.x,hn.y,hn.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=ci(t,this.array)),t}setX(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=ci(t,this.array)),t}setY(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=ci(t,this.array)),t}setZ(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=ci(t,this.array)),t}setW(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array),i=mt(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array),i=mt(i,this.array),s=mt(s,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==ec&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class mA extends Nt{constructor(e,t,n){super(new Int8Array(e),t,n)}}class gA extends Nt{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class _A extends Nt{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class vA extends Nt{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Kd extends Nt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class yA extends Nt{constructor(e,t,n){super(new Int32Array(e),t,n)}}class Jd extends Nt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class xA extends Nt{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}getX(e){let t=Oo(this.array[e*this.itemSize]);return this.normalized&&(t=ci(t,this.array)),t}setX(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize]=Zn(t),this}getY(e){let t=Oo(this.array[e*this.itemSize+1]);return this.normalized&&(t=ci(t,this.array)),t}setY(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize+1]=Zn(t),this}getZ(e){let t=Oo(this.array[e*this.itemSize+2]);return this.normalized&&(t=ci(t,this.array)),t}setZ(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize+2]=Zn(t),this}getW(e){let t=Oo(this.array[e*this.itemSize+3]);return this.normalized&&(t=ci(t,this.array)),t}setW(e,t){return this.normalized&&(t=mt(t,this.array)),this.array[e*this.itemSize+3]=Zn(t),this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array)),this.array[e+0]=Zn(t),this.array[e+1]=Zn(n),this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array),i=mt(i,this.array)),this.array[e+0]=Zn(t),this.array[e+1]=Zn(n),this.array[e+2]=Zn(i),this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array),i=mt(i,this.array),s=mt(s,this.array)),this.array[e+0]=Zn(t),this.array[e+1]=Zn(n),this.array[e+2]=Zn(i),this.array[e+3]=Zn(s),this}}class We extends Nt{constructor(e,t,n){super(new Float32Array(e),t,n)}}class MA extends Nt{constructor(e,t,n){super(new Float64Array(e),t,n)}}let bA=0;const Mi=new at,bf=new Ct,wa=new I,ii=new er,To=new er,yn=new I;class _t extends ji{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:bA++}),this.uuid=li(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Uv(e)?Jd:Kd)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new pt().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Mi.makeRotationFromQuaternion(e),this.applyMatrix4(Mi),this}rotateX(e){return Mi.makeRotationX(e),this.applyMatrix4(Mi),this}rotateY(e){return Mi.makeRotationY(e),this.applyMatrix4(Mi),this}rotateZ(e){return Mi.makeRotationZ(e),this.applyMatrix4(Mi),this}translate(e,t,n){return Mi.makeTranslation(e,t,n),this.applyMatrix4(Mi),this}scale(e,t,n){return Mi.makeScale(e,t,n),this.applyMatrix4(Mi),this}lookAt(e){return bf.lookAt(e),bf.updateMatrix(),this.applyMatrix4(bf.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(wa).negate(),this.translate(wa.x,wa.y,wa.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new We(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new er);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new I(-1/0,-1/0,-1/0),new I(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];ii.setFromBufferAttribute(s),this.morphTargetsRelative?(yn.addVectors(this.boundingBox.min,ii.min),this.boundingBox.expandByPoint(yn),yn.addVectors(this.boundingBox.max,ii.max),this.boundingBox.expandByPoint(yn)):(this.boundingBox.expandByPoint(ii.min),this.boundingBox.expandByPoint(ii.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Fi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new I,1/0);return}if(e){const n=this.boundingSphere.center;if(ii.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const c=t[s];To.setFromBufferAttribute(c),this.morphTargetsRelative?(yn.addVectors(ii.min,To.min),ii.expandByPoint(yn),yn.addVectors(ii.max,To.max),ii.expandByPoint(yn)):(ii.expandByPoint(To.min),ii.expandByPoint(To.max))}ii.getCenter(n);let i=0;for(let s=0,o=e.count;s<o;s++)yn.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(yn));if(t)for(let s=0,o=t.length;s<o;s++){const c=t[s],u=this.morphTargetsRelative;for(let h=0,d=c.count;h<d;h++)yn.fromBufferAttribute(c,h),u&&(wa.fromBufferAttribute(e,h),yn.add(wa)),i=Math.max(i,n.distanceToSquared(yn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,s=t.normal.array,o=t.uv.array,c=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Nt(new Float32Array(4*c),4));const u=this.getAttribute("tangent").array,h=[],d=[];for(let U=0;U<c;U++)h[U]=new I,d[U]=new I;const m=new I,p=new I,_=new I,v=new ce,M=new ce,y=new ce,g=new I,S=new I;function b(U,$,he){m.fromArray(i,U*3),p.fromArray(i,$*3),_.fromArray(i,he*3),v.fromArray(o,U*2),M.fromArray(o,$*2),y.fromArray(o,he*2),p.sub(m),_.sub(m),M.sub(v),y.sub(v);const Y=1/(M.x*y.y-y.x*M.y);isFinite(Y)&&(g.copy(p).multiplyScalar(y.y).addScaledVector(_,-M.y).multiplyScalar(Y),S.copy(_).multiplyScalar(M.x).addScaledVector(p,-y.x).multiplyScalar(Y),h[U].add(g),h[$].add(g),h[he].add(g),d[U].add(S),d[$].add(S),d[he].add(S))}let E=this.groups;E.length===0&&(E=[{start:0,count:n.length}]);for(let U=0,$=E.length;U<$;++U){const he=E[U],Y=he.start,Z=he.count;for(let X=Y,pe=Y+Z;X<pe;X+=3)b(n[X+0],n[X+1],n[X+2])}const A=new I,L=new I,F=new I,N=new I;function T(U){F.fromArray(s,U*3),N.copy(F);const $=h[U];A.copy($),A.sub(F.multiplyScalar(F.dot($))).normalize(),L.crossVectors(N,$);const Y=L.dot(d[U])<0?-1:1;u[U*4]=A.x,u[U*4+1]=A.y,u[U*4+2]=A.z,u[U*4+3]=Y}for(let U=0,$=E.length;U<$;++U){const he=E[U],Y=he.start,Z=he.count;for(let X=Y,pe=Y+Z;X<pe;X+=3)T(n[X+0]),T(n[X+1]),T(n[X+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Nt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let p=0,_=n.count;p<_;p++)n.setXYZ(p,0,0,0);const i=new I,s=new I,o=new I,c=new I,u=new I,h=new I,d=new I,m=new I;if(e)for(let p=0,_=e.count;p<_;p+=3){const v=e.getX(p+0),M=e.getX(p+1),y=e.getX(p+2);i.fromBufferAttribute(t,v),s.fromBufferAttribute(t,M),o.fromBufferAttribute(t,y),d.subVectors(o,s),m.subVectors(i,s),d.cross(m),c.fromBufferAttribute(n,v),u.fromBufferAttribute(n,M),h.fromBufferAttribute(n,y),c.add(d),u.add(d),h.add(d),n.setXYZ(v,c.x,c.y,c.z),n.setXYZ(M,u.x,u.y,u.z),n.setXYZ(y,h.x,h.y,h.z)}else for(let p=0,_=t.count;p<_;p+=3)i.fromBufferAttribute(t,p+0),s.fromBufferAttribute(t,p+1),o.fromBufferAttribute(t,p+2),d.subVectors(o,s),m.subVectors(i,s),d.cross(m),n.setXYZ(p+0,d.x,d.y,d.z),n.setXYZ(p+1,d.x,d.y,d.z),n.setXYZ(p+2,d.x,d.y,d.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)yn.fromBufferAttribute(e,t),yn.normalize(),e.setXYZ(t,yn.x,yn.y,yn.z)}toNonIndexed(){function e(c,u){const h=c.array,d=c.itemSize,m=c.normalized,p=new h.constructor(u.length*d);let _=0,v=0;for(let M=0,y=u.length;M<y;M++){c.isInterleavedBufferAttribute?_=u[M]*c.data.stride+c.offset:_=u[M]*d;for(let g=0;g<d;g++)p[v++]=h[_++]}return new Nt(p,d,m)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new _t,n=this.index.array,i=this.attributes;for(const c in i){const u=i[c],h=e(u,n);t.setAttribute(c,h)}const s=this.morphAttributes;for(const c in s){const u=[],h=s[c];for(let d=0,m=h.length;d<m;d++){const p=h[d],_=e(p,n);u.push(_)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let c=0,u=o.length;c<u;c++){const h=o[c];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const h in u)u[h]!==void 0&&(e[h]=u[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const h=n[u];e.data.attributes[u]=h.toJSON(e.data)}const i={};let s=!1;for(const u in this.morphAttributes){const h=this.morphAttributes[u],d=[];for(let m=0,p=h.length;m<p;m++){const _=h[m];d.push(_.toJSON(e.data))}d.length>0&&(i[u]=d,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const d=i[h];this.setAttribute(h,d.clone(t))}const s=e.morphAttributes;for(const h in s){const d=[],m=s[h];for(let p=0,_=m.length;p<_;p++)d.push(m[p].clone(t));this.morphAttributes[h]=d}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let h=0,d=o.length;h<d;h++){const m=o[h];this.addGroup(m.start,m.count,m.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const t_=new at,_s=new Za,Tl=new Fi,n_=new I,Ea=new I,Ta=new I,Aa=new I,Sf=new I,Al=new I,Rl=new ce,Cl=new ce,Pl=new ce,i_=new I,r_=new I,s_=new I,Ll=new I,Il=new I;class Mn extends Ct{constructor(e=new _t,t=new is){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,s=n.morphAttributes.position,o=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const c=this.morphTargetInfluences;if(s&&c){Al.set(0,0,0);for(let u=0,h=s.length;u<h;u++){const d=c[u],m=s[u];d!==0&&(Sf.fromBufferAttribute(m,e),o?Al.addScaledVector(Sf,d):Al.addScaledVector(Sf.sub(t),d))}t.add(Al)}return t}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;i!==void 0&&(n.boundingSphere===null&&n.computeBoundingSphere(),Tl.copy(n.boundingSphere),Tl.applyMatrix4(s),_s.copy(e.ray).recast(e.near),!(Tl.containsPoint(_s.origin)===!1&&(_s.intersectSphere(Tl,n_)===null||_s.origin.distanceToSquared(n_)>(e.far-e.near)**2))&&(t_.copy(s).invert(),_s.copy(e.ray).applyMatrix4(t_),!(n.boundingBox!==null&&_s.intersectsBox(n.boundingBox)===!1)&&this._computeIntersections(e,t,_s)))}_computeIntersections(e,t,n){let i;const s=this.geometry,o=this.material,c=s.index,u=s.attributes.position,h=s.attributes.uv,d=s.attributes.uv1,m=s.attributes.normal,p=s.groups,_=s.drawRange;if(c!==null)if(Array.isArray(o))for(let v=0,M=p.length;v<M;v++){const y=p[v],g=o[y.materialIndex],S=Math.max(y.start,_.start),b=Math.min(c.count,Math.min(y.start+y.count,_.start+_.count));for(let E=S,A=b;E<A;E+=3){const L=c.getX(E),F=c.getX(E+1),N=c.getX(E+2);i=Ul(this,g,e,n,h,d,m,L,F,N),i&&(i.faceIndex=Math.floor(E/3),i.face.materialIndex=y.materialIndex,t.push(i))}}else{const v=Math.max(0,_.start),M=Math.min(c.count,_.start+_.count);for(let y=v,g=M;y<g;y+=3){const S=c.getX(y),b=c.getX(y+1),E=c.getX(y+2);i=Ul(this,o,e,n,h,d,m,S,b,E),i&&(i.faceIndex=Math.floor(y/3),t.push(i))}}else if(u!==void 0)if(Array.isArray(o))for(let v=0,M=p.length;v<M;v++){const y=p[v],g=o[y.materialIndex],S=Math.max(y.start,_.start),b=Math.min(u.count,Math.min(y.start+y.count,_.start+_.count));for(let E=S,A=b;E<A;E+=3){const L=E,F=E+1,N=E+2;i=Ul(this,g,e,n,h,d,m,L,F,N),i&&(i.faceIndex=Math.floor(E/3),i.face.materialIndex=y.materialIndex,t.push(i))}}else{const v=Math.max(0,_.start),M=Math.min(u.count,_.start+_.count);for(let y=v,g=M;y<g;y+=3){const S=y,b=y+1,E=y+2;i=Ul(this,o,e,n,h,d,m,S,b,E),i&&(i.faceIndex=Math.floor(y/3),t.push(i))}}}}function SA(r,e,t,n,i,s,o,c){let u;if(e.side===In?u=n.intersectTriangle(o,s,i,!0,c):u=n.intersectTriangle(i,s,o,e.side===Ji,c),u===null)return null;Il.copy(c),Il.applyMatrix4(r.matrixWorld);const h=t.ray.origin.distanceTo(Il);return h<t.near||h>t.far?null:{distance:h,point:Il.clone(),object:r}}function Ul(r,e,t,n,i,s,o,c,u,h){r.getVertexPosition(c,Ea),r.getVertexPosition(u,Ta),r.getVertexPosition(h,Aa);const d=SA(r,e,t,n,Ea,Ta,Aa,Ll);if(d){i&&(Rl.fromBufferAttribute(i,c),Cl.fromBufferAttribute(i,u),Pl.fromBufferAttribute(i,h),d.uv=$n.getInterpolation(Ll,Ea,Ta,Aa,Rl,Cl,Pl,new ce)),s&&(Rl.fromBufferAttribute(s,c),Cl.fromBufferAttribute(s,u),Pl.fromBufferAttribute(s,h),d.uv1=$n.getInterpolation(Ll,Ea,Ta,Aa,Rl,Cl,Pl,new ce),d.uv2=d.uv1),o&&(i_.fromBufferAttribute(o,c),r_.fromBufferAttribute(o,u),s_.fromBufferAttribute(o,h),d.normal=$n.getInterpolation(Ll,Ea,Ta,Aa,i_,r_,s_,new I),d.normal.dot(n.direction)>0&&d.normal.multiplyScalar(-1));const m={a:c,b:u,c:h,normal:new I,materialIndex:0};$n.getNormal(Ea,Ta,Aa,m.normal),d.face=m}return d}class rs extends _t{constructor(e=1,t=1,n=1,i=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:o};const c=this;i=Math.floor(i),s=Math.floor(s),o=Math.floor(o);const u=[],h=[],d=[],m=[];let p=0,_=0;v("z","y","x",-1,-1,n,t,e,o,s,0),v("z","y","x",1,-1,n,t,-e,o,s,1),v("x","z","y",1,1,e,n,t,i,o,2),v("x","z","y",1,-1,e,n,-t,i,o,3),v("x","y","z",1,-1,e,t,n,i,s,4),v("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(u),this.setAttribute("position",new We(h,3)),this.setAttribute("normal",new We(d,3)),this.setAttribute("uv",new We(m,2));function v(M,y,g,S,b,E,A,L,F,N,T){const U=E/F,$=A/N,he=E/2,Y=A/2,Z=L/2,X=F+1,pe=N+1;let ne=0,oe=0;const me=new I;for(let _e=0;_e<pe;_e++){const Ee=_e*$-Y;for(let j=0;j<X;j++){const ve=j*U-he;me[M]=ve*S,me[y]=Ee*b,me[g]=Z,h.push(me.x,me.y,me.z),me[M]=0,me[y]=0,me[g]=L>0?1:-1,d.push(me.x,me.y,me.z),m.push(j/F),m.push(1-_e/N),ne+=1}}for(let _e=0;_e<N;_e++)for(let Ee=0;Ee<F;Ee++){const j=p+Ee+X*_e,ve=p+Ee+X*(_e+1),Me=p+(Ee+1)+X*(_e+1),Re=p+(Ee+1)+X*_e;u.push(j,ve,Re),u.push(ve,Me,Re),oe+=6}c.addGroup(_,oe,T),_+=oe,p+=ne}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new rs(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Xa(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?i.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][n]=null):e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function zn(r){const e={};for(let t=0;t<r.length;t++){const n=Xa(r[t]);for(const i in n)e[i]=n[i]}return e}function wA(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function Nv(r){return r.getRenderTarget()===null?r.outputColorSpace:Ni}const Ov={clone:Xa,merge:zn};var EA=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,TA=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Qi extends Dn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=EA,this.fragmentShader=TA,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Xa(e.uniforms),this.uniformsGroups=wA(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?t.uniforms[i]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[i]={type:"m4",value:o.toArray()}:t.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class dc extends Ct{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new at,this.projectionMatrix=new at,this.projectionMatrixInverse=new at,this.coordinateSystem=Zi}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class xn extends dc{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Wa*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Ns*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Wa*2*Math.atan(Math.tan(Ns*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Ns*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const u=o.fullWidth,h=o.fullHeight;s+=o.offsetX*i/u,t-=o.offsetY*n/h,i*=o.width/u,n*=o.height/h}const c=this.filmOffset;c!==0&&(s+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Ra=-90,Ca=1;class Fv extends Ct{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n,this.coordinateSystem=null;const i=new xn(Ra,Ca,e,t);i.layers=this.layers,this.add(i);const s=new xn(Ra,Ca,e,t);s.layers=this.layers,this.add(s);const o=new xn(Ra,Ca,e,t);o.layers=this.layers,this.add(o);const c=new xn(Ra,Ca,e,t);c.layers=this.layers,this.add(c);const u=new xn(Ra,Ca,e,t);u.layers=this.layers,this.add(u);const h=new xn(Ra,Ca,e,t);h.layers=this.layers,this.add(h)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[n,i,s,o,c,u]=t;for(const h of t)this.remove(h);if(e===Zi)n.up.set(0,1,0),n.lookAt(1,0,0),i.up.set(0,1,0),i.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),c.up.set(0,1,0),c.lookAt(0,0,1),u.up.set(0,1,0),u.lookAt(0,0,-1);else if(e===tc)n.up.set(0,-1,0),n.lookAt(-1,0,0),i.up.set(0,-1,0),i.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),c.up.set(0,-1,0),c.lookAt(0,0,1),u.up.set(0,-1,0),u.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const h of t)this.add(h),h.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[i,s,o,c,u,h]=this.children,d=e.getRenderTarget(),m=e.toneMapping,p=e.xr.enabled;e.toneMapping=$i,e.xr.enabled=!1;const _=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,s),e.setRenderTarget(n,2),e.render(t,o),e.setRenderTarget(n,3),e.render(t,c),e.setRenderTarget(n,4),e.render(t,u),n.texture.generateMipmaps=_,e.setRenderTarget(n,5),e.render(t,h),e.setRenderTarget(d),e.toneMapping=m,e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class pc extends ln{constructor(e,t,n,i,s,o,c,u,h,d){e=e!==void 0?e:[],t=t!==void 0?t:$r,super(e,t,n,i,s,o,c,u,h,d),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Bv extends Oi{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];t.encoding!==void 0&&(ko("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===Ar?ut:Zr),this.texture=new pc(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:cn}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new rs(5,5,5),s=new Qi({name:"CubemapFromEquirect",uniforms:Xa(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:In,blending:Er});s.uniforms.tEquirect.value=t;const o=new Mn(i,s),c=t.minFilter;return t.minFilter===Jr&&(t.minFilter=cn),new Fv(1,10,this).update(e,o),t.minFilter=c,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,i);e.setRenderTarget(s)}}const wf=new I,AA=new I,RA=new pt;class Xr{constructor(e=new I(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=wf.subVectors(n,t).cross(AA.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(wf),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(e.start).addScaledVector(n,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||RA.getNormalMatrix(e),i=this.coplanarPoint(wf).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const vs=new Fi,Dl=new I;class Du{constructor(e=new Xr,t=new Xr,n=new Xr,i=new Xr,s=new Xr,o=new Xr){this.planes=[e,t,n,i,s,o]}set(e,t,n,i,s,o){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(i),c[4].copy(s),c[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e,t=Zi){const n=this.planes,i=e.elements,s=i[0],o=i[1],c=i[2],u=i[3],h=i[4],d=i[5],m=i[6],p=i[7],_=i[8],v=i[9],M=i[10],y=i[11],g=i[12],S=i[13],b=i[14],E=i[15];if(n[0].setComponents(u-s,p-h,y-_,E-g).normalize(),n[1].setComponents(u+s,p+h,y+_,E+g).normalize(),n[2].setComponents(u+o,p+d,y+v,E+S).normalize(),n[3].setComponents(u-o,p-d,y-v,E-S).normalize(),n[4].setComponents(u-c,p-m,y-M,E-b).normalize(),t===Zi)n[5].setComponents(u+c,p+m,y+M,E+b).normalize();else if(t===tc)n[5].setComponents(c,m,M,b).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),vs.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),vs.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(vs)}intersectsSprite(e){return vs.center.set(0,0,0),vs.radius=.7071067811865476,vs.applyMatrix4(e.matrixWorld),this.intersectsSphere(vs)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(Dl.x=i.normal.x>0?e.max.x:e.min.x,Dl.y=i.normal.y>0?e.max.y:e.min.y,Dl.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(Dl)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function zv(){let r=null,e=!1,t=null,n=null;function i(s,o){t(s,o),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function CA(r,e){const t=e.isWebGL2,n=new WeakMap;function i(h,d){const m=h.array,p=h.usage,_=r.createBuffer();r.bindBuffer(d,_),r.bufferData(d,m,p),h.onUploadCallback();let v;if(m instanceof Float32Array)v=r.FLOAT;else if(m instanceof Uint16Array)if(h.isFloat16BufferAttribute)if(t)v=r.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else v=r.UNSIGNED_SHORT;else if(m instanceof Int16Array)v=r.SHORT;else if(m instanceof Uint32Array)v=r.UNSIGNED_INT;else if(m instanceof Int32Array)v=r.INT;else if(m instanceof Int8Array)v=r.BYTE;else if(m instanceof Uint8Array)v=r.UNSIGNED_BYTE;else if(m instanceof Uint8ClampedArray)v=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+m);return{buffer:_,type:v,bytesPerElement:m.BYTES_PER_ELEMENT,version:h.version}}function s(h,d,m){const p=d.array,_=d.updateRange;r.bindBuffer(m,h),_.count===-1?r.bufferSubData(m,0,p):(t?r.bufferSubData(m,_.offset*p.BYTES_PER_ELEMENT,p,_.offset,_.count):r.bufferSubData(m,_.offset*p.BYTES_PER_ELEMENT,p.subarray(_.offset,_.offset+_.count)),_.count=-1),d.onUploadCallback()}function o(h){return h.isInterleavedBufferAttribute&&(h=h.data),n.get(h)}function c(h){h.isInterleavedBufferAttribute&&(h=h.data);const d=n.get(h);d&&(r.deleteBuffer(d.buffer),n.delete(h))}function u(h,d){if(h.isGLBufferAttribute){const p=n.get(h);(!p||p.version<h.version)&&n.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const m=n.get(h);m===void 0?n.set(h,i(h,d)):m.version<h.version&&(s(m.buffer,h,d),m.version=h.version)}return{get:o,remove:c,update:u}}class $a extends _t{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,o=t/2,c=Math.floor(n),u=Math.floor(i),h=c+1,d=u+1,m=e/c,p=t/u,_=[],v=[],M=[],y=[];for(let g=0;g<d;g++){const S=g*p-o;for(let b=0;b<h;b++){const E=b*m-s;v.push(E,-S,0),M.push(0,0,1),y.push(b/c),y.push(1-g/u)}}for(let g=0;g<u;g++)for(let S=0;S<c;S++){const b=S+h*g,E=S+h*(g+1),A=S+1+h*(g+1),L=S+1+h*g;_.push(b,E,L),_.push(E,A,L)}this.setIndex(_),this.setAttribute("position",new We(v,3)),this.setAttribute("normal",new We(M,3)),this.setAttribute("uv",new We(y,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new $a(e.width,e.height,e.widthSegments,e.heightSegments)}}var PA=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,LA=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,IA=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,UA=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,DA=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,NA=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,OA="vec3 transformed = vec3( position );",FA=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,BA=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,zA=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,HA=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,kA=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,GA=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,VA=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,WA=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,XA=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,qA=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,YA=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,ZA=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,$A=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,KA=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,JA=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,QA=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,jA=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,eR=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,tR=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,nR="gl_FragColor = linearToOutputTexel( gl_FragColor );",iR=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,rR=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,sR=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,aR=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,oR=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,cR=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,lR=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,uR=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,hR=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,fR=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,dR=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,pR=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,mR=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,gR=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,_R=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,vR=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,yR=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,xR=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,MR=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,bR=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,SR=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,wR=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	anisotropyV /= material.anisotropy;
	material.anisotropy = saturate( material.anisotropy );
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;
#endif`,ER=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,TR=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,AR=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,RR=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,CR=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,PR=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,LR=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,IR=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,UR=`#ifdef USE_MAP
	diffuseColor *= texture2D( map, vMapUv );
#endif`,DR=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,NR=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,OR=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,FR=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,BR=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,zR=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,HR=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,kR=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,GR=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,VR=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal, vNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 geometryNormal = normal;`,WR=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,XR=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,qR=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,YR=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,ZR=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,$R=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,KR=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,JR=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,QR=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,jR=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,eC=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,tC=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,nC=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,iC=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,rC=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,sC=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,aC=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,oC=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,cC=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,lC=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,uC=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,hC=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,fC=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,dC=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,pC=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,mC=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,gC=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,_C=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,vC=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,yC=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,xC=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,MC=`#ifdef USE_UV
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,bC=`#ifdef USE_UV
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,SC=`#ifdef USE_UV
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,wC=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const EC=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,TC=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,AC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,RC=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,CC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,PC=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,LC=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,IC=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,UC=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,DC=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,NC=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,OC=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,FC=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,BC=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,zC=`#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,HC=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,kC=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,GC=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,VC=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,WC=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,XC=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,qC=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,YC=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,ZC=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,$C=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,KC=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,JC=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,QC=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,jC=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,eP=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,tP=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,nP=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,iP=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,rP=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,dt={alphamap_fragment:PA,alphamap_pars_fragment:LA,alphatest_fragment:IA,alphatest_pars_fragment:UA,aomap_fragment:DA,aomap_pars_fragment:NA,begin_vertex:OA,beginnormal_vertex:FA,bsdfs:BA,iridescence_fragment:zA,bumpmap_pars_fragment:HA,clipping_planes_fragment:kA,clipping_planes_pars_fragment:GA,clipping_planes_pars_vertex:VA,clipping_planes_vertex:WA,color_fragment:XA,color_pars_fragment:qA,color_pars_vertex:YA,color_vertex:ZA,common:$A,cube_uv_reflection_fragment:KA,defaultnormal_vertex:JA,displacementmap_pars_vertex:QA,displacementmap_vertex:jA,emissivemap_fragment:eR,emissivemap_pars_fragment:tR,encodings_fragment:nR,encodings_pars_fragment:iR,envmap_fragment:rR,envmap_common_pars_fragment:sR,envmap_pars_fragment:aR,envmap_pars_vertex:oR,envmap_physical_pars_fragment:yR,envmap_vertex:cR,fog_vertex:lR,fog_pars_vertex:uR,fog_fragment:hR,fog_pars_fragment:fR,gradientmap_pars_fragment:dR,lightmap_fragment:pR,lightmap_pars_fragment:mR,lights_lambert_fragment:gR,lights_lambert_pars_fragment:_R,lights_pars_begin:vR,lights_toon_fragment:xR,lights_toon_pars_fragment:MR,lights_phong_fragment:bR,lights_phong_pars_fragment:SR,lights_physical_fragment:wR,lights_physical_pars_fragment:ER,lights_fragment_begin:TR,lights_fragment_maps:AR,lights_fragment_end:RR,logdepthbuf_fragment:CR,logdepthbuf_pars_fragment:PR,logdepthbuf_pars_vertex:LR,logdepthbuf_vertex:IR,map_fragment:UR,map_pars_fragment:DR,map_particle_fragment:NR,map_particle_pars_fragment:OR,metalnessmap_fragment:FR,metalnessmap_pars_fragment:BR,morphcolor_vertex:zR,morphnormal_vertex:HR,morphtarget_pars_vertex:kR,morphtarget_vertex:GR,normal_fragment_begin:VR,normal_fragment_maps:WR,normal_pars_fragment:XR,normal_pars_vertex:qR,normal_vertex:YR,normalmap_pars_fragment:ZR,clearcoat_normal_fragment_begin:$R,clearcoat_normal_fragment_maps:KR,clearcoat_pars_fragment:JR,iridescence_pars_fragment:QR,output_fragment:jR,packing:eC,premultiplied_alpha_fragment:tC,project_vertex:nC,dithering_fragment:iC,dithering_pars_fragment:rC,roughnessmap_fragment:sC,roughnessmap_pars_fragment:aC,shadowmap_pars_fragment:oC,shadowmap_pars_vertex:cC,shadowmap_vertex:lC,shadowmask_pars_fragment:uC,skinbase_vertex:hC,skinning_pars_vertex:fC,skinning_vertex:dC,skinnormal_vertex:pC,specularmap_fragment:mC,specularmap_pars_fragment:gC,tonemapping_fragment:_C,tonemapping_pars_fragment:vC,transmission_fragment:yC,transmission_pars_fragment:xC,uv_pars_fragment:MC,uv_pars_vertex:bC,uv_vertex:SC,worldpos_vertex:wC,background_vert:EC,background_frag:TC,backgroundCube_vert:AC,backgroundCube_frag:RC,cube_vert:CC,cube_frag:PC,depth_vert:LC,depth_frag:IC,distanceRGBA_vert:UC,distanceRGBA_frag:DC,equirect_vert:NC,equirect_frag:OC,linedashed_vert:FC,linedashed_frag:BC,meshbasic_vert:zC,meshbasic_frag:HC,meshlambert_vert:kC,meshlambert_frag:GC,meshmatcap_vert:VC,meshmatcap_frag:WC,meshnormal_vert:XC,meshnormal_frag:qC,meshphong_vert:YC,meshphong_frag:ZC,meshphysical_vert:$C,meshphysical_frag:KC,meshtoon_vert:JC,meshtoon_frag:QC,points_vert:jC,points_frag:eP,shadow_vert:tP,shadow_frag:nP,sprite_vert:iP,sprite_frag:rP},Ae={common:{diffuse:{value:new Oe(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new pt},alphaMap:{value:null},alphaMapTransform:{value:new pt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new pt}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new pt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new pt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new pt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new pt},normalScale:{value:new ce(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new pt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new pt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new pt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new pt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Oe(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Oe(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new pt},alphaTest:{value:0},uvTransform:{value:new pt}},sprite:{diffuse:{value:new Oe(16777215)},opacity:{value:1},center:{value:new ce(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new pt},alphaMap:{value:null},alphaMapTransform:{value:new pt},alphaTest:{value:0}}},Ui={basic:{uniforms:zn([Ae.common,Ae.specularmap,Ae.envmap,Ae.aomap,Ae.lightmap,Ae.fog]),vertexShader:dt.meshbasic_vert,fragmentShader:dt.meshbasic_frag},lambert:{uniforms:zn([Ae.common,Ae.specularmap,Ae.envmap,Ae.aomap,Ae.lightmap,Ae.emissivemap,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.fog,Ae.lights,{emissive:{value:new Oe(0)}}]),vertexShader:dt.meshlambert_vert,fragmentShader:dt.meshlambert_frag},phong:{uniforms:zn([Ae.common,Ae.specularmap,Ae.envmap,Ae.aomap,Ae.lightmap,Ae.emissivemap,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.fog,Ae.lights,{emissive:{value:new Oe(0)},specular:{value:new Oe(1118481)},shininess:{value:30}}]),vertexShader:dt.meshphong_vert,fragmentShader:dt.meshphong_frag},standard:{uniforms:zn([Ae.common,Ae.envmap,Ae.aomap,Ae.lightmap,Ae.emissivemap,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.roughnessmap,Ae.metalnessmap,Ae.fog,Ae.lights,{emissive:{value:new Oe(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:dt.meshphysical_vert,fragmentShader:dt.meshphysical_frag},toon:{uniforms:zn([Ae.common,Ae.aomap,Ae.lightmap,Ae.emissivemap,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.gradientmap,Ae.fog,Ae.lights,{emissive:{value:new Oe(0)}}]),vertexShader:dt.meshtoon_vert,fragmentShader:dt.meshtoon_frag},matcap:{uniforms:zn([Ae.common,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,Ae.fog,{matcap:{value:null}}]),vertexShader:dt.meshmatcap_vert,fragmentShader:dt.meshmatcap_frag},points:{uniforms:zn([Ae.points,Ae.fog]),vertexShader:dt.points_vert,fragmentShader:dt.points_frag},dashed:{uniforms:zn([Ae.common,Ae.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:dt.linedashed_vert,fragmentShader:dt.linedashed_frag},depth:{uniforms:zn([Ae.common,Ae.displacementmap]),vertexShader:dt.depth_vert,fragmentShader:dt.depth_frag},normal:{uniforms:zn([Ae.common,Ae.bumpmap,Ae.normalmap,Ae.displacementmap,{opacity:{value:1}}]),vertexShader:dt.meshnormal_vert,fragmentShader:dt.meshnormal_frag},sprite:{uniforms:zn([Ae.sprite,Ae.fog]),vertexShader:dt.sprite_vert,fragmentShader:dt.sprite_frag},background:{uniforms:{uvTransform:{value:new pt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:dt.background_vert,fragmentShader:dt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:dt.backgroundCube_vert,fragmentShader:dt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:dt.cube_vert,fragmentShader:dt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:dt.equirect_vert,fragmentShader:dt.equirect_frag},distanceRGBA:{uniforms:zn([Ae.common,Ae.displacementmap,{referencePosition:{value:new I},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:dt.distanceRGBA_vert,fragmentShader:dt.distanceRGBA_frag},shadow:{uniforms:zn([Ae.lights,Ae.fog,{color:{value:new Oe(0)},opacity:{value:1}}]),vertexShader:dt.shadow_vert,fragmentShader:dt.shadow_frag}};Ui.physical={uniforms:zn([Ui.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new pt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new pt},clearcoatNormalScale:{value:new ce(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new pt},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new pt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new pt},sheen:{value:0},sheenColor:{value:new Oe(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new pt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new pt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new pt},transmissionSamplerSize:{value:new ce},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new pt},attenuationDistance:{value:0},attenuationColor:{value:new Oe(0)},specularColor:{value:new Oe(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new pt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new pt},anisotropyVector:{value:new ce},anisotropyMap:{value:null},anisotropyMapTransform:{value:new pt}}]),vertexShader:dt.meshphysical_vert,fragmentShader:dt.meshphysical_frag};const Nl={r:0,b:0,g:0};function sP(r,e,t,n,i,s,o){const c=new Oe(0);let u=s===!0?0:1,h,d,m=null,p=0,_=null;function v(y,g){let S=!1,b=g.isScene===!0?g.background:null;switch(b&&b.isTexture&&(b=(g.backgroundBlurriness>0?t:e).get(b)),b===null?M(c,u):b&&b.isColor&&(M(b,1),S=!0),r.xr.getEnvironmentBlendMode()){case"opaque":S=!0;break;case"additive":n.buffers.color.setClear(0,0,0,1,o),S=!0;break;case"alpha-blend":n.buffers.color.setClear(0,0,0,0,o),S=!0;break}(r.autoClear||S)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),b&&(b.isCubeTexture||b.mapping===Ya)?(d===void 0&&(d=new Mn(new rs(1,1,1),new Qi({name:"BackgroundCubeMaterial",uniforms:Xa(Ui.backgroundCube.uniforms),vertexShader:Ui.backgroundCube.vertexShader,fragmentShader:Ui.backgroundCube.fragmentShader,side:In,depthTest:!1,depthWrite:!1,fog:!1})),d.geometry.deleteAttribute("normal"),d.geometry.deleteAttribute("uv"),d.onBeforeRender=function(L,F,N){this.matrixWorld.copyPosition(N.matrixWorld)},Object.defineProperty(d.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(d)),d.material.uniforms.envMap.value=b,d.material.uniforms.flipEnvMap.value=b.isCubeTexture&&b.isRenderTargetTexture===!1?-1:1,d.material.uniforms.backgroundBlurriness.value=g.backgroundBlurriness,d.material.uniforms.backgroundIntensity.value=g.backgroundIntensity,d.material.toneMapped=b.colorSpace!==ut,(m!==b||p!==b.version||_!==r.toneMapping)&&(d.material.needsUpdate=!0,m=b,p=b.version,_=r.toneMapping),d.layers.enableAll(),y.unshift(d,d.geometry,d.material,0,0,null)):b&&b.isTexture&&(h===void 0&&(h=new Mn(new $a(2,2),new Qi({name:"BackgroundMaterial",uniforms:Xa(Ui.background.uniforms),vertexShader:Ui.background.vertexShader,fragmentShader:Ui.background.fragmentShader,side:Ji,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),Object.defineProperty(h.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(h)),h.material.uniforms.t2D.value=b,h.material.uniforms.backgroundIntensity.value=g.backgroundIntensity,h.material.toneMapped=b.colorSpace!==ut,b.matrixAutoUpdate===!0&&b.updateMatrix(),h.material.uniforms.uvTransform.value.copy(b.matrix),(m!==b||p!==b.version||_!==r.toneMapping)&&(h.material.needsUpdate=!0,m=b,p=b.version,_=r.toneMapping),h.layers.enableAll(),y.unshift(h,h.geometry,h.material,0,0,null))}function M(y,g){y.getRGB(Nl,Nv(r)),n.buffers.color.setClear(Nl.r,Nl.g,Nl.b,g,o)}return{getClearColor:function(){return c},setClearColor:function(y,g=1){c.set(y),u=g,M(c,u)},getClearAlpha:function(){return u},setClearAlpha:function(y){u=y,M(c,u)},render:v}}function aP(r,e,t,n){const i=r.getParameter(r.MAX_VERTEX_ATTRIBS),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),o=n.isWebGL2||s!==null,c={},u=y(null);let h=u,d=!1;function m(Z,X,pe,ne,oe){let me=!1;if(o){const _e=M(ne,pe,X);h!==_e&&(h=_e,_(h.object)),me=g(Z,ne,pe,oe),me&&S(Z,ne,pe,oe)}else{const _e=X.wireframe===!0;(h.geometry!==ne.id||h.program!==pe.id||h.wireframe!==_e)&&(h.geometry=ne.id,h.program=pe.id,h.wireframe=_e,me=!0)}oe!==null&&t.update(oe,r.ELEMENT_ARRAY_BUFFER),(me||d)&&(d=!1,N(Z,X,pe,ne),oe!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.get(oe).buffer))}function p(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function _(Z){return n.isWebGL2?r.bindVertexArray(Z):s.bindVertexArrayOES(Z)}function v(Z){return n.isWebGL2?r.deleteVertexArray(Z):s.deleteVertexArrayOES(Z)}function M(Z,X,pe){const ne=pe.wireframe===!0;let oe=c[Z.id];oe===void 0&&(oe={},c[Z.id]=oe);let me=oe[X.id];me===void 0&&(me={},oe[X.id]=me);let _e=me[ne];return _e===void 0&&(_e=y(p()),me[ne]=_e),_e}function y(Z){const X=[],pe=[],ne=[];for(let oe=0;oe<i;oe++)X[oe]=0,pe[oe]=0,ne[oe]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:X,enabledAttributes:pe,attributeDivisors:ne,object:Z,attributes:{},index:null}}function g(Z,X,pe,ne){const oe=h.attributes,me=X.attributes;let _e=0;const Ee=pe.getAttributes();for(const j in Ee)if(Ee[j].location>=0){const Me=oe[j];let Re=me[j];if(Re===void 0&&(j==="instanceMatrix"&&Z.instanceMatrix&&(Re=Z.instanceMatrix),j==="instanceColor"&&Z.instanceColor&&(Re=Z.instanceColor)),Me===void 0||Me.attribute!==Re||Re&&Me.data!==Re.data)return!0;_e++}return h.attributesNum!==_e||h.index!==ne}function S(Z,X,pe,ne){const oe={},me=X.attributes;let _e=0;const Ee=pe.getAttributes();for(const j in Ee)if(Ee[j].location>=0){let Me=me[j];Me===void 0&&(j==="instanceMatrix"&&Z.instanceMatrix&&(Me=Z.instanceMatrix),j==="instanceColor"&&Z.instanceColor&&(Me=Z.instanceColor));const Re={};Re.attribute=Me,Me&&Me.data&&(Re.data=Me.data),oe[j]=Re,_e++}h.attributes=oe,h.attributesNum=_e,h.index=ne}function b(){const Z=h.newAttributes;for(let X=0,pe=Z.length;X<pe;X++)Z[X]=0}function E(Z){A(Z,0)}function A(Z,X){const pe=h.newAttributes,ne=h.enabledAttributes,oe=h.attributeDivisors;pe[Z]=1,ne[Z]===0&&(r.enableVertexAttribArray(Z),ne[Z]=1),oe[Z]!==X&&((n.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](Z,X),oe[Z]=X)}function L(){const Z=h.newAttributes,X=h.enabledAttributes;for(let pe=0,ne=X.length;pe<ne;pe++)X[pe]!==Z[pe]&&(r.disableVertexAttribArray(pe),X[pe]=0)}function F(Z,X,pe,ne,oe,me,_e){_e===!0?r.vertexAttribIPointer(Z,X,pe,oe,me):r.vertexAttribPointer(Z,X,pe,ne,oe,me)}function N(Z,X,pe,ne){if(n.isWebGL2===!1&&(Z.isInstancedMesh||ne.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;b();const oe=ne.attributes,me=pe.getAttributes(),_e=X.defaultAttributeValues;for(const Ee in me){const j=me[Ee];if(j.location>=0){let ve=oe[Ee];if(ve===void 0&&(Ee==="instanceMatrix"&&Z.instanceMatrix&&(ve=Z.instanceMatrix),Ee==="instanceColor"&&Z.instanceColor&&(ve=Z.instanceColor)),ve!==void 0){const Me=ve.normalized,Re=ve.itemSize,Ie=t.get(ve);if(Ie===void 0)continue;const Ge=Ie.buffer,je=Ie.type,Ye=Ie.bytesPerElement,At=n.isWebGL2===!0&&(je===r.INT||je===r.UNSIGNED_INT||ve.gpuType===zd);if(ve.isInterleavedBufferAttribute){const $e=ve.data,H=$e.stride,we=ve.offset;if($e.isInstancedInterleavedBuffer){for(let ie=0;ie<j.locationSize;ie++)A(j.location+ie,$e.meshPerAttribute);Z.isInstancedMesh!==!0&&ne._maxInstanceCount===void 0&&(ne._maxInstanceCount=$e.meshPerAttribute*$e.count)}else for(let ie=0;ie<j.locationSize;ie++)E(j.location+ie);r.bindBuffer(r.ARRAY_BUFFER,Ge);for(let ie=0;ie<j.locationSize;ie++)F(j.location+ie,Re/j.locationSize,je,Me,H*Ye,(we+Re/j.locationSize*ie)*Ye,At)}else{if(ve.isInstancedBufferAttribute){for(let $e=0;$e<j.locationSize;$e++)A(j.location+$e,ve.meshPerAttribute);Z.isInstancedMesh!==!0&&ne._maxInstanceCount===void 0&&(ne._maxInstanceCount=ve.meshPerAttribute*ve.count)}else for(let $e=0;$e<j.locationSize;$e++)E(j.location+$e);r.bindBuffer(r.ARRAY_BUFFER,Ge);for(let $e=0;$e<j.locationSize;$e++)F(j.location+$e,Re/j.locationSize,je,Me,Re*Ye,Re/j.locationSize*$e*Ye,At)}}else if(_e!==void 0){const Me=_e[Ee];if(Me!==void 0)switch(Me.length){case 2:r.vertexAttrib2fv(j.location,Me);break;case 3:r.vertexAttrib3fv(j.location,Me);break;case 4:r.vertexAttrib4fv(j.location,Me);break;default:r.vertexAttrib1fv(j.location,Me)}}}}L()}function T(){he();for(const Z in c){const X=c[Z];for(const pe in X){const ne=X[pe];for(const oe in ne)v(ne[oe].object),delete ne[oe];delete X[pe]}delete c[Z]}}function U(Z){if(c[Z.id]===void 0)return;const X=c[Z.id];for(const pe in X){const ne=X[pe];for(const oe in ne)v(ne[oe].object),delete ne[oe];delete X[pe]}delete c[Z.id]}function $(Z){for(const X in c){const pe=c[X];if(pe[Z.id]===void 0)continue;const ne=pe[Z.id];for(const oe in ne)v(ne[oe].object),delete ne[oe];delete pe[Z.id]}}function he(){Y(),d=!0,h!==u&&(h=u,_(h.object))}function Y(){u.geometry=null,u.program=null,u.wireframe=!1}return{setup:m,reset:he,resetDefaultState:Y,dispose:T,releaseStatesOfGeometry:U,releaseStatesOfProgram:$,initAttributes:b,enableAttribute:E,disableUnusedAttributes:L}}function oP(r,e,t,n){const i=n.isWebGL2;let s;function o(h){s=h}function c(h,d){r.drawArrays(s,h,d),t.update(d,s,1)}function u(h,d,m){if(m===0)return;let p,_;if(i)p=r,_="drawArraysInstanced";else if(p=e.get("ANGLE_instanced_arrays"),_="drawArraysInstancedANGLE",p===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}p[_](s,h,d,m),t.update(d,s,m)}this.setMode=o,this.render=c,this.renderInstances=u}function cP(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const F=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(F.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(F){if(F==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";F="mediump"}return F==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&r.constructor.name==="WebGL2RenderingContext";let c=t.precision!==void 0?t.precision:"highp";const u=s(c);u!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",u,"instead."),c=u);const h=o||e.has("WEBGL_draw_buffers"),d=t.logarithmicDepthBuffer===!0,m=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),p=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),_=r.getParameter(r.MAX_TEXTURE_SIZE),v=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),M=r.getParameter(r.MAX_VERTEX_ATTRIBS),y=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),g=r.getParameter(r.MAX_VARYING_VECTORS),S=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),b=p>0,E=o||e.has("OES_texture_float"),A=b&&E,L=o?r.getParameter(r.MAX_SAMPLES):0;return{isWebGL2:o,drawBuffers:h,getMaxAnisotropy:i,getMaxPrecision:s,precision:c,logarithmicDepthBuffer:d,maxTextures:m,maxVertexTextures:p,maxTextureSize:_,maxCubemapSize:v,maxAttributes:M,maxVertexUniforms:y,maxVaryings:g,maxFragmentUniforms:S,vertexTextures:b,floatFragmentTextures:E,floatVertexTextures:A,maxSamples:L}}function lP(r){const e=this;let t=null,n=0,i=!1,s=!1;const o=new Xr,c=new pt,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(m,p){const _=m.length!==0||p||n!==0||i;return i=p,n=m.length,_},this.beginShadows=function(){s=!0,d(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(m,p){t=d(m,p,0)},this.setState=function(m,p,_){const v=m.clippingPlanes,M=m.clipIntersection,y=m.clipShadows,g=r.get(m);if(!i||v===null||v.length===0||s&&!y)s?d(null):h();else{const S=s?0:n,b=S*4;let E=g.clippingState||null;u.value=E,E=d(v,p,b,_);for(let A=0;A!==b;++A)E[A]=t[A];g.clippingState=E,this.numIntersection=M?this.numPlanes:0,this.numPlanes+=S}};function h(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function d(m,p,_,v){const M=m!==null?m.length:0;let y=null;if(M!==0){if(y=u.value,v!==!0||y===null){const g=_+M*4,S=p.matrixWorldInverse;c.getNormalMatrix(S),(y===null||y.length<g)&&(y=new Float32Array(g));for(let b=0,E=_;b!==M;++b,E+=4)o.copy(m[b]).applyMatrix4(S,c),o.normal.toArray(y,E),y[E+3]=o.constant}u.value=y,u.needsUpdate=!0}return e.numPlanes=M,e.numIntersection=0,y}}function uP(r){let e=new WeakMap;function t(o,c){return c===qo?o.mapping=$r:c===Yo&&(o.mapping=Kr),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const c=o.mapping;if(c===qo||c===Yo)if(e.has(o)){const u=e.get(o).texture;return t(u,o.mapping)}else{const u=o.image;if(u&&u.height>0){const h=new Bv(u.height/2);return h.fromEquirectangularTexture(r,o),e.set(o,h),o.addEventListener("dispose",i),t(h.texture,o.mapping)}else return null}}return o}function i(o){const c=o.target;c.removeEventListener("dispose",i);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class Nu extends dc{constructor(e=-1,t=1,n=1,i=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,o=n+e,c=i+t,u=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,d=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,o=s+h*this.view.width,c-=d*this.view.offsetY,u=c-d*this.view.height}this.projectionMatrix.makeOrthographic(s,o,c,u,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const Ba=4,a_=[.125,.215,.35,.446,.526,.582],Rs=20,Ef=new Nu,o_=new Oe;let Tf=null;const Ts=(1+Math.sqrt(5))/2,Pa=1/Ts,c_=[new I(1,1,1),new I(-1,1,1),new I(1,1,-1),new I(-1,1,-1),new I(0,Ts,Pa),new I(0,Ts,-Pa),new I(Pa,0,Ts),new I(-Pa,0,Ts),new I(Ts,Pa,0),new I(-Ts,Pa,0)];class bd{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Tf=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=h_(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=u_(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Tf),e.scissorTest=!1,Ol(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===$r||e.mapping===Kr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Tf=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:cn,minFilter:cn,generateMipmaps:!1,type:Va,format:oi,colorSpace:Ni,depthBuffer:!1},i=l_(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=l_(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=hP(s)),this._blurMaterial=fP(s,e,t)}return i}_compileMaterial(e){const t=new Mn(this._lodPlanes[0],e);this._renderer.compile(t,Ef)}_sceneToCubeUV(e,t,n,i){const c=new xn(90,1,t,n),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],d=this._renderer,m=d.autoClear,p=d.toneMapping;d.getClearColor(o_),d.toneMapping=$i,d.autoClear=!1;const _=new is({name:"PMREM.Background",side:In,depthWrite:!1,depthTest:!1}),v=new Mn(new rs,_);let M=!1;const y=e.background;y?y.isColor&&(_.color.copy(y),e.background=null,M=!0):(_.color.copy(o_),M=!0);for(let g=0;g<6;g++){const S=g%3;S===0?(c.up.set(0,u[g],0),c.lookAt(h[g],0,0)):S===1?(c.up.set(0,0,u[g]),c.lookAt(0,h[g],0)):(c.up.set(0,u[g],0),c.lookAt(0,0,h[g]));const b=this._cubeSize;Ol(i,S*b,g>2?b:0,b,b),d.setRenderTarget(i),M&&d.render(v,c),d.render(e,c)}v.geometry.dispose(),v.material.dispose(),d.toneMapping=p,d.autoClear=m,e.background=y}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===$r||e.mapping===Kr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=h_()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=u_());const s=i?this._cubemapMaterial:this._equirectMaterial,o=new Mn(this._lodPlanes[0],s),c=s.uniforms;c.envMap.value=e;const u=this._cubeSize;Ol(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(o,Ef)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),o=c_[(i-1)%c_.length];this._blur(e,i-1,i,s,o)}t.autoClear=n}_blur(e,t,n,i,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,i,"latitudinal",s),this._halfBlur(o,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,o,c){const u=this._renderer,h=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const d=3,m=new Mn(this._lodPlanes[i],h),p=h.uniforms,_=this._sizeLods[n]-1,v=isFinite(s)?Math.PI/(2*_):2*Math.PI/(2*Rs-1),M=s/v,y=isFinite(s)?1+Math.floor(d*M):Rs;y>Rs&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${y} samples when the maximum is set to ${Rs}`);const g=[];let S=0;for(let F=0;F<Rs;++F){const N=F/M,T=Math.exp(-N*N/2);g.push(T),F===0?S+=T:F<y&&(S+=2*T)}for(let F=0;F<g.length;F++)g[F]=g[F]/S;p.envMap.value=e.texture,p.samples.value=y,p.weights.value=g,p.latitudinal.value=o==="latitudinal",c&&(p.poleAxis.value=c);const{_lodMax:b}=this;p.dTheta.value=v,p.mipInt.value=b-n;const E=this._sizeLods[i],A=3*E*(i>b-Ba?i-b+Ba:0),L=4*(this._cubeSize-E);Ol(t,A,L,3*E,2*E),u.setRenderTarget(t),u.render(m,Ef)}}function hP(r){const e=[],t=[],n=[];let i=r;const s=r-Ba+1+a_.length;for(let o=0;o<s;o++){const c=Math.pow(2,i);t.push(c);let u=1/c;o>r-Ba?u=a_[o-r+Ba-1]:o===0&&(u=0),n.push(u);const h=1/(c-2),d=-h,m=1+h,p=[d,d,m,d,m,m,d,d,m,m,d,m],_=6,v=6,M=3,y=2,g=1,S=new Float32Array(M*v*_),b=new Float32Array(y*v*_),E=new Float32Array(g*v*_);for(let L=0;L<_;L++){const F=L%3*2/3-1,N=L>2?0:-1,T=[F,N,0,F+2/3,N,0,F+2/3,N+1,0,F,N,0,F+2/3,N+1,0,F,N+1,0];S.set(T,M*v*L),b.set(p,y*v*L);const U=[L,L,L,L,L,L];E.set(U,g*v*L)}const A=new _t;A.setAttribute("position",new Nt(S,M)),A.setAttribute("uv",new Nt(b,y)),A.setAttribute("faceIndex",new Nt(E,g)),e.push(A),i>Ba&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function l_(r,e,t){const n=new Oi(r,e,t);return n.texture.mapping=Ya,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function Ol(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function fP(r,e,t){const n=new Float32Array(Rs),i=new I(0,1,0);return new Qi({name:"SphericalGaussianBlur",defines:{n:Rs,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Qd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Er,depthTest:!1,depthWrite:!1})}function u_(){return new Qi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Qd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Er,depthTest:!1,depthWrite:!1})}function h_(){return new Qi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Qd(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Er,depthTest:!1,depthWrite:!1})}function Qd(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function dP(r){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const u=c.mapping,h=u===qo||u===Yo,d=u===$r||u===Kr;if(h||d)if(c.isRenderTargetTexture&&c.needsPMREMUpdate===!0){c.needsPMREMUpdate=!1;let m=e.get(c);return t===null&&(t=new bd(r)),m=h?t.fromEquirectangular(c,m):t.fromCubemap(c,m),e.set(c,m),m.texture}else{if(e.has(c))return e.get(c).texture;{const m=c.image;if(h&&m&&m.height>0||d&&m&&i(m)){t===null&&(t=new bd(r));const p=h?t.fromEquirectangular(c):t.fromCubemap(c);return e.set(c,p),c.addEventListener("dispose",s),p.texture}else return null}}}return c}function i(c){let u=0;const h=6;for(let d=0;d<h;d++)c[d]!==void 0&&u++;return u===h}function s(c){const u=c.target;u.removeEventListener("dispose",s);const h=e.get(u);h!==void 0&&(e.delete(u),h.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function pP(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function mP(r,e,t,n){const i={},s=new WeakMap;function o(m){const p=m.target;p.index!==null&&e.remove(p.index);for(const v in p.attributes)e.remove(p.attributes[v]);for(const v in p.morphAttributes){const M=p.morphAttributes[v];for(let y=0,g=M.length;y<g;y++)e.remove(M[y])}p.removeEventListener("dispose",o),delete i[p.id];const _=s.get(p);_&&(e.remove(_),s.delete(p)),n.releaseStatesOfGeometry(p),p.isInstancedBufferGeometry===!0&&delete p._maxInstanceCount,t.memory.geometries--}function c(m,p){return i[p.id]===!0||(p.addEventListener("dispose",o),i[p.id]=!0,t.memory.geometries++),p}function u(m){const p=m.attributes;for(const v in p)e.update(p[v],r.ARRAY_BUFFER);const _=m.morphAttributes;for(const v in _){const M=_[v];for(let y=0,g=M.length;y<g;y++)e.update(M[y],r.ARRAY_BUFFER)}}function h(m){const p=[],_=m.index,v=m.attributes.position;let M=0;if(_!==null){const S=_.array;M=_.version;for(let b=0,E=S.length;b<E;b+=3){const A=S[b+0],L=S[b+1],F=S[b+2];p.push(A,L,L,F,F,A)}}else{const S=v.array;M=v.version;for(let b=0,E=S.length/3-1;b<E;b+=3){const A=b+0,L=b+1,F=b+2;p.push(A,L,L,F,F,A)}}const y=new(Uv(p)?Jd:Kd)(p,1);y.version=M;const g=s.get(m);g&&e.remove(g),s.set(m,y)}function d(m){const p=s.get(m);if(p){const _=m.index;_!==null&&p.version<_.version&&h(m)}else h(m);return s.get(m)}return{get:c,update:u,getWireframeAttribute:d}}function gP(r,e,t,n){const i=n.isWebGL2;let s;function o(p){s=p}let c,u;function h(p){c=p.type,u=p.bytesPerElement}function d(p,_){r.drawElements(s,_,c,p*u),t.update(_,s,1)}function m(p,_,v){if(v===0)return;let M,y;if(i)M=r,y="drawElementsInstanced";else if(M=e.get("ANGLE_instanced_arrays"),y="drawElementsInstancedANGLE",M===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}M[y](s,_,c,p*u,v),t.update(_,s,v)}this.setMode=o,this.setIndex=h,this.render=d,this.renderInstances=m}function _P(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,o,c){switch(t.calls++,o){case r.TRIANGLES:t.triangles+=c*(s/3);break;case r.LINES:t.lines+=c*(s/2);break;case r.LINE_STRIP:t.lines+=c*(s-1);break;case r.LINE_LOOP:t.lines+=c*s;break;case r.POINTS:t.points+=c*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function vP(r,e){return r[0]-e[0]}function yP(r,e){return Math.abs(e[1])-Math.abs(r[1])}function xP(r,e,t){const n={},i=new Float32Array(8),s=new WeakMap,o=new Dt,c=[];for(let h=0;h<8;h++)c[h]=[h,0];function u(h,d,m){const p=h.morphTargetInfluences;if(e.isWebGL2===!0){const _=d.morphAttributes.position||d.morphAttributes.normal||d.morphAttributes.color,v=_!==void 0?_.length:0;let M=s.get(d);if(M===void 0||M.count!==v){let Z=function(){he.dispose(),s.delete(d),d.removeEventListener("dispose",Z)};M!==void 0&&M.texture.dispose();const S=d.morphAttributes.position!==void 0,b=d.morphAttributes.normal!==void 0,E=d.morphAttributes.color!==void 0,A=d.morphAttributes.position||[],L=d.morphAttributes.normal||[],F=d.morphAttributes.color||[];let N=0;S===!0&&(N=1),b===!0&&(N=2),E===!0&&(N=3);let T=d.attributes.position.count*N,U=1;T>e.maxTextureSize&&(U=Math.ceil(T/e.maxTextureSize),T=e.maxTextureSize);const $=new Float32Array(T*U*4*v),he=new Iu($,T,U,v);he.type=Yi,he.needsUpdate=!0;const Y=N*4;for(let X=0;X<v;X++){const pe=A[X],ne=L[X],oe=F[X],me=T*U*4*X;for(let _e=0;_e<pe.count;_e++){const Ee=_e*Y;S===!0&&(o.fromBufferAttribute(pe,_e),$[me+Ee+0]=o.x,$[me+Ee+1]=o.y,$[me+Ee+2]=o.z,$[me+Ee+3]=0),b===!0&&(o.fromBufferAttribute(ne,_e),$[me+Ee+4]=o.x,$[me+Ee+5]=o.y,$[me+Ee+6]=o.z,$[me+Ee+7]=0),E===!0&&(o.fromBufferAttribute(oe,_e),$[me+Ee+8]=o.x,$[me+Ee+9]=o.y,$[me+Ee+10]=o.z,$[me+Ee+11]=oe.itemSize===4?o.w:1)}}M={count:v,texture:he,size:new ce(T,U)},s.set(d,M),d.addEventListener("dispose",Z)}let y=0;for(let S=0;S<p.length;S++)y+=p[S];const g=d.morphTargetsRelative?1:1-y;m.getUniforms().setValue(r,"morphTargetBaseInfluence",g),m.getUniforms().setValue(r,"morphTargetInfluences",p),m.getUniforms().setValue(r,"morphTargetsTexture",M.texture,t),m.getUniforms().setValue(r,"morphTargetsTextureSize",M.size)}else{const _=p===void 0?0:p.length;let v=n[d.id];if(v===void 0||v.length!==_){v=[];for(let b=0;b<_;b++)v[b]=[b,0];n[d.id]=v}for(let b=0;b<_;b++){const E=v[b];E[0]=b,E[1]=p[b]}v.sort(yP);for(let b=0;b<8;b++)b<_&&v[b][1]?(c[b][0]=v[b][0],c[b][1]=v[b][1]):(c[b][0]=Number.MAX_SAFE_INTEGER,c[b][1]=0);c.sort(vP);const M=d.morphAttributes.position,y=d.morphAttributes.normal;let g=0;for(let b=0;b<8;b++){const E=c[b],A=E[0],L=E[1];A!==Number.MAX_SAFE_INTEGER&&L?(M&&d.getAttribute("morphTarget"+b)!==M[A]&&d.setAttribute("morphTarget"+b,M[A]),y&&d.getAttribute("morphNormal"+b)!==y[A]&&d.setAttribute("morphNormal"+b,y[A]),i[b]=L,g+=L):(M&&d.hasAttribute("morphTarget"+b)===!0&&d.deleteAttribute("morphTarget"+b),y&&d.hasAttribute("morphNormal"+b)===!0&&d.deleteAttribute("morphNormal"+b),i[b]=0)}const S=d.morphTargetsRelative?1:1-g;m.getUniforms().setValue(r,"morphTargetBaseInfluence",S),m.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:u}}function MP(r,e,t,n){let i=new WeakMap;function s(u){const h=n.render.frame,d=u.geometry,m=e.get(u,d);return i.get(m)!==h&&(e.update(m),i.set(m,h)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),t.update(u.instanceMatrix,r.ARRAY_BUFFER),u.instanceColor!==null&&t.update(u.instanceColor,r.ARRAY_BUFFER)),m}function o(){i=new WeakMap}function c(u){const h=u.target;h.removeEventListener("dispose",c),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:s,dispose:o}}const Hv=new ln,kv=new Iu,Gv=new $d,Vv=new pc,f_=[],d_=[],p_=new Float32Array(16),m_=new Float32Array(9),g_=new Float32Array(4);function Ka(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=f_[i];if(s===void 0&&(s=new Float32Array(i),f_[i]=s),e!==0){n.toArray(s,0);for(let o=1,c=0;o!==e;++o)c+=t,r[o].toArray(s,c)}return s}function mn(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function gn(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function Ou(r,e){let t=d_[e];t===void 0&&(t=new Int32Array(e),d_[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function bP(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function SP(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(mn(t,e))return;r.uniform2fv(this.addr,e),gn(t,e)}}function wP(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(mn(t,e))return;r.uniform3fv(this.addr,e),gn(t,e)}}function EP(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(mn(t,e))return;r.uniform4fv(this.addr,e),gn(t,e)}}function TP(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(mn(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),gn(t,e)}else{if(mn(t,n))return;g_.set(n),r.uniformMatrix2fv(this.addr,!1,g_),gn(t,n)}}function AP(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(mn(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),gn(t,e)}else{if(mn(t,n))return;m_.set(n),r.uniformMatrix3fv(this.addr,!1,m_),gn(t,n)}}function RP(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(mn(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),gn(t,e)}else{if(mn(t,n))return;p_.set(n),r.uniformMatrix4fv(this.addr,!1,p_),gn(t,n)}}function CP(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function PP(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(mn(t,e))return;r.uniform2iv(this.addr,e),gn(t,e)}}function LP(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(mn(t,e))return;r.uniform3iv(this.addr,e),gn(t,e)}}function IP(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(mn(t,e))return;r.uniform4iv(this.addr,e),gn(t,e)}}function UP(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function DP(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(mn(t,e))return;r.uniform2uiv(this.addr,e),gn(t,e)}}function NP(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(mn(t,e))return;r.uniform3uiv(this.addr,e),gn(t,e)}}function OP(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(mn(t,e))return;r.uniform4uiv(this.addr,e),gn(t,e)}}function FP(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||Hv,i)}function BP(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Gv,i)}function zP(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||Vv,i)}function HP(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||kv,i)}function kP(r){switch(r){case 5126:return bP;case 35664:return SP;case 35665:return wP;case 35666:return EP;case 35674:return TP;case 35675:return AP;case 35676:return RP;case 5124:case 35670:return CP;case 35667:case 35671:return PP;case 35668:case 35672:return LP;case 35669:case 35673:return IP;case 5125:return UP;case 36294:return DP;case 36295:return NP;case 36296:return OP;case 35678:case 36198:case 36298:case 36306:case 35682:return FP;case 35679:case 36299:case 36307:return BP;case 35680:case 36300:case 36308:case 36293:return zP;case 36289:case 36303:case 36311:case 36292:return HP}}function GP(r,e){r.uniform1fv(this.addr,e)}function VP(r,e){const t=Ka(e,this.size,2);r.uniform2fv(this.addr,t)}function WP(r,e){const t=Ka(e,this.size,3);r.uniform3fv(this.addr,t)}function XP(r,e){const t=Ka(e,this.size,4);r.uniform4fv(this.addr,t)}function qP(r,e){const t=Ka(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function YP(r,e){const t=Ka(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function ZP(r,e){const t=Ka(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function $P(r,e){r.uniform1iv(this.addr,e)}function KP(r,e){r.uniform2iv(this.addr,e)}function JP(r,e){r.uniform3iv(this.addr,e)}function QP(r,e){r.uniform4iv(this.addr,e)}function jP(r,e){r.uniform1uiv(this.addr,e)}function eL(r,e){r.uniform2uiv(this.addr,e)}function tL(r,e){r.uniform3uiv(this.addr,e)}function nL(r,e){r.uniform4uiv(this.addr,e)}function iL(r,e,t){const n=this.cache,i=e.length,s=Ou(t,i);mn(n,s)||(r.uniform1iv(this.addr,s),gn(n,s));for(let o=0;o!==i;++o)t.setTexture2D(e[o]||Hv,s[o])}function rL(r,e,t){const n=this.cache,i=e.length,s=Ou(t,i);mn(n,s)||(r.uniform1iv(this.addr,s),gn(n,s));for(let o=0;o!==i;++o)t.setTexture3D(e[o]||Gv,s[o])}function sL(r,e,t){const n=this.cache,i=e.length,s=Ou(t,i);mn(n,s)||(r.uniform1iv(this.addr,s),gn(n,s));for(let o=0;o!==i;++o)t.setTextureCube(e[o]||Vv,s[o])}function aL(r,e,t){const n=this.cache,i=e.length,s=Ou(t,i);mn(n,s)||(r.uniform1iv(this.addr,s),gn(n,s));for(let o=0;o!==i;++o)t.setTexture2DArray(e[o]||kv,s[o])}function oL(r){switch(r){case 5126:return GP;case 35664:return VP;case 35665:return WP;case 35666:return XP;case 35674:return qP;case 35675:return YP;case 35676:return ZP;case 5124:case 35670:return $P;case 35667:case 35671:return KP;case 35668:case 35672:return JP;case 35669:case 35673:return QP;case 5125:return jP;case 36294:return eL;case 36295:return tL;case 36296:return nL;case 35678:case 36198:case 36298:case 36306:case 35682:return iL;case 35679:case 36299:case 36307:return rL;case 35680:case 36300:case 36308:case 36293:return sL;case 36289:case 36303:case 36311:case 36292:return aL}}class cL{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=kP(t.type)}}class lL{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=oL(t.type)}}class uL{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let s=0,o=i.length;s!==o;++s){const c=i[s];c.setValue(e,t[c.id],n)}}}const Af=/(\w+)(\])?(\[|\.)?/g;function __(r,e){r.seq.push(e),r.map[e.id]=e}function hL(r,e,t){const n=r.name,i=n.length;for(Af.lastIndex=0;;){const s=Af.exec(n),o=Af.lastIndex;let c=s[1];const u=s[2]==="]",h=s[3];if(u&&(c=c|0),h===void 0||h==="["&&o+2===i){__(t,h===void 0?new cL(c,r,e):new lL(c,r,e));break}else{let m=t.map[c];m===void 0&&(m=new uL(c),__(t,m)),t=m}}}class du{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const s=e.getActiveUniform(t,i),o=e.getUniformLocation(t,s.name);hL(s,o,this)}}setValue(e,t,n,i){const s=this.map[t];s!==void 0&&s.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let s=0,o=t.length;s!==o;++s){const c=t[s],u=n[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,s=e.length;i!==s;++i){const o=e[i];o.id in t&&n.push(o)}return n}}function v_(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}let fL=0;function dL(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=i;o<s;o++){const c=o+1;n.push(`${c===e?">":" "} ${c}: ${t[o]}`)}return n.join(`
`)}function pL(r){switch(r){case Ni:return["Linear","( value )"];case ut:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",r),["Linear","( value )"]}}function y_(r,e,t){const n=r.getShaderParameter(e,r.COMPILE_STATUS),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=/ERROR: 0:(\d+)/.exec(i);if(s){const o=parseInt(s[1]);return t.toUpperCase()+`

`+i+`

`+dL(r.getShaderSource(e),o)}else return i}function mL(r,e){const t=pL(e);return"vec4 "+r+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function gL(r,e){let t;switch(e){case rv:t="Linear";break;case sv:t="Reinhard";break;case av:t="OptimizedCineon";break;case Fd:t="ACESFilmic";break;case ov:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function _L(r){return[r.extensionDerivatives||r.envMapCubeUVHeight||r.bumpMap||r.normalMapTangentSpace||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Fo).join(`
`)}function vL(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function yL(r,e){const t={},n=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),o=s.name;let c=1;s.type===r.FLOAT_MAT2&&(c=2),s.type===r.FLOAT_MAT3&&(c=3),s.type===r.FLOAT_MAT4&&(c=4),t[o]={type:s.type,location:r.getAttribLocation(e,o),locationSize:c}}return t}function Fo(r){return r!==""}function x_(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function M_(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const xL=/^[ \t]*#include +<([\w\d./]+)>/gm;function Sd(r){return r.replace(xL,ML)}function ML(r,e){const t=dt[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return Sd(t)}const bL=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function b_(r){return r.replace(bL,SL)}function SL(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function S_(r){let e="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function wL(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===Dd?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===Ru?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===Xi&&(e="SHADOWMAP_TYPE_VSM"),e}function EL(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case $r:case Kr:e="ENVMAP_TYPE_CUBE";break;case Ya:e="ENVMAP_TYPE_CUBE_UV";break}return e}function TL(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Kr:e="ENVMAP_MODE_REFRACTION";break}return e}function AL(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case hc:e="ENVMAP_BLENDING_MULTIPLY";break;case nv:e="ENVMAP_BLENDING_MIX";break;case iv:e="ENVMAP_BLENDING_ADD";break}return e}function RL(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function CL(r,e,t,n){const i=r.getContext(),s=t.defines;let o=t.vertexShader,c=t.fragmentShader;const u=wL(t),h=EL(t),d=TL(t),m=AL(t),p=RL(t),_=t.isWebGL2?"":_L(t),v=vL(s),M=i.createProgram();let y,g,S=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(y=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v].filter(Fo).join(`
`),y.length>0&&(y+=`
`),g=[_,"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v].filter(Fo).join(`
`),g.length>0&&(g+=`
`)):(y=[S_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+d:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Fo).join(`
`),g=[_,S_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,v,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+d:"",t.envMap?"#define "+m:"",p?"#define CUBEUV_TEXEL_WIDTH "+p.texelWidth:"",p?"#define CUBEUV_TEXEL_HEIGHT "+p.texelHeight:"",p?"#define CUBEUV_MAX_MIP "+p.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.useLegacyLights?"#define LEGACY_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==$i?"#define TONE_MAPPING":"",t.toneMapping!==$i?dt.tonemapping_pars_fragment:"",t.toneMapping!==$i?gL("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",dt.encodings_pars_fragment,mL("linearToOutputTexel",t.outputColorSpace),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Fo).join(`
`)),o=Sd(o),o=x_(o,t),o=M_(o,t),c=Sd(c),c=x_(c,t),c=M_(c,t),o=b_(o),c=b_(c),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(S=`#version 300 es
`,y=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+y,g=["#define varying in",t.glslVersion===xd?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===xd?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+g);const b=S+y+o,E=S+g+c,A=v_(i,i.VERTEX_SHADER,b),L=v_(i,i.FRAGMENT_SHADER,E);if(i.attachShader(M,A),i.attachShader(M,L),t.index0AttributeName!==void 0?i.bindAttribLocation(M,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(M,0,"position"),i.linkProgram(M),r.debug.checkShaderErrors){const T=i.getProgramInfoLog(M).trim(),U=i.getShaderInfoLog(A).trim(),$=i.getShaderInfoLog(L).trim();let he=!0,Y=!0;if(i.getProgramParameter(M,i.LINK_STATUS)===!1)if(he=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(i,M,A,L);else{const Z=y_(i,A,"vertex"),X=y_(i,L,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(M,i.VALIDATE_STATUS)+`

Program Info Log: `+T+`
`+Z+`
`+X)}else T!==""?console.warn("THREE.WebGLProgram: Program Info Log:",T):(U===""||$==="")&&(Y=!1);Y&&(this.diagnostics={runnable:he,programLog:T,vertexShader:{log:U,prefix:y},fragmentShader:{log:$,prefix:g}})}i.deleteShader(A),i.deleteShader(L);let F;this.getUniforms=function(){return F===void 0&&(F=new du(i,M)),F};let N;return this.getAttributes=function(){return N===void 0&&(N=yL(i,M)),N},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(M),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=fL++,this.cacheKey=e,this.usedTimes=1,this.program=M,this.vertexShader=A,this.fragmentShader=L,this}let PL=0;class LL{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new IL(e),t.set(e,n)),n}}class IL{constructor(e){this.id=PL++,this.code=e,this.usedTimes=0}}function UL(r,e,t,n,i,s,o){const c=new Uu,u=new LL,h=[],d=i.isWebGL2,m=i.logarithmicDepthBuffer,p=i.vertexTextures;let _=i.precision;const v={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function M(T){return T===0?"uv":`uv${T}`}function y(T,U,$,he,Y){const Z=he.fog,X=Y.geometry,pe=T.isMeshStandardMaterial?he.environment:null,ne=(T.isMeshStandardMaterial?t:e).get(T.envMap||pe),oe=ne&&ne.mapping===Ya?ne.image.height:null,me=v[T.type];T.precision!==null&&(_=i.getMaxPrecision(T.precision),_!==T.precision&&console.warn("THREE.WebGLProgram.getParameters:",T.precision,"not supported, using",_,"instead."));const _e=X.morphAttributes.position||X.morphAttributes.normal||X.morphAttributes.color,Ee=_e!==void 0?_e.length:0;let j=0;X.morphAttributes.position!==void 0&&(j=1),X.morphAttributes.normal!==void 0&&(j=2),X.morphAttributes.color!==void 0&&(j=3);let ve,Me,Re,Ie;if(me){const $t=Ui[me];ve=$t.vertexShader,Me=$t.fragmentShader}else ve=T.vertexShader,Me=T.fragmentShader,u.update(T),Re=u.getVertexShaderID(T),Ie=u.getFragmentShaderID(T);const Ge=r.getRenderTarget(),je=Y.isInstancedMesh===!0,Ye=!!T.map,At=!!T.matcap,$e=!!ne,H=!!T.aoMap,we=!!T.lightMap,ie=!!T.bumpMap,be=!!T.normalMap,fe=!!T.displacementMap,De=!!T.emissiveMap,Ue=!!T.metalnessMap,Ne=!!T.roughnessMap,Ze=T.anisotropy>0,nt=T.clearcoat>0,Lt=T.iridescence>0,O=T.sheen>0,P=T.transmission>0,te=Ze&&!!T.anisotropyMap,Se=nt&&!!T.clearcoatMap,ye=nt&&!!T.clearcoatNormalMap,z=nt&&!!T.clearcoatRoughnessMap,de=Lt&&!!T.iridescenceMap,xe=Lt&&!!T.iridescenceThicknessMap,J=O&&!!T.sheenColorMap,ze=O&&!!T.sheenRoughnessMap,qe=!!T.specularMap,Ve=!!T.specularColorMap,He=!!T.specularIntensityMap,Fe=P&&!!T.transmissionMap,Je=P&&!!T.thicknessMap,xt=!!T.gradientMap,G=!!T.alphaMap,Ce=T.alphaTest>0,ee=!!T.extensions,Te=!!X.attributes.uv1,Le=!!X.attributes.uv2,Tt=!!X.attributes.uv3;return{isWebGL2:d,shaderID:me,shaderType:T.type,shaderName:T.name,vertexShader:ve,fragmentShader:Me,defines:T.defines,customVertexShaderID:Re,customFragmentShaderID:Ie,isRawShaderMaterial:T.isRawShaderMaterial===!0,glslVersion:T.glslVersion,precision:_,instancing:je,instancingColor:je&&Y.instanceColor!==null,supportsVertexTextures:p,outputColorSpace:Ge===null?r.outputColorSpace:Ge.isXRRenderTarget===!0?Ge.texture.colorSpace:Ni,map:Ye,matcap:At,envMap:$e,envMapMode:$e&&ne.mapping,envMapCubeUVHeight:oe,aoMap:H,lightMap:we,bumpMap:ie,normalMap:be,displacementMap:p&&fe,emissiveMap:De,normalMapObjectSpace:be&&T.normalMapType===bv,normalMapTangentSpace:be&&T.normalMapType===ns,metalnessMap:Ue,roughnessMap:Ne,anisotropy:Ze,anisotropyMap:te,clearcoat:nt,clearcoatMap:Se,clearcoatNormalMap:ye,clearcoatRoughnessMap:z,iridescence:Lt,iridescenceMap:de,iridescenceThicknessMap:xe,sheen:O,sheenColorMap:J,sheenRoughnessMap:ze,specularMap:qe,specularColorMap:Ve,specularIntensityMap:He,transmission:P,transmissionMap:Fe,thicknessMap:Je,gradientMap:xt,opaque:T.transparent===!1&&T.blending===Ds,alphaMap:G,alphaTest:Ce,combine:T.combine,mapUv:Ye&&M(T.map.channel),aoMapUv:H&&M(T.aoMap.channel),lightMapUv:we&&M(T.lightMap.channel),bumpMapUv:ie&&M(T.bumpMap.channel),normalMapUv:be&&M(T.normalMap.channel),displacementMapUv:fe&&M(T.displacementMap.channel),emissiveMapUv:De&&M(T.emissiveMap.channel),metalnessMapUv:Ue&&M(T.metalnessMap.channel),roughnessMapUv:Ne&&M(T.roughnessMap.channel),anisotropyMapUv:te&&M(T.anisotropyMap.channel),clearcoatMapUv:Se&&M(T.clearcoatMap.channel),clearcoatNormalMapUv:ye&&M(T.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:z&&M(T.clearcoatRoughnessMap.channel),iridescenceMapUv:de&&M(T.iridescenceMap.channel),iridescenceThicknessMapUv:xe&&M(T.iridescenceThicknessMap.channel),sheenColorMapUv:J&&M(T.sheenColorMap.channel),sheenRoughnessMapUv:ze&&M(T.sheenRoughnessMap.channel),specularMapUv:qe&&M(T.specularMap.channel),specularColorMapUv:Ve&&M(T.specularColorMap.channel),specularIntensityMapUv:He&&M(T.specularIntensityMap.channel),transmissionMapUv:Fe&&M(T.transmissionMap.channel),thicknessMapUv:Je&&M(T.thicknessMap.channel),alphaMapUv:G&&M(T.alphaMap.channel),vertexTangents:!!X.attributes.tangent&&(be||Ze),vertexColors:T.vertexColors,vertexAlphas:T.vertexColors===!0&&!!X.attributes.color&&X.attributes.color.itemSize===4,vertexUv1s:Te,vertexUv2s:Le,vertexUv3s:Tt,pointsUvs:Y.isPoints===!0&&!!X.attributes.uv&&(Ye||G),fog:!!Z,useFog:T.fog===!0,fogExp2:Z&&Z.isFogExp2,flatShading:T.flatShading===!0,sizeAttenuation:T.sizeAttenuation===!0,logarithmicDepthBuffer:m,skinning:Y.isSkinnedMesh===!0,morphTargets:X.morphAttributes.position!==void 0,morphNormals:X.morphAttributes.normal!==void 0,morphColors:X.morphAttributes.color!==void 0,morphTargetsCount:Ee,morphTextureStride:j,numDirLights:U.directional.length,numPointLights:U.point.length,numSpotLights:U.spot.length,numSpotLightMaps:U.spotLightMap.length,numRectAreaLights:U.rectArea.length,numHemiLights:U.hemi.length,numDirLightShadows:U.directionalShadowMap.length,numPointLightShadows:U.pointShadowMap.length,numSpotLightShadows:U.spotShadowMap.length,numSpotLightShadowsWithMaps:U.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:T.dithering,shadowMapEnabled:r.shadowMap.enabled&&$.length>0,shadowMapType:r.shadowMap.type,toneMapping:T.toneMapped?r.toneMapping:$i,useLegacyLights:r.useLegacyLights,premultipliedAlpha:T.premultipliedAlpha,doubleSided:T.side===qi,flipSided:T.side===In,useDepthPacking:T.depthPacking>=0,depthPacking:T.depthPacking||0,index0AttributeName:T.index0AttributeName,extensionDerivatives:ee&&T.extensions.derivatives===!0,extensionFragDepth:ee&&T.extensions.fragDepth===!0,extensionDrawBuffers:ee&&T.extensions.drawBuffers===!0,extensionShaderTextureLOD:ee&&T.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:d||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:d||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:d||n.has("EXT_shader_texture_lod"),customProgramCacheKey:T.customProgramCacheKey()}}function g(T){const U=[];if(T.shaderID?U.push(T.shaderID):(U.push(T.customVertexShaderID),U.push(T.customFragmentShaderID)),T.defines!==void 0)for(const $ in T.defines)U.push($),U.push(T.defines[$]);return T.isRawShaderMaterial===!1&&(S(U,T),b(U,T),U.push(r.outputColorSpace)),U.push(T.customProgramCacheKey),U.join()}function S(T,U){T.push(U.precision),T.push(U.outputColorSpace),T.push(U.envMapMode),T.push(U.envMapCubeUVHeight),T.push(U.mapUv),T.push(U.alphaMapUv),T.push(U.lightMapUv),T.push(U.aoMapUv),T.push(U.bumpMapUv),T.push(U.normalMapUv),T.push(U.displacementMapUv),T.push(U.emissiveMapUv),T.push(U.metalnessMapUv),T.push(U.roughnessMapUv),T.push(U.anisotropyMapUv),T.push(U.clearcoatMapUv),T.push(U.clearcoatNormalMapUv),T.push(U.clearcoatRoughnessMapUv),T.push(U.iridescenceMapUv),T.push(U.iridescenceThicknessMapUv),T.push(U.sheenColorMapUv),T.push(U.sheenRoughnessMapUv),T.push(U.specularMapUv),T.push(U.specularColorMapUv),T.push(U.specularIntensityMapUv),T.push(U.transmissionMapUv),T.push(U.thicknessMapUv),T.push(U.combine),T.push(U.fogExp2),T.push(U.sizeAttenuation),T.push(U.morphTargetsCount),T.push(U.morphAttributeCount),T.push(U.numDirLights),T.push(U.numPointLights),T.push(U.numSpotLights),T.push(U.numSpotLightMaps),T.push(U.numHemiLights),T.push(U.numRectAreaLights),T.push(U.numDirLightShadows),T.push(U.numPointLightShadows),T.push(U.numSpotLightShadows),T.push(U.numSpotLightShadowsWithMaps),T.push(U.shadowMapType),T.push(U.toneMapping),T.push(U.numClippingPlanes),T.push(U.numClipIntersection),T.push(U.depthPacking)}function b(T,U){c.disableAll(),U.isWebGL2&&c.enable(0),U.supportsVertexTextures&&c.enable(1),U.instancing&&c.enable(2),U.instancingColor&&c.enable(3),U.matcap&&c.enable(4),U.envMap&&c.enable(5),U.normalMapObjectSpace&&c.enable(6),U.normalMapTangentSpace&&c.enable(7),U.clearcoat&&c.enable(8),U.iridescence&&c.enable(9),U.alphaTest&&c.enable(10),U.vertexColors&&c.enable(11),U.vertexAlphas&&c.enable(12),U.vertexUv1s&&c.enable(13),U.vertexUv2s&&c.enable(14),U.vertexUv3s&&c.enable(15),U.vertexTangents&&c.enable(16),U.anisotropy&&c.enable(17),T.push(c.mask),c.disableAll(),U.fog&&c.enable(0),U.useFog&&c.enable(1),U.flatShading&&c.enable(2),U.logarithmicDepthBuffer&&c.enable(3),U.skinning&&c.enable(4),U.morphTargets&&c.enable(5),U.morphNormals&&c.enable(6),U.morphColors&&c.enable(7),U.premultipliedAlpha&&c.enable(8),U.shadowMapEnabled&&c.enable(9),U.useLegacyLights&&c.enable(10),U.doubleSided&&c.enable(11),U.flipSided&&c.enable(12),U.useDepthPacking&&c.enable(13),U.dithering&&c.enable(14),U.transmission&&c.enable(15),U.sheen&&c.enable(16),U.opaque&&c.enable(17),U.pointsUvs&&c.enable(18),T.push(c.mask)}function E(T){const U=v[T.type];let $;if(U){const he=Ui[U];$=Ov.clone(he.uniforms)}else $=T.uniforms;return $}function A(T,U){let $;for(let he=0,Y=h.length;he<Y;he++){const Z=h[he];if(Z.cacheKey===U){$=Z,++$.usedTimes;break}}return $===void 0&&($=new CL(r,U,T,s),h.push($)),$}function L(T){if(--T.usedTimes===0){const U=h.indexOf(T);h[U]=h[h.length-1],h.pop(),T.destroy()}}function F(T){u.remove(T)}function N(){u.dispose()}return{getParameters:y,getProgramCacheKey:g,getUniforms:E,acquireProgram:A,releaseProgram:L,releaseShaderCache:F,programs:h,dispose:N}}function DL(){let r=new WeakMap;function e(s){let o=r.get(s);return o===void 0&&(o={},r.set(s,o)),o}function t(s){r.delete(s)}function n(s,o,c){r.get(s)[o]=c}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function NL(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function w_(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function E_(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function o(m,p,_,v,M,y){let g=r[e];return g===void 0?(g={id:m.id,object:m,geometry:p,material:_,groupOrder:v,renderOrder:m.renderOrder,z:M,group:y},r[e]=g):(g.id=m.id,g.object=m,g.geometry=p,g.material=_,g.groupOrder=v,g.renderOrder=m.renderOrder,g.z=M,g.group=y),e++,g}function c(m,p,_,v,M,y){const g=o(m,p,_,v,M,y);_.transmission>0?n.push(g):_.transparent===!0?i.push(g):t.push(g)}function u(m,p,_,v,M,y){const g=o(m,p,_,v,M,y);_.transmission>0?n.unshift(g):_.transparent===!0?i.unshift(g):t.unshift(g)}function h(m,p){t.length>1&&t.sort(m||NL),n.length>1&&n.sort(p||w_),i.length>1&&i.sort(p||w_)}function d(){for(let m=e,p=r.length;m<p;m++){const _=r[m];if(_.id===null)break;_.id=null,_.object=null,_.geometry=null,_.material=null,_.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:c,unshift:u,finish:d,sort:h}}function OL(){let r=new WeakMap;function e(n,i){const s=r.get(n);let o;return s===void 0?(o=new E_,r.set(n,[o])):i>=s.length?(o=new E_,s.push(o)):o=s[i],o}function t(){r=new WeakMap}return{get:e,dispose:t}}function FL(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new I,color:new Oe};break;case"SpotLight":t={position:new I,direction:new I,color:new Oe,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new I,color:new Oe,distance:0,decay:0};break;case"HemisphereLight":t={direction:new I,skyColor:new Oe,groundColor:new Oe};break;case"RectAreaLight":t={color:new Oe,position:new I,halfWidth:new I,halfHeight:new I};break}return r[e.id]=t,t}}}function BL(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ce};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ce};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ce,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let zL=0;function HL(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function kL(r,e){const t=new FL,n=BL(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let d=0;d<9;d++)i.probe.push(new I);const s=new I,o=new at,c=new at;function u(d,m){let p=0,_=0,v=0;for(let $=0;$<9;$++)i.probe[$].set(0,0,0);let M=0,y=0,g=0,S=0,b=0,E=0,A=0,L=0,F=0,N=0;d.sort(HL);const T=m===!0?Math.PI:1;for(let $=0,he=d.length;$<he;$++){const Y=d[$],Z=Y.color,X=Y.intensity,pe=Y.distance,ne=Y.shadow&&Y.shadow.map?Y.shadow.map.texture:null;if(Y.isAmbientLight)p+=Z.r*X*T,_+=Z.g*X*T,v+=Z.b*X*T;else if(Y.isLightProbe)for(let oe=0;oe<9;oe++)i.probe[oe].addScaledVector(Y.sh.coefficients[oe],X);else if(Y.isDirectionalLight){const oe=t.get(Y);if(oe.color.copy(Y.color).multiplyScalar(Y.intensity*T),Y.castShadow){const me=Y.shadow,_e=n.get(Y);_e.shadowBias=me.bias,_e.shadowNormalBias=me.normalBias,_e.shadowRadius=me.radius,_e.shadowMapSize=me.mapSize,i.directionalShadow[M]=_e,i.directionalShadowMap[M]=ne,i.directionalShadowMatrix[M]=Y.shadow.matrix,E++}i.directional[M]=oe,M++}else if(Y.isSpotLight){const oe=t.get(Y);oe.position.setFromMatrixPosition(Y.matrixWorld),oe.color.copy(Z).multiplyScalar(X*T),oe.distance=pe,oe.coneCos=Math.cos(Y.angle),oe.penumbraCos=Math.cos(Y.angle*(1-Y.penumbra)),oe.decay=Y.decay,i.spot[g]=oe;const me=Y.shadow;if(Y.map&&(i.spotLightMap[F]=Y.map,F++,me.updateMatrices(Y),Y.castShadow&&N++),i.spotLightMatrix[g]=me.matrix,Y.castShadow){const _e=n.get(Y);_e.shadowBias=me.bias,_e.shadowNormalBias=me.normalBias,_e.shadowRadius=me.radius,_e.shadowMapSize=me.mapSize,i.spotShadow[g]=_e,i.spotShadowMap[g]=ne,L++}g++}else if(Y.isRectAreaLight){const oe=t.get(Y);oe.color.copy(Z).multiplyScalar(X),oe.halfWidth.set(Y.width*.5,0,0),oe.halfHeight.set(0,Y.height*.5,0),i.rectArea[S]=oe,S++}else if(Y.isPointLight){const oe=t.get(Y);if(oe.color.copy(Y.color).multiplyScalar(Y.intensity*T),oe.distance=Y.distance,oe.decay=Y.decay,Y.castShadow){const me=Y.shadow,_e=n.get(Y);_e.shadowBias=me.bias,_e.shadowNormalBias=me.normalBias,_e.shadowRadius=me.radius,_e.shadowMapSize=me.mapSize,_e.shadowCameraNear=me.camera.near,_e.shadowCameraFar=me.camera.far,i.pointShadow[y]=_e,i.pointShadowMap[y]=ne,i.pointShadowMatrix[y]=Y.shadow.matrix,A++}i.point[y]=oe,y++}else if(Y.isHemisphereLight){const oe=t.get(Y);oe.skyColor.copy(Y.color).multiplyScalar(X*T),oe.groundColor.copy(Y.groundColor).multiplyScalar(X*T),i.hemi[b]=oe,b++}}S>0&&(e.isWebGL2||r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=Ae.LTC_FLOAT_1,i.rectAreaLTC2=Ae.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=Ae.LTC_HALF_1,i.rectAreaLTC2=Ae.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=p,i.ambient[1]=_,i.ambient[2]=v;const U=i.hash;(U.directionalLength!==M||U.pointLength!==y||U.spotLength!==g||U.rectAreaLength!==S||U.hemiLength!==b||U.numDirectionalShadows!==E||U.numPointShadows!==A||U.numSpotShadows!==L||U.numSpotMaps!==F)&&(i.directional.length=M,i.spot.length=g,i.rectArea.length=S,i.point.length=y,i.hemi.length=b,i.directionalShadow.length=E,i.directionalShadowMap.length=E,i.pointShadow.length=A,i.pointShadowMap.length=A,i.spotShadow.length=L,i.spotShadowMap.length=L,i.directionalShadowMatrix.length=E,i.pointShadowMatrix.length=A,i.spotLightMatrix.length=L+F-N,i.spotLightMap.length=F,i.numSpotLightShadowsWithMaps=N,U.directionalLength=M,U.pointLength=y,U.spotLength=g,U.rectAreaLength=S,U.hemiLength=b,U.numDirectionalShadows=E,U.numPointShadows=A,U.numSpotShadows=L,U.numSpotMaps=F,i.version=zL++)}function h(d,m){let p=0,_=0,v=0,M=0,y=0;const g=m.matrixWorldInverse;for(let S=0,b=d.length;S<b;S++){const E=d[S];if(E.isDirectionalLight){const A=i.directional[p];A.direction.setFromMatrixPosition(E.matrixWorld),s.setFromMatrixPosition(E.target.matrixWorld),A.direction.sub(s),A.direction.transformDirection(g),p++}else if(E.isSpotLight){const A=i.spot[v];A.position.setFromMatrixPosition(E.matrixWorld),A.position.applyMatrix4(g),A.direction.setFromMatrixPosition(E.matrixWorld),s.setFromMatrixPosition(E.target.matrixWorld),A.direction.sub(s),A.direction.transformDirection(g),v++}else if(E.isRectAreaLight){const A=i.rectArea[M];A.position.setFromMatrixPosition(E.matrixWorld),A.position.applyMatrix4(g),c.identity(),o.copy(E.matrixWorld),o.premultiply(g),c.extractRotation(o),A.halfWidth.set(E.width*.5,0,0),A.halfHeight.set(0,E.height*.5,0),A.halfWidth.applyMatrix4(c),A.halfHeight.applyMatrix4(c),M++}else if(E.isPointLight){const A=i.point[_];A.position.setFromMatrixPosition(E.matrixWorld),A.position.applyMatrix4(g),_++}else if(E.isHemisphereLight){const A=i.hemi[y];A.direction.setFromMatrixPosition(E.matrixWorld),A.direction.transformDirection(g),y++}}}return{setup:u,setupView:h,state:i}}function T_(r,e){const t=new kL(r,e),n=[],i=[];function s(){n.length=0,i.length=0}function o(m){n.push(m)}function c(m){i.push(m)}function u(m){t.setup(n,m)}function h(m){t.setupView(n,m)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:u,setupLightsView:h,pushLight:o,pushShadow:c}}function GL(r,e){let t=new WeakMap;function n(s,o=0){const c=t.get(s);let u;return c===void 0?(u=new T_(r,e),t.set(s,[u])):o>=c.length?(u=new T_(r,e),c.push(u)):u=c[o],u}function i(){t=new WeakMap}return{get:n,dispose:i}}class jd extends Dn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=xv,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class ep extends Dn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const VL=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,WL=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function XL(r,e,t){let n=new Du;const i=new ce,s=new ce,o=new Dt,c=new jd({depthPacking:Mv}),u=new ep,h={},d=t.maxTextureSize,m={[Ji]:In,[In]:Ji,[qi]:qi},p=new Qi({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ce},radius:{value:4}},vertexShader:VL,fragmentShader:WL}),_=p.clone();_.defines.HORIZONTAL_PASS=1;const v=new _t;v.setAttribute("position",new Nt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const M=new Mn(v,p),y=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Dd;let g=this.type;this.render=function(A,L,F){if(y.enabled===!1||y.autoUpdate===!1&&y.needsUpdate===!1||A.length===0)return;const N=r.getRenderTarget(),T=r.getActiveCubeFace(),U=r.getActiveMipmapLevel(),$=r.state;$.setBlending(Er),$.buffers.color.setClear(1,1,1,1),$.buffers.depth.setTest(!0),$.setScissorTest(!1);const he=g!==Xi&&this.type===Xi,Y=g===Xi&&this.type!==Xi;for(let Z=0,X=A.length;Z<X;Z++){const pe=A[Z],ne=pe.shadow;if(ne===void 0){console.warn("THREE.WebGLShadowMap:",pe,"has no shadow.");continue}if(ne.autoUpdate===!1&&ne.needsUpdate===!1)continue;i.copy(ne.mapSize);const oe=ne.getFrameExtents();if(i.multiply(oe),s.copy(ne.mapSize),(i.x>d||i.y>d)&&(i.x>d&&(s.x=Math.floor(d/oe.x),i.x=s.x*oe.x,ne.mapSize.x=s.x),i.y>d&&(s.y=Math.floor(d/oe.y),i.y=s.y*oe.y,ne.mapSize.y=s.y)),ne.map===null||he===!0||Y===!0){const _e=this.type!==Xi?{minFilter:on,magFilter:on}:{};ne.map!==null&&ne.map.dispose(),ne.map=new Oi(i.x,i.y,_e),ne.map.texture.name=pe.name+".shadowMap",ne.camera.updateProjectionMatrix()}r.setRenderTarget(ne.map),r.clear();const me=ne.getViewportCount();for(let _e=0;_e<me;_e++){const Ee=ne.getViewport(_e);o.set(s.x*Ee.x,s.y*Ee.y,s.x*Ee.z,s.y*Ee.w),$.viewport(o),ne.updateMatrices(pe,_e),n=ne.getFrustum(),E(L,F,ne.camera,pe,this.type)}ne.isPointLightShadow!==!0&&this.type===Xi&&S(ne,F),ne.needsUpdate=!1}g=this.type,y.needsUpdate=!1,r.setRenderTarget(N,T,U)};function S(A,L){const F=e.update(M);p.defines.VSM_SAMPLES!==A.blurSamples&&(p.defines.VSM_SAMPLES=A.blurSamples,_.defines.VSM_SAMPLES=A.blurSamples,p.needsUpdate=!0,_.needsUpdate=!0),A.mapPass===null&&(A.mapPass=new Oi(i.x,i.y)),p.uniforms.shadow_pass.value=A.map.texture,p.uniforms.resolution.value=A.mapSize,p.uniforms.radius.value=A.radius,r.setRenderTarget(A.mapPass),r.clear(),r.renderBufferDirect(L,null,F,p,M,null),_.uniforms.shadow_pass.value=A.mapPass.texture,_.uniforms.resolution.value=A.mapSize,_.uniforms.radius.value=A.radius,r.setRenderTarget(A.map),r.clear(),r.renderBufferDirect(L,null,F,_,M,null)}function b(A,L,F,N){let T=null;const U=F.isPointLight===!0?A.customDistanceMaterial:A.customDepthMaterial;if(U!==void 0)T=U;else if(T=F.isPointLight===!0?u:c,r.localClippingEnabled&&L.clipShadows===!0&&Array.isArray(L.clippingPlanes)&&L.clippingPlanes.length!==0||L.displacementMap&&L.displacementScale!==0||L.alphaMap&&L.alphaTest>0||L.map&&L.alphaTest>0){const $=T.uuid,he=L.uuid;let Y=h[$];Y===void 0&&(Y={},h[$]=Y);let Z=Y[he];Z===void 0&&(Z=T.clone(),Y[he]=Z),T=Z}if(T.visible=L.visible,T.wireframe=L.wireframe,N===Xi?T.side=L.shadowSide!==null?L.shadowSide:L.side:T.side=L.shadowSide!==null?L.shadowSide:m[L.side],T.alphaMap=L.alphaMap,T.alphaTest=L.alphaTest,T.map=L.map,T.clipShadows=L.clipShadows,T.clippingPlanes=L.clippingPlanes,T.clipIntersection=L.clipIntersection,T.displacementMap=L.displacementMap,T.displacementScale=L.displacementScale,T.displacementBias=L.displacementBias,T.wireframeLinewidth=L.wireframeLinewidth,T.linewidth=L.linewidth,F.isPointLight===!0&&T.isMeshDistanceMaterial===!0){const $=r.properties.get(T);$.light=F}return T}function E(A,L,F,N,T){if(A.visible===!1)return;if(A.layers.test(L.layers)&&(A.isMesh||A.isLine||A.isPoints)&&(A.castShadow||A.receiveShadow&&T===Xi)&&(!A.frustumCulled||n.intersectsObject(A))){A.modelViewMatrix.multiplyMatrices(F.matrixWorldInverse,A.matrixWorld);const he=e.update(A),Y=A.material;if(Array.isArray(Y)){const Z=he.groups;for(let X=0,pe=Z.length;X<pe;X++){const ne=Z[X],oe=Y[ne.materialIndex];if(oe&&oe.visible){const me=b(A,oe,N,T);r.renderBufferDirect(F,null,he,me,A,ne)}}}else if(Y.visible){const Z=b(A,Y,N,T);r.renderBufferDirect(F,null,he,Z,A,null)}}const $=A.children;for(let he=0,Y=$.length;he<Y;he++)E($[he],L,F,N,T)}}function qL(r,e,t){const n=t.isWebGL2;function i(){let G=!1;const Ce=new Dt;let ee=null;const Te=new Dt(0,0,0,0);return{setMask:function(Le){ee!==Le&&!G&&(r.colorMask(Le,Le,Le,Le),ee=Le)},setLocked:function(Le){G=Le},setClear:function(Le,Tt,kt,$t,Hi){Hi===!0&&(Le*=$t,Tt*=$t,kt*=$t),Ce.set(Le,Tt,kt,$t),Te.equals(Ce)===!1&&(r.clearColor(Le,Tt,kt,$t),Te.copy(Ce))},reset:function(){G=!1,ee=null,Te.set(-1,0,0,0)}}}function s(){let G=!1,Ce=null,ee=null,Te=null;return{setTest:function(Le){Le?Ge(r.DEPTH_TEST):je(r.DEPTH_TEST)},setMask:function(Le){Ce!==Le&&!G&&(r.depthMask(Le),Ce=Le)},setFunc:function(Le){if(ee!==Le){switch(Le){case $0:r.depthFunc(r.NEVER);break;case K0:r.depthFunc(r.ALWAYS);break;case J0:r.depthFunc(r.LESS);break;case yu:r.depthFunc(r.LEQUAL);break;case Q0:r.depthFunc(r.EQUAL);break;case j0:r.depthFunc(r.GEQUAL);break;case ev:r.depthFunc(r.GREATER);break;case tv:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}ee=Le}},setLocked:function(Le){G=Le},setClear:function(Le){Te!==Le&&(r.clearDepth(Le),Te=Le)},reset:function(){G=!1,Ce=null,ee=null,Te=null}}}function o(){let G=!1,Ce=null,ee=null,Te=null,Le=null,Tt=null,kt=null,$t=null,Hi=null;return{setTest:function(Gt){G||(Gt?Ge(r.STENCIL_TEST):je(r.STENCIL_TEST))},setMask:function(Gt){Ce!==Gt&&!G&&(r.stencilMask(Gt),Ce=Gt)},setFunc:function(Gt,hi,Sn){(ee!==Gt||Te!==hi||Le!==Sn)&&(r.stencilFunc(Gt,hi,Sn),ee=Gt,Te=hi,Le=Sn)},setOp:function(Gt,hi,Sn){(Tt!==Gt||kt!==hi||$t!==Sn)&&(r.stencilOp(Gt,hi,Sn),Tt=Gt,kt=hi,$t=Sn)},setLocked:function(Gt){G=Gt},setClear:function(Gt){Hi!==Gt&&(r.clearStencil(Gt),Hi=Gt)},reset:function(){G=!1,Ce=null,ee=null,Te=null,Le=null,Tt=null,kt=null,$t=null,Hi=null}}}const c=new i,u=new s,h=new o,d=new WeakMap,m=new WeakMap;let p={},_={},v=new WeakMap,M=[],y=null,g=!1,S=null,b=null,E=null,A=null,L=null,F=null,N=null,T=!1,U=null,$=null,he=null,Y=null,Z=null;const X=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let pe=!1,ne=0;const oe=r.getParameter(r.VERSION);oe.indexOf("WebGL")!==-1?(ne=parseFloat(/^WebGL (\d)/.exec(oe)[1]),pe=ne>=1):oe.indexOf("OpenGL ES")!==-1&&(ne=parseFloat(/^OpenGL ES (\d)/.exec(oe)[1]),pe=ne>=2);let me=null,_e={};const Ee=r.getParameter(r.SCISSOR_BOX),j=r.getParameter(r.VIEWPORT),ve=new Dt().fromArray(Ee),Me=new Dt().fromArray(j);function Re(G,Ce,ee,Te){const Le=new Uint8Array(4),Tt=r.createTexture();r.bindTexture(G,Tt),r.texParameteri(G,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(G,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let kt=0;kt<ee;kt++)n&&(G===r.TEXTURE_3D||G===r.TEXTURE_2D_ARRAY)?r.texImage3D(Ce,0,r.RGBA,1,1,Te,0,r.RGBA,r.UNSIGNED_BYTE,Le):r.texImage2D(Ce+kt,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,Le);return Tt}const Ie={};Ie[r.TEXTURE_2D]=Re(r.TEXTURE_2D,r.TEXTURE_2D,1),Ie[r.TEXTURE_CUBE_MAP]=Re(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),n&&(Ie[r.TEXTURE_2D_ARRAY]=Re(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),Ie[r.TEXTURE_3D]=Re(r.TEXTURE_3D,r.TEXTURE_3D,1,1)),c.setClear(0,0,0,1),u.setClear(1),h.setClear(0),Ge(r.DEPTH_TEST),u.setFunc(yu),fe(!1),De(Xf),Ge(r.CULL_FACE),ie(Er);function Ge(G){p[G]!==!0&&(r.enable(G),p[G]=!0)}function je(G){p[G]!==!1&&(r.disable(G),p[G]=!1)}function Ye(G,Ce){return _[G]!==Ce?(r.bindFramebuffer(G,Ce),_[G]=Ce,n&&(G===r.DRAW_FRAMEBUFFER&&(_[r.FRAMEBUFFER]=Ce),G===r.FRAMEBUFFER&&(_[r.DRAW_FRAMEBUFFER]=Ce)),!0):!1}function At(G,Ce){let ee=M,Te=!1;if(G)if(ee=v.get(Ce),ee===void 0&&(ee=[],v.set(Ce,ee)),G.isWebGLMultipleRenderTargets){const Le=G.texture;if(ee.length!==Le.length||ee[0]!==r.COLOR_ATTACHMENT0){for(let Tt=0,kt=Le.length;Tt<kt;Tt++)ee[Tt]=r.COLOR_ATTACHMENT0+Tt;ee.length=Le.length,Te=!0}}else ee[0]!==r.COLOR_ATTACHMENT0&&(ee[0]=r.COLOR_ATTACHMENT0,Te=!0);else ee[0]!==r.BACK&&(ee[0]=r.BACK,Te=!0);Te&&(t.isWebGL2?r.drawBuffers(ee):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(ee))}function $e(G){return y!==G?(r.useProgram(G),y=G,!0):!1}const H={[As]:r.FUNC_ADD,[B0]:r.FUNC_SUBTRACT,[z0]:r.FUNC_REVERSE_SUBTRACT};if(n)H[$f]=r.MIN,H[Kf]=r.MAX;else{const G=e.get("EXT_blend_minmax");G!==null&&(H[$f]=G.MIN_EXT,H[Kf]=G.MAX_EXT)}const we={[H0]:r.ZERO,[k0]:r.ONE,[G0]:r.SRC_COLOR,[Nd]:r.SRC_ALPHA,[Z0]:r.SRC_ALPHA_SATURATE,[q0]:r.DST_COLOR,[W0]:r.DST_ALPHA,[V0]:r.ONE_MINUS_SRC_COLOR,[Od]:r.ONE_MINUS_SRC_ALPHA,[Y0]:r.ONE_MINUS_DST_COLOR,[X0]:r.ONE_MINUS_DST_ALPHA};function ie(G,Ce,ee,Te,Le,Tt,kt,$t){if(G===Er){g===!0&&(je(r.BLEND),g=!1);return}if(g===!1&&(Ge(r.BLEND),g=!0),G!==F0){if(G!==S||$t!==T){if((b!==As||L!==As)&&(r.blendEquation(r.FUNC_ADD),b=As,L=As),$t)switch(G){case Ds:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case qf:r.blendFunc(r.ONE,r.ONE);break;case Yf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Zf:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}else switch(G){case Ds:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case qf:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case Yf:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Zf:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",G);break}E=null,A=null,F=null,N=null,S=G,T=$t}return}Le=Le||Ce,Tt=Tt||ee,kt=kt||Te,(Ce!==b||Le!==L)&&(r.blendEquationSeparate(H[Ce],H[Le]),b=Ce,L=Le),(ee!==E||Te!==A||Tt!==F||kt!==N)&&(r.blendFuncSeparate(we[ee],we[Te],we[Tt],we[kt]),E=ee,A=Te,F=Tt,N=kt),S=G,T=!1}function be(G,Ce){G.side===qi?je(r.CULL_FACE):Ge(r.CULL_FACE);let ee=G.side===In;Ce&&(ee=!ee),fe(ee),G.blending===Ds&&G.transparent===!1?ie(Er):ie(G.blending,G.blendEquation,G.blendSrc,G.blendDst,G.blendEquationAlpha,G.blendSrcAlpha,G.blendDstAlpha,G.premultipliedAlpha),u.setFunc(G.depthFunc),u.setTest(G.depthTest),u.setMask(G.depthWrite),c.setMask(G.colorWrite);const Te=G.stencilWrite;h.setTest(Te),Te&&(h.setMask(G.stencilWriteMask),h.setFunc(G.stencilFunc,G.stencilRef,G.stencilFuncMask),h.setOp(G.stencilFail,G.stencilZFail,G.stencilZPass)),Ne(G.polygonOffset,G.polygonOffsetFactor,G.polygonOffsetUnits),G.alphaToCoverage===!0?Ge(r.SAMPLE_ALPHA_TO_COVERAGE):je(r.SAMPLE_ALPHA_TO_COVERAGE)}function fe(G){U!==G&&(G?r.frontFace(r.CW):r.frontFace(r.CCW),U=G)}function De(G){G!==D0?(Ge(r.CULL_FACE),G!==$&&(G===Xf?r.cullFace(r.BACK):G===N0?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):je(r.CULL_FACE),$=G}function Ue(G){G!==he&&(pe&&r.lineWidth(G),he=G)}function Ne(G,Ce,ee){G?(Ge(r.POLYGON_OFFSET_FILL),(Y!==Ce||Z!==ee)&&(r.polygonOffset(Ce,ee),Y=Ce,Z=ee)):je(r.POLYGON_OFFSET_FILL)}function Ze(G){G?Ge(r.SCISSOR_TEST):je(r.SCISSOR_TEST)}function nt(G){G===void 0&&(G=r.TEXTURE0+X-1),me!==G&&(r.activeTexture(G),me=G)}function Lt(G,Ce,ee){ee===void 0&&(me===null?ee=r.TEXTURE0+X-1:ee=me);let Te=_e[ee];Te===void 0&&(Te={type:void 0,texture:void 0},_e[ee]=Te),(Te.type!==G||Te.texture!==Ce)&&(me!==ee&&(r.activeTexture(ee),me=ee),r.bindTexture(G,Ce||Ie[G]),Te.type=G,Te.texture=Ce)}function O(){const G=_e[me];G!==void 0&&G.type!==void 0&&(r.bindTexture(G.type,null),G.type=void 0,G.texture=void 0)}function P(){try{r.compressedTexImage2D.apply(r,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function te(){try{r.compressedTexImage3D.apply(r,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Se(){try{r.texSubImage2D.apply(r,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function ye(){try{r.texSubImage3D.apply(r,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function z(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function de(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function xe(){try{r.texStorage2D.apply(r,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function J(){try{r.texStorage3D.apply(r,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function ze(){try{r.texImage2D.apply(r,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function qe(){try{r.texImage3D.apply(r,arguments)}catch(G){console.error("THREE.WebGLState:",G)}}function Ve(G){ve.equals(G)===!1&&(r.scissor(G.x,G.y,G.z,G.w),ve.copy(G))}function He(G){Me.equals(G)===!1&&(r.viewport(G.x,G.y,G.z,G.w),Me.copy(G))}function Fe(G,Ce){let ee=m.get(Ce);ee===void 0&&(ee=new WeakMap,m.set(Ce,ee));let Te=ee.get(G);Te===void 0&&(Te=r.getUniformBlockIndex(Ce,G.name),ee.set(G,Te))}function Je(G,Ce){const Te=m.get(Ce).get(G);d.get(Ce)!==Te&&(r.uniformBlockBinding(Ce,Te,G.__bindingPointIndex),d.set(Ce,Te))}function xt(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),n===!0&&(r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),p={},me=null,_e={},_={},v=new WeakMap,M=[],y=null,g=!1,S=null,b=null,E=null,A=null,L=null,F=null,N=null,T=!1,U=null,$=null,he=null,Y=null,Z=null,ve.set(0,0,r.canvas.width,r.canvas.height),Me.set(0,0,r.canvas.width,r.canvas.height),c.reset(),u.reset(),h.reset()}return{buffers:{color:c,depth:u,stencil:h},enable:Ge,disable:je,bindFramebuffer:Ye,drawBuffers:At,useProgram:$e,setBlending:ie,setMaterial:be,setFlipSided:fe,setCullFace:De,setLineWidth:Ue,setPolygonOffset:Ne,setScissorTest:Ze,activeTexture:nt,bindTexture:Lt,unbindTexture:O,compressedTexImage2D:P,compressedTexImage3D:te,texImage2D:ze,texImage3D:qe,updateUBOMapping:Fe,uniformBlockBinding:Je,texStorage2D:xe,texStorage3D:J,texSubImage2D:Se,texSubImage3D:ye,compressedTexSubImage2D:z,compressedTexSubImage3D:de,scissor:Ve,viewport:He,reset:xt}}function YL(r,e,t,n,i,s,o){const c=i.isWebGL2,u=i.maxTextures,h=i.maxCubemapSize,d=i.maxTextureSize,m=i.maxSamples,p=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,_=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),v=new WeakMap;let M;const y=new WeakMap;let g=!1;try{g=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function S(O,P){return g?new OffscreenCanvas(O,P):nc("canvas")}function b(O,P,te,Se){let ye=1;if((O.width>Se||O.height>Se)&&(ye=Se/Math.max(O.width,O.height)),ye<1||P===!0)if(typeof HTMLImageElement<"u"&&O instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&O instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&O instanceof ImageBitmap){const z=P?bu:Math.floor,de=z(ye*O.width),xe=z(ye*O.height);M===void 0&&(M=S(de,xe));const J=te?S(de,xe):M;return J.width=de,J.height=xe,J.getContext("2d").drawImage(O,0,0,de,xe),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+O.width+"x"+O.height+") to ("+de+"x"+xe+")."),J}else return"data"in O&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+O.width+"x"+O.height+")."),O;return O}function E(O){return Md(O.width)&&Md(O.height)}function A(O){return c?!1:O.wrapS!==Ln||O.wrapT!==Ln||O.minFilter!==on&&O.minFilter!==cn}function L(O,P){return O.generateMipmaps&&P&&O.minFilter!==on&&O.minFilter!==cn}function F(O){r.generateMipmap(O)}function N(O,P,te,Se,ye=!1){if(c===!1)return P;if(O!==null){if(r[O]!==void 0)return r[O];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+O+"'")}let z=P;return P===r.RED&&(te===r.FLOAT&&(z=r.R32F),te===r.HALF_FLOAT&&(z=r.R16F),te===r.UNSIGNED_BYTE&&(z=r.R8)),P===r.RG&&(te===r.FLOAT&&(z=r.RG32F),te===r.HALF_FLOAT&&(z=r.RG16F),te===r.UNSIGNED_BYTE&&(z=r.RG8)),P===r.RGBA&&(te===r.FLOAT&&(z=r.RGBA32F),te===r.HALF_FLOAT&&(z=r.RGBA16F),te===r.UNSIGNED_BYTE&&(z=Se===ut&&ye===!1?r.SRGB8_ALPHA8:r.RGBA8),te===r.UNSIGNED_SHORT_4_4_4_4&&(z=r.RGBA4),te===r.UNSIGNED_SHORT_5_5_5_1&&(z=r.RGB5_A1)),(z===r.R16F||z===r.R32F||z===r.RG16F||z===r.RG32F||z===r.RGBA16F||z===r.RGBA32F)&&e.get("EXT_color_buffer_float"),z}function T(O,P,te){return L(O,te)===!0||O.isFramebufferTexture&&O.minFilter!==on&&O.minFilter!==cn?Math.log2(Math.max(P.width,P.height))+1:O.mipmaps!==void 0&&O.mipmaps.length>0?O.mipmaps.length:O.isCompressedTexture&&Array.isArray(O.image)?P.mipmaps.length:1}function U(O){return O===on||O===xu||O===zo?r.NEAREST:r.LINEAR}function $(O){const P=O.target;P.removeEventListener("dispose",$),Y(P),P.isVideoTexture&&v.delete(P)}function he(O){const P=O.target;P.removeEventListener("dispose",he),X(P)}function Y(O){const P=n.get(O);if(P.__webglInit===void 0)return;const te=O.source,Se=y.get(te);if(Se){const ye=Se[P.__cacheKey];ye.usedTimes--,ye.usedTimes===0&&Z(O),Object.keys(Se).length===0&&y.delete(te)}n.remove(O)}function Z(O){const P=n.get(O);r.deleteTexture(P.__webglTexture);const te=O.source,Se=y.get(te);delete Se[P.__cacheKey],o.memory.textures--}function X(O){const P=O.texture,te=n.get(O),Se=n.get(P);if(Se.__webglTexture!==void 0&&(r.deleteTexture(Se.__webglTexture),o.memory.textures--),O.depthTexture&&O.depthTexture.dispose(),O.isWebGLCubeRenderTarget)for(let ye=0;ye<6;ye++)r.deleteFramebuffer(te.__webglFramebuffer[ye]),te.__webglDepthbuffer&&r.deleteRenderbuffer(te.__webglDepthbuffer[ye]);else{if(r.deleteFramebuffer(te.__webglFramebuffer),te.__webglDepthbuffer&&r.deleteRenderbuffer(te.__webglDepthbuffer),te.__webglMultisampledFramebuffer&&r.deleteFramebuffer(te.__webglMultisampledFramebuffer),te.__webglColorRenderbuffer)for(let ye=0;ye<te.__webglColorRenderbuffer.length;ye++)te.__webglColorRenderbuffer[ye]&&r.deleteRenderbuffer(te.__webglColorRenderbuffer[ye]);te.__webglDepthRenderbuffer&&r.deleteRenderbuffer(te.__webglDepthRenderbuffer)}if(O.isWebGLMultipleRenderTargets)for(let ye=0,z=P.length;ye<z;ye++){const de=n.get(P[ye]);de.__webglTexture&&(r.deleteTexture(de.__webglTexture),o.memory.textures--),n.remove(P[ye])}n.remove(P),n.remove(O)}let pe=0;function ne(){pe=0}function oe(){const O=pe;return O>=u&&console.warn("THREE.WebGLTextures: Trying to use "+O+" texture units while this GPU supports only "+u),pe+=1,O}function me(O){const P=[];return P.push(O.wrapS),P.push(O.wrapT),P.push(O.wrapR||0),P.push(O.magFilter),P.push(O.minFilter),P.push(O.anisotropy),P.push(O.internalFormat),P.push(O.format),P.push(O.type),P.push(O.generateMipmaps),P.push(O.premultiplyAlpha),P.push(O.flipY),P.push(O.unpackAlignment),P.push(O.colorSpace),P.join()}function _e(O,P){const te=n.get(O);if(O.isVideoTexture&&nt(O),O.isRenderTargetTexture===!1&&O.version>0&&te.__version!==O.version){const Se=O.image;if(Se===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(Se.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Ye(te,O,P);return}}t.bindTexture(r.TEXTURE_2D,te.__webglTexture,r.TEXTURE0+P)}function Ee(O,P){const te=n.get(O);if(O.version>0&&te.__version!==O.version){Ye(te,O,P);return}t.bindTexture(r.TEXTURE_2D_ARRAY,te.__webglTexture,r.TEXTURE0+P)}function j(O,P){const te=n.get(O);if(O.version>0&&te.__version!==O.version){Ye(te,O,P);return}t.bindTexture(r.TEXTURE_3D,te.__webglTexture,r.TEXTURE0+P)}function ve(O,P){const te=n.get(O);if(O.version>0&&te.__version!==O.version){At(te,O,P);return}t.bindTexture(r.TEXTURE_CUBE_MAP,te.__webglTexture,r.TEXTURE0+P)}const Me={[Zo]:r.REPEAT,[Ln]:r.CLAMP_TO_EDGE,[$o]:r.MIRRORED_REPEAT},Re={[on]:r.NEAREST,[xu]:r.NEAREST_MIPMAP_NEAREST,[zo]:r.NEAREST_MIPMAP_LINEAR,[cn]:r.LINEAR,[Bd]:r.LINEAR_MIPMAP_NEAREST,[Jr]:r.LINEAR_MIPMAP_LINEAR},Ie={[wv]:r.NEVER,[Lv]:r.ALWAYS,[Ev]:r.LESS,[Av]:r.LEQUAL,[Tv]:r.EQUAL,[Pv]:r.GEQUAL,[Rv]:r.GREATER,[Cv]:r.NOTEQUAL};function Ge(O,P,te){if(te?(r.texParameteri(O,r.TEXTURE_WRAP_S,Me[P.wrapS]),r.texParameteri(O,r.TEXTURE_WRAP_T,Me[P.wrapT]),(O===r.TEXTURE_3D||O===r.TEXTURE_2D_ARRAY)&&r.texParameteri(O,r.TEXTURE_WRAP_R,Me[P.wrapR]),r.texParameteri(O,r.TEXTURE_MAG_FILTER,Re[P.magFilter]),r.texParameteri(O,r.TEXTURE_MIN_FILTER,Re[P.minFilter])):(r.texParameteri(O,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(O,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),(O===r.TEXTURE_3D||O===r.TEXTURE_2D_ARRAY)&&r.texParameteri(O,r.TEXTURE_WRAP_R,r.CLAMP_TO_EDGE),(P.wrapS!==Ln||P.wrapT!==Ln)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(O,r.TEXTURE_MAG_FILTER,U(P.magFilter)),r.texParameteri(O,r.TEXTURE_MIN_FILTER,U(P.minFilter)),P.minFilter!==on&&P.minFilter!==cn&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),P.compareFunction&&(r.texParameteri(O,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(O,r.TEXTURE_COMPARE_FUNC,Ie[P.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){const Se=e.get("EXT_texture_filter_anisotropic");if(P.magFilter===on||P.minFilter!==zo&&P.minFilter!==Jr||P.type===Yi&&e.has("OES_texture_float_linear")===!1||c===!1&&P.type===Va&&e.has("OES_texture_half_float_linear")===!1)return;(P.anisotropy>1||n.get(P).__currentAnisotropy)&&(r.texParameterf(O,Se.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(P.anisotropy,i.getMaxAnisotropy())),n.get(P).__currentAnisotropy=P.anisotropy)}}function je(O,P){let te=!1;O.__webglInit===void 0&&(O.__webglInit=!0,P.addEventListener("dispose",$));const Se=P.source;let ye=y.get(Se);ye===void 0&&(ye={},y.set(Se,ye));const z=me(P);if(z!==O.__cacheKey){ye[z]===void 0&&(ye[z]={texture:r.createTexture(),usedTimes:0},o.memory.textures++,te=!0),ye[z].usedTimes++;const de=ye[O.__cacheKey];de!==void 0&&(ye[O.__cacheKey].usedTimes--,de.usedTimes===0&&Z(P)),O.__cacheKey=z,O.__webglTexture=ye[z].texture}return te}function Ye(O,P,te){let Se=r.TEXTURE_2D;(P.isDataArrayTexture||P.isCompressedArrayTexture)&&(Se=r.TEXTURE_2D_ARRAY),P.isData3DTexture&&(Se=r.TEXTURE_3D);const ye=je(O,P),z=P.source;t.bindTexture(Se,O.__webglTexture,r.TEXTURE0+te);const de=n.get(z);if(z.version!==de.__version||ye===!0){t.activeTexture(r.TEXTURE0+te),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,P.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,P.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,r.NONE);const xe=A(P)&&E(P.image)===!1;let J=b(P.image,xe,!1,d);J=Lt(P,J);const ze=E(J)||c,qe=s.convert(P.format,P.colorSpace);let Ve=s.convert(P.type),He=N(P.internalFormat,qe,Ve,P.colorSpace);Ge(Se,P,ze);let Fe;const Je=P.mipmaps,xt=c&&P.isVideoTexture!==!0,G=de.__version===void 0||ye===!0,Ce=T(P,J,ze);if(P.isDepthTexture)He=r.DEPTH_COMPONENT,c?P.type===Yi?He=r.DEPTH_COMPONENT32F:P.type===Sr?He=r.DEPTH_COMPONENT24:P.type===qr?He=r.DEPTH24_STENCIL8:He=r.DEPTH_COMPONENT16:P.type===Yi&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),P.format===Yr&&He===r.DEPTH_COMPONENT&&P.type!==Pu&&P.type!==Sr&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),P.type=Sr,Ve=s.convert(P.type)),P.format===Bs&&He===r.DEPTH_COMPONENT&&(He=r.DEPTH_STENCIL,P.type!==qr&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),P.type=qr,Ve=s.convert(P.type))),G&&(xt?t.texStorage2D(r.TEXTURE_2D,1,He,J.width,J.height):t.texImage2D(r.TEXTURE_2D,0,He,J.width,J.height,0,qe,Ve,null));else if(P.isDataTexture)if(Je.length>0&&ze){xt&&G&&t.texStorage2D(r.TEXTURE_2D,Ce,He,Je[0].width,Je[0].height);for(let ee=0,Te=Je.length;ee<Te;ee++)Fe=Je[ee],xt?t.texSubImage2D(r.TEXTURE_2D,ee,0,0,Fe.width,Fe.height,qe,Ve,Fe.data):t.texImage2D(r.TEXTURE_2D,ee,He,Fe.width,Fe.height,0,qe,Ve,Fe.data);P.generateMipmaps=!1}else xt?(G&&t.texStorage2D(r.TEXTURE_2D,Ce,He,J.width,J.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,J.width,J.height,qe,Ve,J.data)):t.texImage2D(r.TEXTURE_2D,0,He,J.width,J.height,0,qe,Ve,J.data);else if(P.isCompressedTexture)if(P.isCompressedArrayTexture){xt&&G&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Ce,He,Je[0].width,Je[0].height,J.depth);for(let ee=0,Te=Je.length;ee<Te;ee++)Fe=Je[ee],P.format!==oi?qe!==null?xt?t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,ee,0,0,0,Fe.width,Fe.height,J.depth,qe,Fe.data,0,0):t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,ee,He,Fe.width,Fe.height,J.depth,0,Fe.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):xt?t.texSubImage3D(r.TEXTURE_2D_ARRAY,ee,0,0,0,Fe.width,Fe.height,J.depth,qe,Ve,Fe.data):t.texImage3D(r.TEXTURE_2D_ARRAY,ee,He,Fe.width,Fe.height,J.depth,0,qe,Ve,Fe.data)}else{xt&&G&&t.texStorage2D(r.TEXTURE_2D,Ce,He,Je[0].width,Je[0].height);for(let ee=0,Te=Je.length;ee<Te;ee++)Fe=Je[ee],P.format!==oi?qe!==null?xt?t.compressedTexSubImage2D(r.TEXTURE_2D,ee,0,0,Fe.width,Fe.height,qe,Fe.data):t.compressedTexImage2D(r.TEXTURE_2D,ee,He,Fe.width,Fe.height,0,Fe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):xt?t.texSubImage2D(r.TEXTURE_2D,ee,0,0,Fe.width,Fe.height,qe,Ve,Fe.data):t.texImage2D(r.TEXTURE_2D,ee,He,Fe.width,Fe.height,0,qe,Ve,Fe.data)}else if(P.isDataArrayTexture)xt?(G&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Ce,He,J.width,J.height,J.depth),t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,J.width,J.height,J.depth,qe,Ve,J.data)):t.texImage3D(r.TEXTURE_2D_ARRAY,0,He,J.width,J.height,J.depth,0,qe,Ve,J.data);else if(P.isData3DTexture)xt?(G&&t.texStorage3D(r.TEXTURE_3D,Ce,He,J.width,J.height,J.depth),t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,J.width,J.height,J.depth,qe,Ve,J.data)):t.texImage3D(r.TEXTURE_3D,0,He,J.width,J.height,J.depth,0,qe,Ve,J.data);else if(P.isFramebufferTexture){if(G)if(xt)t.texStorage2D(r.TEXTURE_2D,Ce,He,J.width,J.height);else{let ee=J.width,Te=J.height;for(let Le=0;Le<Ce;Le++)t.texImage2D(r.TEXTURE_2D,Le,He,ee,Te,0,qe,Ve,null),ee>>=1,Te>>=1}}else if(Je.length>0&&ze){xt&&G&&t.texStorage2D(r.TEXTURE_2D,Ce,He,Je[0].width,Je[0].height);for(let ee=0,Te=Je.length;ee<Te;ee++)Fe=Je[ee],xt?t.texSubImage2D(r.TEXTURE_2D,ee,0,0,qe,Ve,Fe):t.texImage2D(r.TEXTURE_2D,ee,He,qe,Ve,Fe);P.generateMipmaps=!1}else xt?(G&&t.texStorage2D(r.TEXTURE_2D,Ce,He,J.width,J.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,qe,Ve,J)):t.texImage2D(r.TEXTURE_2D,0,He,qe,Ve,J);L(P,ze)&&F(Se),de.__version=z.version,P.onUpdate&&P.onUpdate(P)}O.__version=P.version}function At(O,P,te){if(P.image.length!==6)return;const Se=je(O,P),ye=P.source;t.bindTexture(r.TEXTURE_CUBE_MAP,O.__webglTexture,r.TEXTURE0+te);const z=n.get(ye);if(ye.version!==z.__version||Se===!0){t.activeTexture(r.TEXTURE0+te),r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,P.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,P.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,P.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,r.NONE);const de=P.isCompressedTexture||P.image[0].isCompressedTexture,xe=P.image[0]&&P.image[0].isDataTexture,J=[];for(let ee=0;ee<6;ee++)!de&&!xe?J[ee]=b(P.image[ee],!1,!0,h):J[ee]=xe?P.image[ee].image:P.image[ee],J[ee]=Lt(P,J[ee]);const ze=J[0],qe=E(ze)||c,Ve=s.convert(P.format,P.colorSpace),He=s.convert(P.type),Fe=N(P.internalFormat,Ve,He,P.colorSpace),Je=c&&P.isVideoTexture!==!0,xt=z.__version===void 0||Se===!0;let G=T(P,ze,qe);Ge(r.TEXTURE_CUBE_MAP,P,qe);let Ce;if(de){Je&&xt&&t.texStorage2D(r.TEXTURE_CUBE_MAP,G,Fe,ze.width,ze.height);for(let ee=0;ee<6;ee++){Ce=J[ee].mipmaps;for(let Te=0;Te<Ce.length;Te++){const Le=Ce[Te];P.format!==oi?Ve!==null?Je?t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,Te,0,0,Le.width,Le.height,Ve,Le.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,Te,Fe,Le.width,Le.height,0,Le.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Je?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,Te,0,0,Le.width,Le.height,Ve,He,Le.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,Te,Fe,Le.width,Le.height,0,Ve,He,Le.data)}}}else{Ce=P.mipmaps,Je&&xt&&(Ce.length>0&&G++,t.texStorage2D(r.TEXTURE_CUBE_MAP,G,Fe,J[0].width,J[0].height));for(let ee=0;ee<6;ee++)if(xe){Je?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,0,0,0,J[ee].width,J[ee].height,Ve,He,J[ee].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,0,Fe,J[ee].width,J[ee].height,0,Ve,He,J[ee].data);for(let Te=0;Te<Ce.length;Te++){const Tt=Ce[Te].image[ee].image;Je?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,Te+1,0,0,Tt.width,Tt.height,Ve,He,Tt.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,Te+1,Fe,Tt.width,Tt.height,0,Ve,He,Tt.data)}}else{Je?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,0,0,0,Ve,He,J[ee]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,0,Fe,Ve,He,J[ee]);for(let Te=0;Te<Ce.length;Te++){const Le=Ce[Te];Je?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,Te+1,0,0,Ve,He,Le.image[ee]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+ee,Te+1,Fe,Ve,He,Le.image[ee])}}}L(P,qe)&&F(r.TEXTURE_CUBE_MAP),z.__version=ye.version,P.onUpdate&&P.onUpdate(P)}O.__version=P.version}function $e(O,P,te,Se,ye){const z=s.convert(te.format,te.colorSpace),de=s.convert(te.type),xe=N(te.internalFormat,z,de,te.colorSpace);n.get(P).__hasExternalTextures||(ye===r.TEXTURE_3D||ye===r.TEXTURE_2D_ARRAY?t.texImage3D(ye,0,xe,P.width,P.height,P.depth,0,z,de,null):t.texImage2D(ye,0,xe,P.width,P.height,0,z,de,null)),t.bindFramebuffer(r.FRAMEBUFFER,O),Ze(P)?p.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,Se,ye,n.get(te).__webglTexture,0,Ne(P)):(ye===r.TEXTURE_2D||ye>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&ye<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,Se,ye,n.get(te).__webglTexture,0),t.bindFramebuffer(r.FRAMEBUFFER,null)}function H(O,P,te){if(r.bindRenderbuffer(r.RENDERBUFFER,O),P.depthBuffer&&!P.stencilBuffer){let Se=r.DEPTH_COMPONENT16;if(te||Ze(P)){const ye=P.depthTexture;ye&&ye.isDepthTexture&&(ye.type===Yi?Se=r.DEPTH_COMPONENT32F:ye.type===Sr&&(Se=r.DEPTH_COMPONENT24));const z=Ne(P);Ze(P)?p.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,z,Se,P.width,P.height):r.renderbufferStorageMultisample(r.RENDERBUFFER,z,Se,P.width,P.height)}else r.renderbufferStorage(r.RENDERBUFFER,Se,P.width,P.height);r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,O)}else if(P.depthBuffer&&P.stencilBuffer){const Se=Ne(P);te&&Ze(P)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,Se,r.DEPTH24_STENCIL8,P.width,P.height):Ze(P)?p.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Se,r.DEPTH24_STENCIL8,P.width,P.height):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,P.width,P.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,O)}else{const Se=P.isWebGLMultipleRenderTargets===!0?P.texture:[P.texture];for(let ye=0;ye<Se.length;ye++){const z=Se[ye],de=s.convert(z.format,z.colorSpace),xe=s.convert(z.type),J=N(z.internalFormat,de,xe,z.colorSpace),ze=Ne(P);te&&Ze(P)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,ze,J,P.width,P.height):Ze(P)?p.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,ze,J,P.width,P.height):r.renderbufferStorage(r.RENDERBUFFER,J,P.width,P.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function we(O,P){if(P&&P.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,O),!(P.depthTexture&&P.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(P.depthTexture).__webglTexture||P.depthTexture.image.width!==P.width||P.depthTexture.image.height!==P.height)&&(P.depthTexture.image.width=P.width,P.depthTexture.image.height=P.height,P.depthTexture.needsUpdate=!0),_e(P.depthTexture,0);const Se=n.get(P.depthTexture).__webglTexture,ye=Ne(P);if(P.depthTexture.format===Yr)Ze(P)?p.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,Se,0,ye):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,Se,0);else if(P.depthTexture.format===Bs)Ze(P)?p.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,Se,0,ye):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,Se,0);else throw new Error("Unknown depthTexture format")}function ie(O){const P=n.get(O),te=O.isWebGLCubeRenderTarget===!0;if(O.depthTexture&&!P.__autoAllocateDepthBuffer){if(te)throw new Error("target.depthTexture not supported in Cube render targets");we(P.__webglFramebuffer,O)}else if(te){P.__webglDepthbuffer=[];for(let Se=0;Se<6;Se++)t.bindFramebuffer(r.FRAMEBUFFER,P.__webglFramebuffer[Se]),P.__webglDepthbuffer[Se]=r.createRenderbuffer(),H(P.__webglDepthbuffer[Se],O,!1)}else t.bindFramebuffer(r.FRAMEBUFFER,P.__webglFramebuffer),P.__webglDepthbuffer=r.createRenderbuffer(),H(P.__webglDepthbuffer,O,!1);t.bindFramebuffer(r.FRAMEBUFFER,null)}function be(O,P,te){const Se=n.get(O);P!==void 0&&$e(Se.__webglFramebuffer,O,O.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D),te!==void 0&&ie(O)}function fe(O){const P=O.texture,te=n.get(O),Se=n.get(P);O.addEventListener("dispose",he),O.isWebGLMultipleRenderTargets!==!0&&(Se.__webglTexture===void 0&&(Se.__webglTexture=r.createTexture()),Se.__version=P.version,o.memory.textures++);const ye=O.isWebGLCubeRenderTarget===!0,z=O.isWebGLMultipleRenderTargets===!0,de=E(O)||c;if(ye){te.__webglFramebuffer=[];for(let xe=0;xe<6;xe++)te.__webglFramebuffer[xe]=r.createFramebuffer()}else{if(te.__webglFramebuffer=r.createFramebuffer(),z)if(i.drawBuffers){const xe=O.texture;for(let J=0,ze=xe.length;J<ze;J++){const qe=n.get(xe[J]);qe.__webglTexture===void 0&&(qe.__webglTexture=r.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(c&&O.samples>0&&Ze(O)===!1){const xe=z?P:[P];te.__webglMultisampledFramebuffer=r.createFramebuffer(),te.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,te.__webglMultisampledFramebuffer);for(let J=0;J<xe.length;J++){const ze=xe[J];te.__webglColorRenderbuffer[J]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,te.__webglColorRenderbuffer[J]);const qe=s.convert(ze.format,ze.colorSpace),Ve=s.convert(ze.type),He=N(ze.internalFormat,qe,Ve,ze.colorSpace,O.isXRRenderTarget===!0),Fe=Ne(O);r.renderbufferStorageMultisample(r.RENDERBUFFER,Fe,He,O.width,O.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+J,r.RENDERBUFFER,te.__webglColorRenderbuffer[J])}r.bindRenderbuffer(r.RENDERBUFFER,null),O.depthBuffer&&(te.__webglDepthRenderbuffer=r.createRenderbuffer(),H(te.__webglDepthRenderbuffer,O,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(ye){t.bindTexture(r.TEXTURE_CUBE_MAP,Se.__webglTexture),Ge(r.TEXTURE_CUBE_MAP,P,de);for(let xe=0;xe<6;xe++)$e(te.__webglFramebuffer[xe],O,P,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+xe);L(P,de)&&F(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(z){const xe=O.texture;for(let J=0,ze=xe.length;J<ze;J++){const qe=xe[J],Ve=n.get(qe);t.bindTexture(r.TEXTURE_2D,Ve.__webglTexture),Ge(r.TEXTURE_2D,qe,de),$e(te.__webglFramebuffer,O,qe,r.COLOR_ATTACHMENT0+J,r.TEXTURE_2D),L(qe,de)&&F(r.TEXTURE_2D)}t.unbindTexture()}else{let xe=r.TEXTURE_2D;(O.isWebGL3DRenderTarget||O.isWebGLArrayRenderTarget)&&(c?xe=O.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(xe,Se.__webglTexture),Ge(xe,P,de),$e(te.__webglFramebuffer,O,P,r.COLOR_ATTACHMENT0,xe),L(P,de)&&F(xe),t.unbindTexture()}O.depthBuffer&&ie(O)}function De(O){const P=E(O)||c,te=O.isWebGLMultipleRenderTargets===!0?O.texture:[O.texture];for(let Se=0,ye=te.length;Se<ye;Se++){const z=te[Se];if(L(z,P)){const de=O.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D,xe=n.get(z).__webglTexture;t.bindTexture(de,xe),F(de),t.unbindTexture()}}}function Ue(O){if(c&&O.samples>0&&Ze(O)===!1){const P=O.isWebGLMultipleRenderTargets?O.texture:[O.texture],te=O.width,Se=O.height;let ye=r.COLOR_BUFFER_BIT;const z=[],de=O.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,xe=n.get(O),J=O.isWebGLMultipleRenderTargets===!0;if(J)for(let ze=0;ze<P.length;ze++)t.bindFramebuffer(r.FRAMEBUFFER,xe.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+ze,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,xe.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+ze,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,xe.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,xe.__webglFramebuffer);for(let ze=0;ze<P.length;ze++){z.push(r.COLOR_ATTACHMENT0+ze),O.depthBuffer&&z.push(de);const qe=xe.__ignoreDepthValues!==void 0?xe.__ignoreDepthValues:!1;if(qe===!1&&(O.depthBuffer&&(ye|=r.DEPTH_BUFFER_BIT),O.stencilBuffer&&(ye|=r.STENCIL_BUFFER_BIT)),J&&r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,xe.__webglColorRenderbuffer[ze]),qe===!0&&(r.invalidateFramebuffer(r.READ_FRAMEBUFFER,[de]),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[de])),J){const Ve=n.get(P[ze]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,Ve,0)}r.blitFramebuffer(0,0,te,Se,0,0,te,Se,ye,r.NEAREST),_&&r.invalidateFramebuffer(r.READ_FRAMEBUFFER,z)}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),J)for(let ze=0;ze<P.length;ze++){t.bindFramebuffer(r.FRAMEBUFFER,xe.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+ze,r.RENDERBUFFER,xe.__webglColorRenderbuffer[ze]);const qe=n.get(P[ze]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,xe.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+ze,r.TEXTURE_2D,qe,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,xe.__webglMultisampledFramebuffer)}}function Ne(O){return Math.min(m,O.samples)}function Ze(O){const P=n.get(O);return c&&O.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&P.__useRenderToTexture!==!1}function nt(O){const P=o.render.frame;v.get(O)!==P&&(v.set(O,P),O.update())}function Lt(O,P){const te=O.colorSpace,Se=O.format,ye=O.type;return O.isCompressedTexture===!0||O.format===Mu||te!==Ni&&te!==Zr&&(te===ut?c===!1?e.has("EXT_sRGB")===!0&&Se===oi?(O.format=Mu,O.minFilter=cn,O.generateMipmaps=!1):P=Zd.sRGBToLinear(P):(Se!==oi||ye!==Tr)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",te)),P}this.allocateTextureUnit=oe,this.resetTextureUnits=ne,this.setTexture2D=_e,this.setTexture2DArray=Ee,this.setTexture3D=j,this.setTextureCube=ve,this.rebindTextures=be,this.setupRenderTarget=fe,this.updateRenderTargetMipmap=De,this.updateMultisampleRenderTarget=Ue,this.setupDepthRenderbuffer=ie,this.setupFrameBufferTexture=$e,this.useMultisampledRTT=Ze}function Wv(r,e,t){const n=t.isWebGL2;function i(s,o=Zr){let c;if(s===Tr)return r.UNSIGNED_BYTE;if(s===Hd)return r.UNSIGNED_SHORT_4_4_4_4;if(s===kd)return r.UNSIGNED_SHORT_5_5_5_1;if(s===cv)return r.BYTE;if(s===lv)return r.SHORT;if(s===Pu)return r.UNSIGNED_SHORT;if(s===zd)return r.INT;if(s===Sr)return r.UNSIGNED_INT;if(s===Yi)return r.FLOAT;if(s===Va)return n?r.HALF_FLOAT:(c=e.get("OES_texture_half_float"),c!==null?c.HALF_FLOAT_OES:null);if(s===uv)return r.ALPHA;if(s===oi)return r.RGBA;if(s===hv)return r.LUMINANCE;if(s===fv)return r.LUMINANCE_ALPHA;if(s===Yr)return r.DEPTH_COMPONENT;if(s===Bs)return r.DEPTH_STENCIL;if(s===Mu)return c=e.get("EXT_sRGB"),c!==null?c.SRGB_ALPHA_EXT:null;if(s===dv)return r.RED;if(s===Gd)return r.RED_INTEGER;if(s===pv)return r.RG;if(s===Vd)return r.RG_INTEGER;if(s===Wd)return r.RGBA_INTEGER;if(s===au||s===ou||s===cu||s===lu)if(o===ut)if(c=e.get("WEBGL_compressed_texture_s3tc_srgb"),c!==null){if(s===au)return c.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===ou)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===cu)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===lu)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(c=e.get("WEBGL_compressed_texture_s3tc"),c!==null){if(s===au)return c.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===ou)return c.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===cu)return c.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===lu)return c.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===Jf||s===Qf||s===jf||s===ed)if(c=e.get("WEBGL_compressed_texture_pvrtc"),c!==null){if(s===Jf)return c.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===Qf)return c.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===jf)return c.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===ed)return c.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===mv)return c=e.get("WEBGL_compressed_texture_etc1"),c!==null?c.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===td||s===nd)if(c=e.get("WEBGL_compressed_texture_etc"),c!==null){if(s===td)return o===ut?c.COMPRESSED_SRGB8_ETC2:c.COMPRESSED_RGB8_ETC2;if(s===nd)return o===ut?c.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:c.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===id||s===rd||s===sd||s===ad||s===od||s===cd||s===ld||s===ud||s===hd||s===fd||s===dd||s===pd||s===md||s===gd)if(c=e.get("WEBGL_compressed_texture_astc"),c!==null){if(s===id)return o===ut?c.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:c.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===rd)return o===ut?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:c.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===sd)return o===ut?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:c.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===ad)return o===ut?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:c.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===od)return o===ut?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:c.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===cd)return o===ut?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:c.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===ld)return o===ut?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:c.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===ud)return o===ut?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:c.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===hd)return o===ut?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:c.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===fd)return o===ut?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:c.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===dd)return o===ut?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:c.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===pd)return o===ut?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:c.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===md)return o===ut?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:c.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===gd)return o===ut?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:c.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===uu)if(c=e.get("EXT_texture_compression_bptc"),c!==null){if(s===uu)return o===ut?c.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:c.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(s===gv||s===_d||s===vd||s===yd)if(c=e.get("EXT_texture_compression_rgtc"),c!==null){if(s===uu)return c.COMPRESSED_RED_RGTC1_EXT;if(s===_d)return c.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(s===vd)return c.COMPRESSED_RED_GREEN_RGTC2_EXT;if(s===yd)return c.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return s===qr?n?r.UNSIGNED_INT_24_8:(c=e.get("WEBGL_depth_texture"),c!==null?c.UNSIGNED_INT_24_8_WEBGL:null):r[s]!==void 0?r[s]:null}return{convert:i}}class Xv extends xn{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class za extends Ct{constructor(){super(),this.isGroup=!0,this.type="Group"}}const ZL={type:"move"};class Rf{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new za,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new za,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new I,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new I),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new za,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new I,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new I),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,o=null;const c=this._targetRay,u=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){o=!0;for(const M of e.hand.values()){const y=t.getJointPose(M,n),g=this._getHandJoint(h,M);y!==null&&(g.matrix.fromArray(y.transform.matrix),g.matrix.decompose(g.position,g.rotation,g.scale),g.matrixWorldNeedsUpdate=!0,g.jointRadius=y.radius),g.visible=y!==null}const d=h.joints["index-finger-tip"],m=h.joints["thumb-tip"],p=d.position.distanceTo(m.position),_=.02,v=.005;h.inputState.pinching&&p>_+v?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&p<=_-v&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(u.matrix.fromArray(s.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),u.matrixWorldNeedsUpdate=!0,s.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(s.linearVelocity)):u.hasLinearVelocity=!1,s.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(s.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&s!==null&&(i=s),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),c.matrixWorldNeedsUpdate=!0,i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(ZL)))}return c!==null&&(c.visible=i!==null),u!==null&&(u.visible=s!==null),h!==null&&(h.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const n=new za;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class qv extends ln{constructor(e,t,n,i,s,o,c,u,h,d){if(d=d!==void 0?d:Yr,d!==Yr&&d!==Bs)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&d===Yr&&(n=Sr),n===void 0&&d===Bs&&(n=qr),super(null,i,s,o,c,u,d,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:on,this.minFilter=u!==void 0?u:on,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class $L extends ji{constructor(e,t){super();const n=this;let i=null,s=1,o=null,c="local-floor",u=1,h=null,d=null,m=null,p=null,_=null,v=null;const M=t.getContextAttributes();let y=null,g=null;const S=[],b=[];let E=null;const A=new xn;A.layers.enable(1),A.viewport=new Dt;const L=new xn;L.layers.enable(2),L.viewport=new Dt;const F=[A,L],N=new Xv;N.layers.enable(1),N.layers.enable(2);let T=null,U=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getCamera=function(){},this.setUserCamera=function(j){E=j},this.getController=function(j){let ve=S[j];return ve===void 0&&(ve=new Rf,S[j]=ve),ve.getTargetRaySpace()},this.getControllerGrip=function(j){let ve=S[j];return ve===void 0&&(ve=new Rf,S[j]=ve),ve.getGripSpace()},this.getHand=function(j){let ve=S[j];return ve===void 0&&(ve=new Rf,S[j]=ve),ve.getHandSpace()};function $(j){const ve=b.indexOf(j.inputSource);if(ve===-1)return;const Me=S[ve];Me!==void 0&&(Me.update(j.inputSource,j.frame,h||o),Me.dispatchEvent({type:j.type,data:j.inputSource}))}function he(){i.removeEventListener("select",$),i.removeEventListener("selectstart",$),i.removeEventListener("selectend",$),i.removeEventListener("squeeze",$),i.removeEventListener("squeezestart",$),i.removeEventListener("squeezeend",$),i.removeEventListener("end",he),i.removeEventListener("inputsourceschange",Y);for(let j=0;j<S.length;j++){const ve=b[j];ve!==null&&(b[j]=null,S[j].disconnect(ve))}T=null,U=null,e.setRenderTarget(y),_=null,p=null,m=null,i=null,g=null,Ee.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(j){s=j,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(j){c=j,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return h||o},this.setReferenceSpace=function(j){h=j},this.getBaseLayer=function(){return p!==null?p:_},this.getBinding=function(){return m},this.getFrame=function(){return v},this.getSession=function(){return i},this.setSession=async function(j){if(i=j,i!==null){if(y=e.getRenderTarget(),i.addEventListener("select",$),i.addEventListener("selectstart",$),i.addEventListener("selectend",$),i.addEventListener("squeeze",$),i.addEventListener("squeezestart",$),i.addEventListener("squeezeend",$),i.addEventListener("end",he),i.addEventListener("inputsourceschange",Y),M.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const ve={antialias:i.renderState.layers===void 0?M.antialias:!0,alpha:!0,depth:M.depth,stencil:M.stencil,framebufferScaleFactor:s};_=new XRWebGLLayer(i,t,ve),i.updateRenderState({baseLayer:_}),g=new Oi(_.framebufferWidth,_.framebufferHeight,{format:oi,type:Tr,colorSpace:e.outputColorSpace,stencilBuffer:M.stencil})}else{let ve=null,Me=null,Re=null;M.depth&&(Re=M.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,ve=M.stencil?Bs:Yr,Me=M.stencil?qr:Sr);const Ie={colorFormat:t.RGBA8,depthFormat:Re,scaleFactor:s};m=new XRWebGLBinding(i,t),p=m.createProjectionLayer(Ie),i.updateRenderState({layers:[p]}),g=new Oi(p.textureWidth,p.textureHeight,{format:oi,type:Tr,depthTexture:new qv(p.textureWidth,p.textureHeight,Me,void 0,void 0,void 0,void 0,void 0,void 0,ve),stencilBuffer:M.stencil,colorSpace:e.outputColorSpace,samples:M.antialias?4:0});const Ge=e.properties.get(g);Ge.__ignoreDepthValues=p.ignoreDepthValues}g.isXRRenderTarget=!0,this.setFoveation(u),h=null,o=await i.requestReferenceSpace(c),Ee.setContext(i),Ee.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(i!==null)return i.environmentBlendMode};function Y(j){for(let ve=0;ve<j.removed.length;ve++){const Me=j.removed[ve],Re=b.indexOf(Me);Re>=0&&(b[Re]=null,S[Re].disconnect(Me))}for(let ve=0;ve<j.added.length;ve++){const Me=j.added[ve];let Re=b.indexOf(Me);if(Re===-1){for(let Ge=0;Ge<S.length;Ge++)if(Ge>=b.length){b.push(Me),Re=Ge;break}else if(b[Ge]===null){b[Ge]=Me,Re=Ge;break}if(Re===-1)break}const Ie=S[Re];Ie&&Ie.connect(Me)}}const Z=new I,X=new I;function pe(j,ve,Me){Z.setFromMatrixPosition(ve.matrixWorld),X.setFromMatrixPosition(Me.matrixWorld);const Re=Z.distanceTo(X),Ie=ve.projectionMatrix.elements,Ge=Me.projectionMatrix.elements,je=Ie[14]/(Ie[10]-1),Ye=Ie[14]/(Ie[10]+1),At=(Ie[9]+1)/Ie[5],$e=(Ie[9]-1)/Ie[5],H=(Ie[8]-1)/Ie[0],we=(Ge[8]+1)/Ge[0],ie=je*H,be=je*we,fe=Re/(-H+we),De=fe*-H;ve.matrixWorld.decompose(j.position,j.quaternion,j.scale),j.translateX(De),j.translateZ(fe),j.matrixWorld.compose(j.position,j.quaternion,j.scale),j.matrixWorldInverse.copy(j.matrixWorld).invert();const Ue=je+fe,Ne=Ye+fe,Ze=ie-De,nt=be+(Re-De),Lt=At*Ye/Ne*Ue,O=$e*Ye/Ne*Ue;j.projectionMatrix.makePerspective(Ze,nt,Lt,O,Ue,Ne),j.projectionMatrixInverse.copy(j.projectionMatrix).invert()}function ne(j,ve){ve===null?j.matrixWorld.copy(j.matrix):j.matrixWorld.multiplyMatrices(ve.matrixWorld,j.matrix),j.matrixWorldInverse.copy(j.matrixWorld).invert()}this.updateCameraXR=function(j){if(i===null)return j;E&&(j=E),N.near=L.near=A.near=j.near,N.far=L.far=A.far=j.far,(T!==N.near||U!==N.far)&&(i.updateRenderState({depthNear:N.near,depthFar:N.far}),T=N.near,U=N.far);const ve=j.parent,Me=N.cameras;ne(N,ve);for(let Re=0;Re<Me.length;Re++)ne(Me[Re],ve);return Me.length===2?pe(N,A,L):N.projectionMatrix.copy(A.projectionMatrix),E&&oe(N,ve),N};function oe(j,ve){const Me=E;ve===null?Me.matrix.copy(j.matrixWorld):(Me.matrix.copy(ve.matrixWorld),Me.matrix.invert(),Me.matrix.multiply(j.matrixWorld)),Me.matrix.decompose(Me.position,Me.quaternion,Me.scale),Me.updateMatrixWorld(!0);const Re=Me.children;for(let Ie=0,Ge=Re.length;Ie<Ge;Ie++)Re[Ie].updateMatrixWorld(!0);Me.projectionMatrix.copy(j.projectionMatrix),Me.projectionMatrixInverse.copy(j.projectionMatrixInverse),Me.isPerspectiveCamera&&(Me.fov=Wa*2*Math.atan(1/Me.projectionMatrix.elements[5]),Me.zoom=1)}this.getFoveation=function(){if(!(p===null&&_===null))return u},this.setFoveation=function(j){u=j,p!==null&&(p.fixedFoveation=j),_!==null&&_.fixedFoveation!==void 0&&(_.fixedFoveation=j)};let me=null;function _e(j,ve){if(d=ve.getViewerPose(h||o),v=ve,d!==null){const Me=d.views;_!==null&&(e.setRenderTargetFramebuffer(g,_.framebuffer),e.setRenderTarget(g));let Re=!1;Me.length!==N.cameras.length&&(N.cameras.length=0,Re=!0);for(let Ie=0;Ie<Me.length;Ie++){const Ge=Me[Ie];let je=null;if(_!==null)je=_.getViewport(Ge);else{const At=m.getViewSubImage(p,Ge);je=At.viewport,Ie===0&&(e.setRenderTargetTextures(g,At.colorTexture,p.ignoreDepthValues?void 0:At.depthStencilTexture),e.setRenderTarget(g))}let Ye=F[Ie];Ye===void 0&&(Ye=new xn,Ye.layers.enable(Ie),Ye.viewport=new Dt,F[Ie]=Ye),Ye.matrix.fromArray(Ge.transform.matrix),Ye.matrix.decompose(Ye.position,Ye.quaternion,Ye.scale),Ye.projectionMatrix.fromArray(Ge.projectionMatrix),Ye.projectionMatrixInverse.copy(Ye.projectionMatrix).invert(),Ye.viewport.set(je.x,je.y,je.width,je.height),Ie===0&&(N.matrix.copy(Ye.matrix),N.matrix.decompose(N.position,N.quaternion,N.scale)),Re===!0&&N.cameras.push(Ye)}}for(let Me=0;Me<S.length;Me++){const Re=b[Me],Ie=S[Me];Re!==null&&Ie!==void 0&&Ie.update(Re,ve,h||o)}me&&me(j,ve),ve.detectedPlanes&&n.dispatchEvent({type:"planesdetected",data:ve}),v=null}const Ee=new zv;Ee.setAnimationLoop(_e),this.setAnimationLoop=function(j){me=j},this.dispose=function(){}}}function KL(r,e){function t(y,g){y.matrixAutoUpdate===!0&&y.updateMatrix(),g.value.copy(y.matrix)}function n(y,g){g.color.getRGB(y.fogColor.value,Nv(r)),g.isFog?(y.fogNear.value=g.near,y.fogFar.value=g.far):g.isFogExp2&&(y.fogDensity.value=g.density)}function i(y,g,S,b,E){g.isMeshBasicMaterial||g.isMeshLambertMaterial?s(y,g):g.isMeshToonMaterial?(s(y,g),m(y,g)):g.isMeshPhongMaterial?(s(y,g),d(y,g)):g.isMeshStandardMaterial?(s(y,g),p(y,g),g.isMeshPhysicalMaterial&&_(y,g,E)):g.isMeshMatcapMaterial?(s(y,g),v(y,g)):g.isMeshDepthMaterial?s(y,g):g.isMeshDistanceMaterial?(s(y,g),M(y,g)):g.isMeshNormalMaterial?s(y,g):g.isLineBasicMaterial?(o(y,g),g.isLineDashedMaterial&&c(y,g)):g.isPointsMaterial?u(y,g,S,b):g.isSpriteMaterial?h(y,g):g.isShadowMaterial?(y.color.value.copy(g.color),y.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function s(y,g){y.opacity.value=g.opacity,g.color&&y.diffuse.value.copy(g.color),g.emissive&&y.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(y.map.value=g.map,t(g.map,y.mapTransform)),g.alphaMap&&(y.alphaMap.value=g.alphaMap,t(g.alphaMap,y.alphaMapTransform)),g.bumpMap&&(y.bumpMap.value=g.bumpMap,t(g.bumpMap,y.bumpMapTransform),y.bumpScale.value=g.bumpScale,g.side===In&&(y.bumpScale.value*=-1)),g.normalMap&&(y.normalMap.value=g.normalMap,t(g.normalMap,y.normalMapTransform),y.normalScale.value.copy(g.normalScale),g.side===In&&y.normalScale.value.negate()),g.displacementMap&&(y.displacementMap.value=g.displacementMap,t(g.displacementMap,y.displacementMapTransform),y.displacementScale.value=g.displacementScale,y.displacementBias.value=g.displacementBias),g.emissiveMap&&(y.emissiveMap.value=g.emissiveMap,t(g.emissiveMap,y.emissiveMapTransform)),g.specularMap&&(y.specularMap.value=g.specularMap,t(g.specularMap,y.specularMapTransform)),g.alphaTest>0&&(y.alphaTest.value=g.alphaTest);const S=e.get(g).envMap;if(S&&(y.envMap.value=S,y.flipEnvMap.value=S.isCubeTexture&&S.isRenderTargetTexture===!1?-1:1,y.reflectivity.value=g.reflectivity,y.ior.value=g.ior,y.refractionRatio.value=g.refractionRatio),g.lightMap){y.lightMap.value=g.lightMap;const b=r.useLegacyLights===!0?Math.PI:1;y.lightMapIntensity.value=g.lightMapIntensity*b,t(g.lightMap,y.lightMapTransform)}g.aoMap&&(y.aoMap.value=g.aoMap,y.aoMapIntensity.value=g.aoMapIntensity,t(g.aoMap,y.aoMapTransform))}function o(y,g){y.diffuse.value.copy(g.color),y.opacity.value=g.opacity,g.map&&(y.map.value=g.map,t(g.map,y.mapTransform))}function c(y,g){y.dashSize.value=g.dashSize,y.totalSize.value=g.dashSize+g.gapSize,y.scale.value=g.scale}function u(y,g,S,b){y.diffuse.value.copy(g.color),y.opacity.value=g.opacity,y.size.value=g.size*S,y.scale.value=b*.5,g.map&&(y.map.value=g.map,t(g.map,y.uvTransform)),g.alphaMap&&(y.alphaMap.value=g.alphaMap,t(g.alphaMap,y.alphaMapTransform)),g.alphaTest>0&&(y.alphaTest.value=g.alphaTest)}function h(y,g){y.diffuse.value.copy(g.color),y.opacity.value=g.opacity,y.rotation.value=g.rotation,g.map&&(y.map.value=g.map,t(g.map,y.mapTransform)),g.alphaMap&&(y.alphaMap.value=g.alphaMap,t(g.alphaMap,y.alphaMapTransform)),g.alphaTest>0&&(y.alphaTest.value=g.alphaTest)}function d(y,g){y.specular.value.copy(g.specular),y.shininess.value=Math.max(g.shininess,1e-4)}function m(y,g){g.gradientMap&&(y.gradientMap.value=g.gradientMap)}function p(y,g){y.metalness.value=g.metalness,g.metalnessMap&&(y.metalnessMap.value=g.metalnessMap,t(g.metalnessMap,y.metalnessMapTransform)),y.roughness.value=g.roughness,g.roughnessMap&&(y.roughnessMap.value=g.roughnessMap,t(g.roughnessMap,y.roughnessMapTransform)),e.get(g).envMap&&(y.envMapIntensity.value=g.envMapIntensity)}function _(y,g,S){y.ior.value=g.ior,g.sheen>0&&(y.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),y.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(y.sheenColorMap.value=g.sheenColorMap,t(g.sheenColorMap,y.sheenColorMapTransform)),g.sheenRoughnessMap&&(y.sheenRoughnessMap.value=g.sheenRoughnessMap,t(g.sheenRoughnessMap,y.sheenRoughnessMapTransform))),g.clearcoat>0&&(y.clearcoat.value=g.clearcoat,y.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(y.clearcoatMap.value=g.clearcoatMap,t(g.clearcoatMap,y.clearcoatMapTransform)),g.clearcoatRoughnessMap&&(y.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap,t(g.clearcoatRoughnessMap,y.clearcoatRoughnessMapTransform)),g.clearcoatNormalMap&&(y.clearcoatNormalMap.value=g.clearcoatNormalMap,t(g.clearcoatNormalMap,y.clearcoatNormalMapTransform),y.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),g.side===In&&y.clearcoatNormalScale.value.negate())),g.iridescence>0&&(y.iridescence.value=g.iridescence,y.iridescenceIOR.value=g.iridescenceIOR,y.iridescenceThicknessMinimum.value=g.iridescenceThicknessRange[0],y.iridescenceThicknessMaximum.value=g.iridescenceThicknessRange[1],g.iridescenceMap&&(y.iridescenceMap.value=g.iridescenceMap,t(g.iridescenceMap,y.iridescenceMapTransform)),g.iridescenceThicknessMap&&(y.iridescenceThicknessMap.value=g.iridescenceThicknessMap,t(g.iridescenceThicknessMap,y.iridescenceThicknessMapTransform))),g.transmission>0&&(y.transmission.value=g.transmission,y.transmissionSamplerMap.value=S.texture,y.transmissionSamplerSize.value.set(S.width,S.height),g.transmissionMap&&(y.transmissionMap.value=g.transmissionMap,t(g.transmissionMap,y.transmissionMapTransform)),y.thickness.value=g.thickness,g.thicknessMap&&(y.thicknessMap.value=g.thicknessMap,t(g.thicknessMap,y.thicknessMapTransform)),y.attenuationDistance.value=g.attenuationDistance,y.attenuationColor.value.copy(g.attenuationColor)),g.anisotropy>0&&(y.anisotropyVector.value.set(g.anisotropy*Math.cos(g.anisotropyRotation),g.anisotropy*Math.sin(g.anisotropyRotation)),g.anisotropyMap&&(y.anisotropyMap.value=g.anisotropyMap,t(g.anisotropyMap,y.anisotropyMapTransform))),y.specularIntensity.value=g.specularIntensity,y.specularColor.value.copy(g.specularColor),g.specularColorMap&&(y.specularColorMap.value=g.specularColorMap,t(g.specularColorMap,y.specularColorMapTransform)),g.specularIntensityMap&&(y.specularIntensityMap.value=g.specularIntensityMap,t(g.specularIntensityMap,y.specularIntensityMapTransform))}function v(y,g){g.matcap&&(y.matcap.value=g.matcap)}function M(y,g){const S=e.get(g).light;y.referencePosition.value.setFromMatrixPosition(S.matrixWorld),y.nearDistance.value=S.shadow.camera.near,y.farDistance.value=S.shadow.camera.far}return{refreshFogUniforms:n,refreshMaterialUniforms:i}}function JL(r,e,t,n){let i={},s={},o=[];const c=t.isWebGL2?r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS):0;function u(S,b){const E=b.program;n.uniformBlockBinding(S,E)}function h(S,b){let E=i[S.id];E===void 0&&(v(S),E=d(S),i[S.id]=E,S.addEventListener("dispose",y));const A=b.program;n.updateUBOMapping(S,A);const L=e.render.frame;s[S.id]!==L&&(p(S),s[S.id]=L)}function d(S){const b=m();S.__bindingPointIndex=b;const E=r.createBuffer(),A=S.__size,L=S.usage;return r.bindBuffer(r.UNIFORM_BUFFER,E),r.bufferData(r.UNIFORM_BUFFER,A,L),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,b,E),E}function m(){for(let S=0;S<c;S++)if(o.indexOf(S)===-1)return o.push(S),S;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function p(S){const b=i[S.id],E=S.uniforms,A=S.__cache;r.bindBuffer(r.UNIFORM_BUFFER,b);for(let L=0,F=E.length;L<F;L++){const N=E[L];if(_(N,L,A)===!0){const T=N.__offset,U=Array.isArray(N.value)?N.value:[N.value];let $=0;for(let he=0;he<U.length;he++){const Y=U[he],Z=M(Y);typeof Y=="number"?(N.__data[0]=Y,r.bufferSubData(r.UNIFORM_BUFFER,T+$,N.__data)):Y.isMatrix3?(N.__data[0]=Y.elements[0],N.__data[1]=Y.elements[1],N.__data[2]=Y.elements[2],N.__data[3]=Y.elements[0],N.__data[4]=Y.elements[3],N.__data[5]=Y.elements[4],N.__data[6]=Y.elements[5],N.__data[7]=Y.elements[0],N.__data[8]=Y.elements[6],N.__data[9]=Y.elements[7],N.__data[10]=Y.elements[8],N.__data[11]=Y.elements[0]):(Y.toArray(N.__data,$),$+=Z.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,T,N.__data)}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function _(S,b,E){const A=S.value;if(E[b]===void 0){if(typeof A=="number")E[b]=A;else{const L=Array.isArray(A)?A:[A],F=[];for(let N=0;N<L.length;N++)F.push(L[N].clone());E[b]=F}return!0}else if(typeof A=="number"){if(E[b]!==A)return E[b]=A,!0}else{const L=Array.isArray(E[b])?E[b]:[E[b]],F=Array.isArray(A)?A:[A];for(let N=0;N<L.length;N++){const T=L[N];if(T.equals(F[N])===!1)return T.copy(F[N]),!0}}return!1}function v(S){const b=S.uniforms;let E=0;const A=16;let L=0;for(let F=0,N=b.length;F<N;F++){const T=b[F],U={boundary:0,storage:0},$=Array.isArray(T.value)?T.value:[T.value];for(let he=0,Y=$.length;he<Y;he++){const Z=$[he],X=M(Z);U.boundary+=X.boundary,U.storage+=X.storage}if(T.__data=new Float32Array(U.storage/Float32Array.BYTES_PER_ELEMENT),T.__offset=E,F>0){L=E%A;const he=A-L;L!==0&&he-U.boundary<0&&(E+=A-L,T.__offset=E)}E+=U.storage}return L=E%A,L>0&&(E+=A-L),S.__size=E,S.__cache={},this}function M(S){const b={boundary:0,storage:0};return typeof S=="number"?(b.boundary=4,b.storage=4):S.isVector2?(b.boundary=8,b.storage=8):S.isVector3||S.isColor?(b.boundary=16,b.storage=12):S.isVector4?(b.boundary=16,b.storage=16):S.isMatrix3?(b.boundary=48,b.storage=48):S.isMatrix4?(b.boundary=64,b.storage=64):S.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",S),b}function y(S){const b=S.target;b.removeEventListener("dispose",y);const E=o.indexOf(b.__bindingPointIndex);o.splice(E,1),r.deleteBuffer(i[b.id]),delete i[b.id],delete s[b.id]}function g(){for(const S in i)r.deleteBuffer(i[S]);o=[],i={},s={}}return{bind:u,update:h,dispose:g}}function QL(){const r=nc("canvas");return r.style.display="block",r}class tp{constructor(e={}){const{canvas:t=QL(),context:n=null,depth:i=!0,stencil:s=!0,alpha:o=!1,antialias:c=!1,premultipliedAlpha:u=!0,preserveDrawingBuffer:h=!1,powerPreference:d="default",failIfMajorPerformanceCaveat:m=!1}=e;this.isWebGLRenderer=!0;let p;n!==null?p=n.getContextAttributes().alpha:p=o;const _=new Uint32Array(4),v=new Int32Array(4);let M=null,y=null;const g=[],S=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputColorSpace=ut,this.useLegacyLights=!0,this.toneMapping=$i,this.toneMappingExposure=1;const b=this;let E=!1,A=0,L=0,F=null,N=-1,T=null;const U=new Dt,$=new Dt;let he=null;const Y=new Oe(0);let Z=0,X=t.width,pe=t.height,ne=1,oe=null,me=null;const _e=new Dt(0,0,X,pe),Ee=new Dt(0,0,X,pe);let j=!1;const ve=new Du;let Me=!1,Re=!1,Ie=null;const Ge=new at,je=new ce,Ye=new I,At={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function $e(){return F===null?ne:1}let H=n;function we(D,K){for(let re=0;re<D.length;re++){const q=D[re],ae=t.getContext(q,K);if(ae!==null)return ae}return null}try{const D={alpha:!0,depth:i,stencil:s,antialias:c,premultipliedAlpha:u,preserveDrawingBuffer:h,powerPreference:d,failIfMajorPerformanceCaveat:m};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${Au}`),t.addEventListener("webglcontextlost",Ce,!1),t.addEventListener("webglcontextrestored",ee,!1),t.addEventListener("webglcontextcreationerror",Te,!1),H===null){const K=["webgl2","webgl","experimental-webgl"];if(b.isWebGL1Renderer===!0&&K.shift(),H=we(K,D),H===null)throw we(K)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}H instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),H.getShaderPrecisionFormat===void 0&&(H.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(D){throw console.error("THREE.WebGLRenderer: "+D.message),D}let ie,be,fe,De,Ue,Ne,Ze,nt,Lt,O,P,te,Se,ye,z,de,xe,J,ze,qe,Ve,He,Fe,Je;function xt(){ie=new pP(H),be=new cP(H,ie,e),ie.init(be),He=new Wv(H,ie,be),fe=new qL(H,ie,be),De=new _P(H),Ue=new DL,Ne=new YL(H,ie,fe,Ue,be,He,De),Ze=new uP(b),nt=new dP(b),Lt=new CA(H,be),Fe=new aP(H,ie,Lt,be),O=new mP(H,Lt,De,Fe),P=new MP(H,O,Lt,De),ze=new xP(H,be,Ne),de=new lP(Ue),te=new UL(b,Ze,nt,ie,be,Fe,de),Se=new KL(b,Ue),ye=new OL,z=new GL(ie,be),J=new sP(b,Ze,nt,fe,P,p,u),xe=new XL(b,P,be),Je=new JL(H,De,be,fe),qe=new oP(H,ie,De,be),Ve=new gP(H,ie,De,be),De.programs=te.programs,b.capabilities=be,b.extensions=ie,b.properties=Ue,b.renderLists=ye,b.shadowMap=xe,b.state=fe,b.info=De}xt();const G=new $L(b,H);this.xr=G,this.getContext=function(){return H},this.getContextAttributes=function(){return H.getContextAttributes()},this.forceContextLoss=function(){const D=ie.get("WEBGL_lose_context");D&&D.loseContext()},this.forceContextRestore=function(){const D=ie.get("WEBGL_lose_context");D&&D.restoreContext()},this.getPixelRatio=function(){return ne},this.setPixelRatio=function(D){D!==void 0&&(ne=D,this.setSize(X,pe,!1))},this.getSize=function(D){return D.set(X,pe)},this.setSize=function(D,K,re=!0){if(G.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}X=D,pe=K,t.width=Math.floor(D*ne),t.height=Math.floor(K*ne),re===!0&&(t.style.width=D+"px",t.style.height=K+"px"),this.setViewport(0,0,D,K)},this.getDrawingBufferSize=function(D){return D.set(X*ne,pe*ne).floor()},this.setDrawingBufferSize=function(D,K,re){X=D,pe=K,ne=re,t.width=Math.floor(D*re),t.height=Math.floor(K*re),this.setViewport(0,0,D,K)},this.getCurrentViewport=function(D){return D.copy(U)},this.getViewport=function(D){return D.copy(_e)},this.setViewport=function(D,K,re,q){D.isVector4?_e.set(D.x,D.y,D.z,D.w):_e.set(D,K,re,q),fe.viewport(U.copy(_e).multiplyScalar(ne).floor())},this.getScissor=function(D){return D.copy(Ee)},this.setScissor=function(D,K,re,q){D.isVector4?Ee.set(D.x,D.y,D.z,D.w):Ee.set(D,K,re,q),fe.scissor($.copy(Ee).multiplyScalar(ne).floor())},this.getScissorTest=function(){return j},this.setScissorTest=function(D){fe.setScissorTest(j=D)},this.setOpaqueSort=function(D){oe=D},this.setTransparentSort=function(D){me=D},this.getClearColor=function(D){return D.copy(J.getClearColor())},this.setClearColor=function(){J.setClearColor.apply(J,arguments)},this.getClearAlpha=function(){return J.getClearAlpha()},this.setClearAlpha=function(){J.setClearAlpha.apply(J,arguments)},this.clear=function(D=!0,K=!0,re=!0){let q=0;if(D){let ae=!1;if(F!==null){const ke=F.texture.format;ae=ke===Wd||ke===Vd||ke===Gd}if(ae){const ke=F.texture.type,Ke=ke===Tr||ke===Sr||ke===Pu||ke===qr||ke===Hd||ke===kd,rt=J.getClearColor(),it=J.getClearAlpha(),vt=rt.r,st=rt.g,lt=rt.b,Ot=Ue.get(F).__webglFramebuffer;Ke?(_[0]=vt,_[1]=st,_[2]=lt,_[3]=it,H.clearBufferuiv(H.COLOR,Ot,_)):(v[0]=vt,v[1]=st,v[2]=lt,v[3]=it,H.clearBufferiv(H.COLOR,Ot,v))}else q|=H.COLOR_BUFFER_BIT}K&&(q|=H.DEPTH_BUFFER_BIT),re&&(q|=H.STENCIL_BUFFER_BIT),H.clear(q)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ce,!1),t.removeEventListener("webglcontextrestored",ee,!1),t.removeEventListener("webglcontextcreationerror",Te,!1),ye.dispose(),z.dispose(),Ue.dispose(),Ze.dispose(),nt.dispose(),P.dispose(),Fe.dispose(),Je.dispose(),te.dispose(),G.dispose(),G.removeEventListener("sessionstart",Gt),G.removeEventListener("sessionend",hi),Ie&&(Ie.dispose(),Ie=null),Sn.stop()};function Ce(D){D.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),E=!0}function ee(){console.log("THREE.WebGLRenderer: Context Restored."),E=!1;const D=De.autoReset,K=xe.enabled,re=xe.autoUpdate,q=xe.needsUpdate,ae=xe.type;xt(),De.autoReset=D,xe.enabled=K,xe.autoUpdate=re,xe.needsUpdate=q,xe.type=ae}function Te(D){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",D.statusMessage)}function Le(D){const K=D.target;K.removeEventListener("dispose",Le),Tt(K)}function Tt(D){kt(D),Ue.remove(D)}function kt(D){const K=Ue.get(D).programs;K!==void 0&&(K.forEach(function(re){te.releaseProgram(re)}),D.isShaderMaterial&&te.releaseShaderCache(D))}this.renderBufferDirect=function(D,K,re,q,ae,ke){K===null&&(K=At);const Ke=ae.isMesh&&ae.matrixWorld.determinant()<0,rt=Yu(D,K,re,q,ae);fe.setMaterial(q,Ke);let it=re.index,vt=1;q.wireframe===!0&&(it=O.getWireframeAttribute(re),vt=2);const st=re.drawRange,lt=re.attributes.position;let Ot=st.start*vt,Wt=(st.start+st.count)*vt;ke!==null&&(Ot=Math.max(Ot,ke.start*vt),Wt=Math.min(Wt,(ke.start+ke.count)*vt)),it!==null?(Ot=Math.max(Ot,0),Wt=Math.min(Wt,it.count)):lt!=null&&(Ot=Math.max(Ot,0),Wt=Math.min(Wt,lt.count));const Vn=Wt-Ot;if(Vn<0||Vn===1/0)return;Fe.setup(ae,q,rt,re,it);let fi,Xt=qe;if(it!==null&&(fi=Lt.get(it),Xt=Ve,Xt.setIndex(fi)),ae.isMesh)q.wireframe===!0?(fe.setLineWidth(q.wireframeLinewidth*$e()),Xt.setMode(H.LINES)):Xt.setMode(H.TRIANGLES);else if(ae.isLine){let St=q.linewidth;St===void 0&&(St=1),fe.setLineWidth(St*$e()),ae.isLineSegments?Xt.setMode(H.LINES):ae.isLineLoop?Xt.setMode(H.LINE_LOOP):Xt.setMode(H.LINE_STRIP)}else ae.isPoints?Xt.setMode(H.POINTS):ae.isSprite&&Xt.setMode(H.TRIANGLES);if(ae.isInstancedMesh)Xt.renderInstances(Ot,Vn,ae.count);else if(re.isInstancedBufferGeometry){const St=re._maxInstanceCount!==void 0?re._maxInstanceCount:1/0,io=Math.min(re.instanceCount,St);Xt.renderInstances(Ot,Vn,io)}else Xt.render(Ot,Vn)},this.compile=function(D,K){function re(q,ae,ke){q.transparent===!0&&q.side===qi&&q.forceSinglePass===!1?(q.side=In,q.needsUpdate=!0,Js(q,ae,ke),q.side=Ji,q.needsUpdate=!0,Js(q,ae,ke),q.side=qi):Js(q,ae,ke)}y=z.get(D),y.init(),S.push(y),D.traverseVisible(function(q){q.isLight&&q.layers.test(K.layers)&&(y.pushLight(q),q.castShadow&&y.pushShadow(q))}),y.setupLights(b.useLegacyLights),D.traverse(function(q){const ae=q.material;if(ae)if(Array.isArray(ae))for(let ke=0;ke<ae.length;ke++){const Ke=ae[ke];re(Ke,D,q)}else re(ae,D,q)}),S.pop(),y=null};let $t=null;function Hi(D){$t&&$t(D)}function Gt(){Sn.stop()}function hi(){Sn.start()}const Sn=new zv;Sn.setAnimationLoop(Hi),typeof self<"u"&&Sn.setContext(self),this.setAnimationLoop=function(D){$t=D,G.setAnimationLoop(D),D===null?Sn.stop():Sn.start()},G.addEventListener("sessionstart",Gt),G.addEventListener("sessionend",hi),this.render=function(D,K){if(K!==void 0&&K.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(E===!0)return;D.matrixWorldAutoUpdate===!0&&D.updateMatrixWorld(),K.parent===null&&K.matrixWorldAutoUpdate===!0&&K.updateMatrixWorld(),G.enabled===!0&&G.isPresenting===!0&&(K=G.updateCameraXR(K)),D.isScene===!0&&D.onBeforeRender(b,D,K,F),y=z.get(D,S.length),y.init(),S.push(y),Ge.multiplyMatrices(K.projectionMatrix,K.matrixWorldInverse),ve.setFromProjectionMatrix(Ge),Re=this.localClippingEnabled,Me=de.init(this.clippingPlanes,Re),M=ye.get(D,g.length),M.init(),g.push(M),$s(D,K,0,b.sortObjects),M.finish(),b.sortObjects===!0&&M.sort(oe,me),Me===!0&&de.beginShadows();const re=y.state.shadowsArray;if(xe.render(re,D,K),Me===!0&&de.endShadows(),this.info.autoReset===!0&&this.info.reset(),this.info.render.frame++,J.render(M,D),y.setupLights(b.useLegacyLights),K.isArrayCamera){const q=K.cameras;for(let ae=0,ke=q.length;ae<ke;ae++){const Ke=q[ae];Rc(M,D,Ke,Ke.viewport)}}else Rc(M,D,K);F!==null&&(Ne.updateMultisampleRenderTarget(F),Ne.updateRenderTargetMipmap(F)),D.isScene===!0&&D.onAfterRender(b,D,K),Fe.resetDefaultState(),N=-1,T=null,S.pop(),S.length>0?y=S[S.length-1]:y=null,g.pop(),g.length>0?M=g[g.length-1]:M=null};function $s(D,K,re,q){if(D.visible===!1)return;if(D.layers.test(K.layers)){if(D.isGroup)re=D.renderOrder;else if(D.isLOD)D.autoUpdate===!0&&D.update(K);else if(D.isLight)y.pushLight(D),D.castShadow&&y.pushShadow(D);else if(D.isSprite){if(!D.frustumCulled||ve.intersectsSprite(D)){q&&Ye.setFromMatrixPosition(D.matrixWorld).applyMatrix4(Ge);const Ke=P.update(D),rt=D.material;rt.visible&&M.push(D,Ke,rt,re,Ye.z,null)}}else if((D.isMesh||D.isLine||D.isPoints)&&(!D.frustumCulled||ve.intersectsObject(D))){D.isSkinnedMesh&&D.skeleton.frame!==De.render.frame&&(D.skeleton.update(),D.skeleton.frame=De.render.frame);const Ke=P.update(D),rt=D.material;if(q&&(D.boundingSphere!==void 0?(D.boundingSphere===null&&D.computeBoundingSphere(),Ye.copy(D.boundingSphere.center)):(Ke.boundingSphere===null&&Ke.computeBoundingSphere(),Ye.copy(Ke.boundingSphere.center)),Ye.applyMatrix4(D.matrixWorld).applyMatrix4(Ge)),Array.isArray(rt)){const it=Ke.groups;for(let vt=0,st=it.length;vt<st;vt++){const lt=it[vt],Ot=rt[lt.materialIndex];Ot&&Ot.visible&&M.push(D,Ke,Ot,re,Ye.z,lt)}}else rt.visible&&M.push(D,Ke,rt,re,Ye.z,null)}}const ke=D.children;for(let Ke=0,rt=ke.length;Ke<rt;Ke++)$s(ke[Ke],K,re,q)}function Rc(D,K,re,q){const ae=D.opaque,ke=D.transmissive,Ke=D.transparent;y.setupLightsView(re),Me===!0&&de.setGlobalState(b.clippingPlanes,re),ke.length>0&&no(ae,ke,K,re),q&&fe.viewport(U.copy(q)),ae.length>0&&Ks(ae,K,re),ke.length>0&&Ks(ke,K,re),Ke.length>0&&Ks(Ke,K,re),fe.buffers.depth.setTest(!0),fe.buffers.depth.setMask(!0),fe.buffers.color.setMask(!0),fe.setPolygonOffset(!1)}function no(D,K,re,q){const ae=be.isWebGL2;Ie===null&&(Ie=new Oi(1,1,{generateMipmaps:!0,type:ie.has("EXT_color_buffer_half_float")?Va:Tr,minFilter:Jr,samples:ae&&c===!0?4:0})),b.getDrawingBufferSize(je),ae?Ie.setSize(je.x,je.y):Ie.setSize(bu(je.x),bu(je.y));const ke=b.getRenderTarget();b.setRenderTarget(Ie),b.getClearColor(Y),Z=b.getClearAlpha(),Z<1&&b.setClearColor(16777215,.5),b.clear();const Ke=b.toneMapping;b.toneMapping=$i,Ks(D,re,q),Ne.updateMultisampleRenderTarget(Ie),Ne.updateRenderTargetMipmap(Ie);let rt=!1;for(let it=0,vt=K.length;it<vt;it++){const st=K[it],lt=st.object,Ot=st.geometry,Wt=st.material,Vn=st.group;if(Wt.side===qi&&lt.layers.test(q.layers)){const fi=Wt.side;Wt.side=In,Wt.needsUpdate=!0,Cc(lt,re,q,Ot,Wt,Vn),Wt.side=fi,Wt.needsUpdate=!0,rt=!0}}rt===!0&&(Ne.updateMultisampleRenderTarget(Ie),Ne.updateRenderTargetMipmap(Ie)),b.setRenderTarget(ke),b.setClearColor(Y,Z),b.toneMapping=Ke}function Ks(D,K,re){const q=K.isScene===!0?K.overrideMaterial:null;for(let ae=0,ke=D.length;ae<ke;ae++){const Ke=D[ae],rt=Ke.object,it=Ke.geometry,vt=q===null?Ke.material:q,st=Ke.group;rt.layers.test(re.layers)&&Cc(rt,K,re,it,vt,st)}}function Cc(D,K,re,q,ae,ke){D.onBeforeRender(b,K,re,q,ae,ke),D.modelViewMatrix.multiplyMatrices(re.matrixWorldInverse,D.matrixWorld),D.normalMatrix.getNormalMatrix(D.modelViewMatrix),ae.onBeforeRender(b,K,re,q,D,ke),ae.transparent===!0&&ae.side===qi&&ae.forceSinglePass===!1?(ae.side=In,ae.needsUpdate=!0,b.renderBufferDirect(re,K,q,ae,D,ke),ae.side=Ji,ae.needsUpdate=!0,b.renderBufferDirect(re,K,q,ae,D,ke),ae.side=qi):b.renderBufferDirect(re,K,q,ae,D,ke),D.onAfterRender(b,K,re,q,ae,ke)}function Js(D,K,re){K.isScene!==!0&&(K=At);const q=Ue.get(D),ae=y.state.lights,ke=y.state.shadowsArray,Ke=ae.state.version,rt=te.getParameters(D,ae.state,ke,K,re),it=te.getProgramCacheKey(rt);let vt=q.programs;q.environment=D.isMeshStandardMaterial?K.environment:null,q.fog=K.fog,q.envMap=(D.isMeshStandardMaterial?nt:Ze).get(D.envMap||q.environment),vt===void 0&&(D.addEventListener("dispose",Le),vt=new Map,q.programs=vt);let st=vt.get(it);if(st!==void 0){if(q.currentProgram===st&&q.lightsStateVersion===Ke)return Pc(D,rt),st}else rt.uniforms=te.getUniforms(D),D.onBuild(re,rt,b),D.onBeforeCompile(rt,b),st=te.acquireProgram(rt,it),vt.set(it,st),q.uniforms=rt.uniforms;const lt=q.uniforms;(!D.isShaderMaterial&&!D.isRawShaderMaterial||D.clipping===!0)&&(lt.clippingPlanes=de.uniform),Pc(D,rt),q.needsLights=$u(D),q.lightsStateVersion=Ke,q.needsLights&&(lt.ambientLightColor.value=ae.state.ambient,lt.lightProbe.value=ae.state.probe,lt.directionalLights.value=ae.state.directional,lt.directionalLightShadows.value=ae.state.directionalShadow,lt.spotLights.value=ae.state.spot,lt.spotLightShadows.value=ae.state.spotShadow,lt.rectAreaLights.value=ae.state.rectArea,lt.ltc_1.value=ae.state.rectAreaLTC1,lt.ltc_2.value=ae.state.rectAreaLTC2,lt.pointLights.value=ae.state.point,lt.pointLightShadows.value=ae.state.pointShadow,lt.hemisphereLights.value=ae.state.hemi,lt.directionalShadowMap.value=ae.state.directionalShadowMap,lt.directionalShadowMatrix.value=ae.state.directionalShadowMatrix,lt.spotShadowMap.value=ae.state.spotShadowMap,lt.spotLightMatrix.value=ae.state.spotLightMatrix,lt.spotLightMap.value=ae.state.spotLightMap,lt.pointShadowMap.value=ae.state.pointShadowMap,lt.pointShadowMatrix.value=ae.state.pointShadowMatrix);const Ot=st.getUniforms(),Wt=du.seqWithValue(Ot.seq,lt);return q.currentProgram=st,q.uniformsList=Wt,st}function Pc(D,K){const re=Ue.get(D);re.outputColorSpace=K.outputColorSpace,re.instancing=K.instancing,re.skinning=K.skinning,re.morphTargets=K.morphTargets,re.morphNormals=K.morphNormals,re.morphColors=K.morphColors,re.morphTargetsCount=K.morphTargetsCount,re.numClippingPlanes=K.numClippingPlanes,re.numIntersection=K.numClipIntersection,re.vertexAlphas=K.vertexAlphas,re.vertexTangents=K.vertexTangents,re.toneMapping=K.toneMapping}function Yu(D,K,re,q,ae){K.isScene!==!0&&(K=At),Ne.resetTextureUnits();const ke=K.fog,Ke=q.isMeshStandardMaterial?K.environment:null,rt=F===null?b.outputColorSpace:F.isXRRenderTarget===!0?F.texture.colorSpace:Ni,it=(q.isMeshStandardMaterial?nt:Ze).get(q.envMap||Ke),vt=q.vertexColors===!0&&!!re.attributes.color&&re.attributes.color.itemSize===4,st=!!re.attributes.tangent&&(!!q.normalMap||q.anisotropy>0),lt=!!re.morphAttributes.position,Ot=!!re.morphAttributes.normal,Wt=!!re.morphAttributes.color,Vn=q.toneMapped?b.toneMapping:$i,fi=re.morphAttributes.position||re.morphAttributes.normal||re.morphAttributes.color,Xt=fi!==void 0?fi.length:0,St=Ue.get(q),io=y.state.lights;if(Me===!0&&(Re===!0||D!==T)){const _n=D===T&&q.id===N;de.setState(q,D,_n)}let un=!1;q.version===St.__version?(St.needsLights&&St.lightsStateVersion!==io.state.version||St.outputColorSpace!==rt||ae.isInstancedMesh&&St.instancing===!1||!ae.isInstancedMesh&&St.instancing===!0||ae.isSkinnedMesh&&St.skinning===!1||!ae.isSkinnedMesh&&St.skinning===!0||St.envMap!==it||q.fog===!0&&St.fog!==ke||St.numClippingPlanes!==void 0&&(St.numClippingPlanes!==de.numPlanes||St.numIntersection!==de.numIntersection)||St.vertexAlphas!==vt||St.vertexTangents!==st||St.morphTargets!==lt||St.morphNormals!==Ot||St.morphColors!==Wt||St.toneMapping!==Vn||be.isWebGL2===!0&&St.morphTargetsCount!==Xt)&&(un=!0):(un=!0,St.__version=q.version);let nr=St.currentProgram;un===!0&&(nr=Js(q,K,ae));let ro=!1,Pr=!1,Qs=!1;const fn=nr.getUniforms(),ir=St.uniforms;if(fe.useProgram(nr.program)&&(ro=!0,Pr=!0,Qs=!0),q.id!==N&&(N=q.id,Pr=!0),ro||T!==D){if(fn.setValue(H,"projectionMatrix",D.projectionMatrix),be.logarithmicDepthBuffer&&fn.setValue(H,"logDepthBufFC",2/(Math.log(D.far+1)/Math.LN2)),T!==D&&(T=D,Pr=!0,Qs=!0),q.isShaderMaterial||q.isMeshPhongMaterial||q.isMeshToonMaterial||q.isMeshStandardMaterial||q.envMap){const _n=fn.map.cameraPosition;_n!==void 0&&_n.setValue(H,Ye.setFromMatrixPosition(D.matrixWorld))}(q.isMeshPhongMaterial||q.isMeshToonMaterial||q.isMeshLambertMaterial||q.isMeshBasicMaterial||q.isMeshStandardMaterial||q.isShaderMaterial)&&fn.setValue(H,"isOrthographic",D.isOrthographicCamera===!0),(q.isMeshPhongMaterial||q.isMeshToonMaterial||q.isMeshLambertMaterial||q.isMeshBasicMaterial||q.isMeshStandardMaterial||q.isShaderMaterial||q.isShadowMaterial||ae.isSkinnedMesh)&&fn.setValue(H,"viewMatrix",D.matrixWorldInverse)}if(ae.isSkinnedMesh){fn.setOptional(H,ae,"bindMatrix"),fn.setOptional(H,ae,"bindMatrixInverse");const _n=ae.skeleton;_n&&(be.floatVertexTextures?(_n.boneTexture===null&&_n.computeBoneTexture(),fn.setValue(H,"boneTexture",_n.boneTexture,Ne),fn.setValue(H,"boneTextureSize",_n.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const js=re.morphAttributes;if((js.position!==void 0||js.normal!==void 0||js.color!==void 0&&be.isWebGL2===!0)&&ze.update(ae,re,nr),(Pr||St.receiveShadow!==ae.receiveShadow)&&(St.receiveShadow=ae.receiveShadow,fn.setValue(H,"receiveShadow",ae.receiveShadow)),q.isMeshGouraudMaterial&&q.envMap!==null&&(ir.envMap.value=it,ir.flipEnvMap.value=it.isCubeTexture&&it.isRenderTargetTexture===!1?-1:1),Pr&&(fn.setValue(H,"toneMappingExposure",b.toneMappingExposure),St.needsLights&&Zu(ir,Qs),ke&&q.fog===!0&&Se.refreshFogUniforms(ir,ke),Se.refreshMaterialUniforms(ir,q,ne,pe,Ie),du.upload(H,St.uniformsList,ir,Ne)),q.isShaderMaterial&&q.uniformsNeedUpdate===!0&&(du.upload(H,St.uniformsList,ir,Ne),q.uniformsNeedUpdate=!1),q.isSpriteMaterial&&fn.setValue(H,"center",ae.center),fn.setValue(H,"modelViewMatrix",ae.modelViewMatrix),fn.setValue(H,"normalMatrix",ae.normalMatrix),fn.setValue(H,"modelMatrix",ae.matrixWorld),q.isShaderMaterial||q.isRawShaderMaterial){const _n=q.uniformsGroups;for(let ea=0,Ku=_n.length;ea<Ku;ea++)if(be.isWebGL2){const so=_n[ea];Je.update(so,nr),Je.bind(so,nr)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return nr}function Zu(D,K){D.ambientLightColor.needsUpdate=K,D.lightProbe.needsUpdate=K,D.directionalLights.needsUpdate=K,D.directionalLightShadows.needsUpdate=K,D.pointLights.needsUpdate=K,D.pointLightShadows.needsUpdate=K,D.spotLights.needsUpdate=K,D.spotLightShadows.needsUpdate=K,D.rectAreaLights.needsUpdate=K,D.hemisphereLights.needsUpdate=K}function $u(D){return D.isMeshLambertMaterial||D.isMeshToonMaterial||D.isMeshPhongMaterial||D.isMeshStandardMaterial||D.isShadowMaterial||D.isShaderMaterial&&D.lights===!0}this.getActiveCubeFace=function(){return A},this.getActiveMipmapLevel=function(){return L},this.getRenderTarget=function(){return F},this.setRenderTargetTextures=function(D,K,re){Ue.get(D.texture).__webglTexture=K,Ue.get(D.depthTexture).__webglTexture=re;const q=Ue.get(D);q.__hasExternalTextures=!0,q.__hasExternalTextures&&(q.__autoAllocateDepthBuffer=re===void 0,q.__autoAllocateDepthBuffer||ie.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),q.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(D,K){const re=Ue.get(D);re.__webglFramebuffer=K,re.__useDefaultFramebuffer=K===void 0},this.setRenderTarget=function(D,K=0,re=0){F=D,A=K,L=re;let q=!0,ae=null,ke=!1,Ke=!1;if(D){const it=Ue.get(D);it.__useDefaultFramebuffer!==void 0?(fe.bindFramebuffer(H.FRAMEBUFFER,null),q=!1):it.__webglFramebuffer===void 0?Ne.setupRenderTarget(D):it.__hasExternalTextures&&Ne.rebindTextures(D,Ue.get(D.texture).__webglTexture,Ue.get(D.depthTexture).__webglTexture);const vt=D.texture;(vt.isData3DTexture||vt.isDataArrayTexture||vt.isCompressedArrayTexture)&&(Ke=!0);const st=Ue.get(D).__webglFramebuffer;D.isWebGLCubeRenderTarget?(ae=st[K],ke=!0):be.isWebGL2&&D.samples>0&&Ne.useMultisampledRTT(D)===!1?ae=Ue.get(D).__webglMultisampledFramebuffer:ae=st,U.copy(D.viewport),$.copy(D.scissor),he=D.scissorTest}else U.copy(_e).multiplyScalar(ne).floor(),$.copy(Ee).multiplyScalar(ne).floor(),he=j;if(fe.bindFramebuffer(H.FRAMEBUFFER,ae)&&be.drawBuffers&&q&&fe.drawBuffers(D,ae),fe.viewport(U),fe.scissor($),fe.setScissorTest(he),ke){const it=Ue.get(D.texture);H.framebufferTexture2D(H.FRAMEBUFFER,H.COLOR_ATTACHMENT0,H.TEXTURE_CUBE_MAP_POSITIVE_X+K,it.__webglTexture,re)}else if(Ke){const it=Ue.get(D.texture),vt=K||0;H.framebufferTextureLayer(H.FRAMEBUFFER,H.COLOR_ATTACHMENT0,it.__webglTexture,re||0,vt)}N=-1},this.readRenderTargetPixels=function(D,K,re,q,ae,ke,Ke){if(!(D&&D.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let rt=Ue.get(D).__webglFramebuffer;if(D.isWebGLCubeRenderTarget&&Ke!==void 0&&(rt=rt[Ke]),rt){fe.bindFramebuffer(H.FRAMEBUFFER,rt);try{const it=D.texture,vt=it.format,st=it.type;if(vt!==oi&&He.convert(vt)!==H.getParameter(H.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const lt=st===Va&&(ie.has("EXT_color_buffer_half_float")||be.isWebGL2&&ie.has("EXT_color_buffer_float"));if(st!==Tr&&He.convert(st)!==H.getParameter(H.IMPLEMENTATION_COLOR_READ_TYPE)&&!(st===Yi&&(be.isWebGL2||ie.has("OES_texture_float")||ie.has("WEBGL_color_buffer_float")))&&!lt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}K>=0&&K<=D.width-q&&re>=0&&re<=D.height-ae&&H.readPixels(K,re,q,ae,He.convert(vt),He.convert(st),ke)}finally{const it=F!==null?Ue.get(F).__webglFramebuffer:null;fe.bindFramebuffer(H.FRAMEBUFFER,it)}}},this.copyFramebufferToTexture=function(D,K,re=0){const q=Math.pow(2,-re),ae=Math.floor(K.image.width*q),ke=Math.floor(K.image.height*q);Ne.setTexture2D(K,0),H.copyTexSubImage2D(H.TEXTURE_2D,re,0,0,D.x,D.y,ae,ke),fe.unbindTexture()},this.copyTextureToTexture=function(D,K,re,q=0){const ae=K.image.width,ke=K.image.height,Ke=He.convert(re.format),rt=He.convert(re.type);Ne.setTexture2D(re,0),H.pixelStorei(H.UNPACK_FLIP_Y_WEBGL,re.flipY),H.pixelStorei(H.UNPACK_PREMULTIPLY_ALPHA_WEBGL,re.premultiplyAlpha),H.pixelStorei(H.UNPACK_ALIGNMENT,re.unpackAlignment),K.isDataTexture?H.texSubImage2D(H.TEXTURE_2D,q,D.x,D.y,ae,ke,Ke,rt,K.image.data):K.isCompressedTexture?H.compressedTexSubImage2D(H.TEXTURE_2D,q,D.x,D.y,K.mipmaps[0].width,K.mipmaps[0].height,Ke,K.mipmaps[0].data):H.texSubImage2D(H.TEXTURE_2D,q,D.x,D.y,Ke,rt,K.image),q===0&&re.generateMipmaps&&H.generateMipmap(H.TEXTURE_2D),fe.unbindTexture()},this.copyTextureToTexture3D=function(D,K,re,q,ae=0){if(b.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const ke=D.max.x-D.min.x+1,Ke=D.max.y-D.min.y+1,rt=D.max.z-D.min.z+1,it=He.convert(q.format),vt=He.convert(q.type);let st;if(q.isData3DTexture)Ne.setTexture3D(q,0),st=H.TEXTURE_3D;else if(q.isDataArrayTexture)Ne.setTexture2DArray(q,0),st=H.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}H.pixelStorei(H.UNPACK_FLIP_Y_WEBGL,q.flipY),H.pixelStorei(H.UNPACK_PREMULTIPLY_ALPHA_WEBGL,q.premultiplyAlpha),H.pixelStorei(H.UNPACK_ALIGNMENT,q.unpackAlignment);const lt=H.getParameter(H.UNPACK_ROW_LENGTH),Ot=H.getParameter(H.UNPACK_IMAGE_HEIGHT),Wt=H.getParameter(H.UNPACK_SKIP_PIXELS),Vn=H.getParameter(H.UNPACK_SKIP_ROWS),fi=H.getParameter(H.UNPACK_SKIP_IMAGES),Xt=re.isCompressedTexture?re.mipmaps[0]:re.image;H.pixelStorei(H.UNPACK_ROW_LENGTH,Xt.width),H.pixelStorei(H.UNPACK_IMAGE_HEIGHT,Xt.height),H.pixelStorei(H.UNPACK_SKIP_PIXELS,D.min.x),H.pixelStorei(H.UNPACK_SKIP_ROWS,D.min.y),H.pixelStorei(H.UNPACK_SKIP_IMAGES,D.min.z),re.isDataTexture||re.isData3DTexture?H.texSubImage3D(st,ae,K.x,K.y,K.z,ke,Ke,rt,it,vt,Xt.data):re.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),H.compressedTexSubImage3D(st,ae,K.x,K.y,K.z,ke,Ke,rt,it,Xt.data)):H.texSubImage3D(st,ae,K.x,K.y,K.z,ke,Ke,rt,it,vt,Xt),H.pixelStorei(H.UNPACK_ROW_LENGTH,lt),H.pixelStorei(H.UNPACK_IMAGE_HEIGHT,Ot),H.pixelStorei(H.UNPACK_SKIP_PIXELS,Wt),H.pixelStorei(H.UNPACK_SKIP_ROWS,Vn),H.pixelStorei(H.UNPACK_SKIP_IMAGES,fi),ae===0&&q.generateMipmaps&&H.generateMipmap(st),fe.unbindTexture()},this.initTexture=function(D){D.isCubeTexture?Ne.setTextureCube(D,0):D.isData3DTexture?Ne.setTexture3D(D,0):D.isDataArrayTexture||D.isCompressedArrayTexture?Ne.setTexture2DArray(D,0):Ne.setTexture2D(D,0),fe.unbindTexture()},this.resetState=function(){A=0,L=0,F=null,fe.reset(),Fe.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Zi}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===ut?Ar:jo}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===Ar?ut:Ni}}class Yv extends tp{}Yv.prototype.isWebGL1Renderer=!0;class Fu{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new Oe(e),this.density=t}clone(){return new Fu(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class Bu{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new Oe(e),this.near=t,this.far=n}clone(){return new Bu(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class np extends Ct{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}class zu{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=ec,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=li()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=li()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=li()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Bn=new I;class zs{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Bn.fromBufferAttribute(this,t),Bn.applyMatrix4(e),this.setXYZ(t,Bn.x,Bn.y,Bn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Bn.fromBufferAttribute(this,t),Bn.applyNormalMatrix(e),this.setXYZ(t,Bn.x,Bn.y,Bn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Bn.fromBufferAttribute(this,t),Bn.transformDirection(e),this.setXYZ(t,Bn.x,Bn.y,Bn.z);return this}setX(e,t){return this.normalized&&(t=mt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=mt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=mt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=mt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=ci(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=ci(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=ci(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=ci(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array),i=mt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=mt(t,this.array),n=mt(n,this.array),i=mt(i,this.array),s=mt(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new Nt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new zs(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class ip extends Dn{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new Oe(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let La;const Ao=new I,Ia=new I,Ua=new I,Da=new ce,Ro=new ce,Zv=new at,Fl=new I,Co=new I,Bl=new I,A_=new ce,Cf=new ce,R_=new ce;class $v extends Ct{constructor(e){if(super(),this.isSprite=!0,this.type="Sprite",La===void 0){La=new _t;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new zu(t,5);La.setIndex([0,1,2,0,2,3]),La.setAttribute("position",new zs(n,3,0,!1)),La.setAttribute("uv",new zs(n,2,3,!1))}this.geometry=La,this.material=e!==void 0?e:new ip,this.center=new ce(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),Ia.setFromMatrixScale(this.matrixWorld),Zv.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Ua.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&Ia.multiplyScalar(-Ua.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const o=this.center;zl(Fl.set(-.5,-.5,0),Ua,o,Ia,i,s),zl(Co.set(.5,-.5,0),Ua,o,Ia,i,s),zl(Bl.set(.5,.5,0),Ua,o,Ia,i,s),A_.set(0,0),Cf.set(1,0),R_.set(1,1);let c=e.ray.intersectTriangle(Fl,Co,Bl,!1,Ao);if(c===null&&(zl(Co.set(-.5,.5,0),Ua,o,Ia,i,s),Cf.set(0,1),c=e.ray.intersectTriangle(Fl,Bl,Co,!1,Ao),c===null))return;const u=e.ray.origin.distanceTo(Ao);u<e.near||u>e.far||t.push({distance:u,point:Ao.clone(),uv:$n.getInterpolation(Ao,Fl,Co,Bl,A_,Cf,R_,new ce),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function zl(r,e,t,n,i,s){Da.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(Ro.x=s*Da.x-i*Da.y,Ro.y=i*Da.x+s*Da.y):Ro.copy(Da),r.copy(e),r.x+=Ro.x,r.y+=Ro.y,r.applyMatrix4(Zv)}const Hl=new I,C_=new I;class Kv extends Ct{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0,n=0){t=Math.abs(t);const i=this.levels;let s;for(s=0;s<i.length&&!(t<i[s].distance);s++);return i.splice(s,0,{distance:t,hysteresis:n,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i;n++){let s=t[n].distance;if(t[n].object.visible&&(s-=s*t[n].hysteresis),e<s)break}return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){Hl.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(Hl);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){Hl.setFromMatrixPosition(e.matrixWorld),C_.setFromMatrixPosition(this.matrixWorld);const n=Hl.distanceTo(C_)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s;i++){let o=t[i].distance;if(t[i].object.visible&&(o-=o*t[i].hysteresis),n>=o)t[i-1].object.visible=!1,t[i].object.visible=!0;else break}for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const o=n[i];t.object.levels.push({object:o.object.uuid,distance:o.distance,hysteresis:o.hysteresis})}return t}}const P_=new I,L_=new Dt,I_=new Dt,jL=new I,U_=new at,Na=new I,Pf=new Fi,D_=new at,Lf=new Za;class Jv extends Mn{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new at,this.bindMatrixInverse=new at,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new er),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)Na.fromBufferAttribute(t,n),this.applyBoneTransform(n,Na),this.boundingBox.expandByPoint(Na)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new Fi),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let n=0;n<t.count;n++)Na.fromBufferAttribute(t,n),this.applyBoneTransform(n,Na),this.boundingSphere.expandByPoint(Na)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const n=this.material,i=this.matrixWorld;n!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Pf.copy(this.boundingSphere),Pf.applyMatrix4(i),e.ray.intersectsSphere(Pf)!==!1&&(D_.copy(i).invert(),Lf.copy(e.ray).applyMatrix4(D_),!(this.boundingBox!==null&&Lf.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,Lf)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Dt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const n=this.skeleton,i=this.geometry;L_.fromBufferAttribute(i.attributes.skinIndex,e),I_.fromBufferAttribute(i.attributes.skinWeight,e),P_.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const o=I_.getComponent(s);if(o!==0){const c=L_.getComponent(s);U_.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),t.addScaledVector(jL.copy(P_).applyMatrix4(U_),o)}}return t.applyMatrix4(this.bindMatrixInverse)}boneTransform(e,t){return console.warn("THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151."),this.applyBoneTransform(e,t)}}class rp extends Ct{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Ga extends ln{constructor(e=null,t=1,n=1,i,s,o,c,u,h=on,d=on,m,p){super(null,o,c,u,h,d,i,s,m,p),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const N_=new at,e2=new at;class Hu{constructor(e=[],t=[]){this.uuid=li(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new at)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new at;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,o=e.length;s<o;s++){const c=e[s]?e[s].matrixWorld:e2;N_.multiplyMatrices(c,t[s]),N_.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new Hu(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Iv(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new Ga(t,e,e,oi,Yi);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let o=t[s];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),o=new rp),this.bones.push(o),this.boneInverses.push(new at().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const o=t[i];e.bones.push(o.uuid);const c=n[i];e.boneInverses.push(c.toArray())}return e}}class qa extends Nt{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Oa=new at,O_=new at,kl=[],F_=new er,t2=new at,Po=new Mn,Lo=new Fi;class Qv extends Mn{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new qa(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.boundingBox=null,this.boundingSphere=null;for(let i=0;i<n;i++)this.setMatrixAt(i,t2)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new er),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Oa),F_.copy(e.boundingBox).applyMatrix4(Oa),this.boundingBox.union(F_)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new Fi),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let n=0;n<t;n++)this.getMatrixAt(n,Oa),Lo.copy(e.boundingSphere).applyMatrix4(Oa),this.boundingSphere.union(Lo)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(Po.geometry=this.geometry,Po.material=this.material,Po.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Lo.copy(this.boundingSphere),Lo.applyMatrix4(n),e.ray.intersectsSphere(Lo)!==!1))for(let s=0;s<i;s++){this.getMatrixAt(s,Oa),O_.multiplyMatrices(n,Oa),Po.matrixWorld=O_,Po.raycast(e,kl);for(let o=0,c=kl.length;o<c;o++){const u=kl[o];u.instanceId=s,u.object=this,t.push(u)}kl.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new qa(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class Gn extends Dn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Oe(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const B_=new I,z_=new I,H_=new at,If=new Za,Gl=new Fi;class Qr extends Ct{constructor(e=new _t,t=new Gn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)B_.fromBufferAttribute(t,i-1),z_.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=B_.distanceTo(z_);e.setAttribute("lineDistance",new We(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Gl.copy(n.boundingSphere),Gl.applyMatrix4(i),Gl.radius+=s,e.ray.intersectsSphere(Gl)===!1)return;H_.copy(i).invert(),If.copy(e.ray).applyMatrix4(H_);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=new I,d=new I,m=new I,p=new I,_=this.isLineSegments?2:1,v=n.index,y=n.attributes.position;if(v!==null){const g=Math.max(0,o.start),S=Math.min(v.count,o.start+o.count);for(let b=g,E=S-1;b<E;b+=_){const A=v.getX(b),L=v.getX(b+1);if(h.fromBufferAttribute(y,A),d.fromBufferAttribute(y,L),If.distanceSqToSegment(h,d,p,m)>u)continue;p.applyMatrix4(this.matrixWorld);const N=e.ray.origin.distanceTo(p);N<e.near||N>e.far||t.push({distance:N,point:m.clone().applyMatrix4(this.matrixWorld),index:b,face:null,faceIndex:null,object:this})}}else{const g=Math.max(0,o.start),S=Math.min(y.count,o.start+o.count);for(let b=g,E=S-1;b<E;b+=_){if(h.fromBufferAttribute(y,b),d.fromBufferAttribute(y,b+1),If.distanceSqToSegment(h,d,p,m)>u)continue;p.applyMatrix4(this.matrixWorld);const L=e.ray.origin.distanceTo(p);L<e.near||L>e.far||t.push({distance:L,point:m.clone().applyMatrix4(this.matrixWorld),index:b,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}const k_=new I,G_=new I;class tr extends Qr{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)k_.fromBufferAttribute(t,i),G_.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+k_.distanceTo(G_);e.setAttribute("lineDistance",new We(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class jv extends Qr{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class sp extends Dn{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new Oe(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const V_=new at,wd=new Za,Vl=new Fi,Wl=new I;class ey extends Ct{constructor(e=new _t,t=new sp){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Vl.copy(n.boundingSphere),Vl.applyMatrix4(i),Vl.radius+=s,e.ray.intersectsSphere(Vl)===!1)return;V_.copy(i).invert(),wd.copy(e.ray).applyMatrix4(V_);const c=s/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=n.index,m=n.attributes.position;if(h!==null){const p=Math.max(0,o.start),_=Math.min(h.count,o.start+o.count);for(let v=p,M=_;v<M;v++){const y=h.getX(v);Wl.fromBufferAttribute(m,y),W_(Wl,y,u,i,e,t,this)}}else{const p=Math.max(0,o.start),_=Math.min(m.count,o.start+o.count);for(let v=p,M=_;v<M;v++)Wl.fromBufferAttribute(m,v),W_(Wl,v,u,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const c=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=s}}}}}function W_(r,e,t,n,i,s,o){const c=wd.distanceSqToPoint(r);if(c<t){const u=new I;wd.closestPointToPoint(r,u),u.applyMatrix4(n);const h=i.ray.origin.distanceTo(u);if(h<i.near||h>i.far)return;s.push({distance:h,distanceToRay:Math.sqrt(c),point:u,index:e,face:null,object:o})}}class n2 extends ln{constructor(e,t,n,i,s,o,c,u,h){super(e,t,n,i,s,o,c,u,h),this.isVideoTexture=!0,this.minFilter=o!==void 0?o:cn,this.magFilter=s!==void 0?s:cn,this.generateMipmaps=!1;const d=this;function m(){d.needsUpdate=!0,e.requestVideoFrameCallback(m)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(m)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class i2 extends ln{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=on,this.minFilter=on,this.generateMipmaps=!1,this.needsUpdate=!0}}class ap extends ln{constructor(e,t,n,i,s,o,c,u,h,d,m,p){super(null,o,c,u,h,d,i,s,m,p),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class r2 extends ap{constructor(e,t,n,i,s,o){super(e,t,n,s,o),this.isCompressedArrayTexture=!0,this.image.depth=i,this.wrapR=Ln}}class s2 extends ln{constructor(e,t,n,i,s,o,c,u,h){super(e,t,n,i,s,o,c,u,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class Bi{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let o;t?o=t:o=e*n[s-1];let c=0,u=s-1,h;for(;c<=u;)if(i=Math.floor(c+(u-c)/2),h=n[i]-o,h<0)c=i+1;else if(h>0)u=i-1;else{u=i;break}if(i=u,n[i]===o)return i/(s-1);const d=n[i],p=n[i+1]-d,_=(o-d)/p;return(i+_)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const o=this.getPoint(i),c=this.getPoint(s),u=t||(o.isVector2?new ce:new I);return u.copy(c).sub(o).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new I,i=[],s=[],o=[],c=new I,u=new at;for(let _=0;_<=e;_++){const v=_/e;i[_]=this.getTangentAt(v,new I)}s[0]=new I,o[0]=new I;let h=Number.MAX_VALUE;const d=Math.abs(i[0].x),m=Math.abs(i[0].y),p=Math.abs(i[0].z);d<=h&&(h=d,n.set(1,0,0)),m<=h&&(h=m,n.set(0,1,0)),p<=h&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],c),o[0].crossVectors(i[0],s[0]);for(let _=1;_<=e;_++){if(s[_]=s[_-1].clone(),o[_]=o[_-1].clone(),c.crossVectors(i[_-1],i[_]),c.length()>Number.EPSILON){c.normalize();const v=Math.acos(nn(i[_-1].dot(i[_]),-1,1));s[_].applyMatrix4(u.makeRotationAxis(c,v))}o[_].crossVectors(i[_],s[_])}if(t===!0){let _=Math.acos(nn(s[0].dot(s[e]),-1,1));_/=e,i[0].dot(c.crossVectors(s[0],s[e]))>0&&(_=-_);for(let v=1;v<=e;v++)s[v].applyMatrix4(u.makeRotationAxis(i[v],_*v)),o[v].crossVectors(i[v],s[v])}return{tangents:i,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class ku extends Bi{constructor(e=0,t=0,n=1,i=1,s=0,o=Math.PI*2,c=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=c,this.aRotation=u}getPoint(e,t){const n=t||new ce,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(o?s=0:s=i),this.aClockwise===!0&&!o&&(s===i?s=-i:s=s-i);const c=this.aStartAngle+e*s;let u=this.aX+this.xRadius*Math.cos(c),h=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const d=Math.cos(this.aRotation),m=Math.sin(this.aRotation),p=u-this.aX,_=h-this.aY;u=p*d-_*m+this.aX,h=p*m+_*d+this.aY}return n.set(u,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class ty extends ku{constructor(e,t,n,i,s,o){super(e,t,n,n,i,s,o),this.isArcCurve=!0,this.type="ArcCurve"}}function op(){let r=0,e=0,t=0,n=0;function i(s,o,c,u){r=s,e=c,t=-3*s+3*o-2*c-u,n=2*s-2*o+c+u}return{initCatmullRom:function(s,o,c,u,h){i(o,c,h*(c-s),h*(u-o))},initNonuniformCatmullRom:function(s,o,c,u,h,d,m){let p=(o-s)/h-(c-s)/(h+d)+(c-o)/d,_=(c-o)/d-(u-o)/(d+m)+(u-c)/m;p*=d,_*=d,i(o,c,p,_)},calc:function(s){const o=s*s,c=o*s;return r+e*s+t*o+n*c}}}const Xl=new I,Uf=new op,Df=new op,Nf=new op;class ny extends Bi{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new I){const n=t,i=this.points,s=i.length,o=(s-(this.closed?0:1))*e;let c=Math.floor(o),u=o-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/s)+1)*s:u===0&&c===s-1&&(c=s-2,u=1);let h,d;this.closed||c>0?h=i[(c-1)%s]:(Xl.subVectors(i[0],i[1]).add(i[0]),h=Xl);const m=i[c%s],p=i[(c+1)%s];if(this.closed||c+2<s?d=i[(c+2)%s]:(Xl.subVectors(i[s-1],i[s-2]).add(i[s-1]),d=Xl),this.curveType==="centripetal"||this.curveType==="chordal"){const _=this.curveType==="chordal"?.5:.25;let v=Math.pow(h.distanceToSquared(m),_),M=Math.pow(m.distanceToSquared(p),_),y=Math.pow(p.distanceToSquared(d),_);M<1e-4&&(M=1),v<1e-4&&(v=M),y<1e-4&&(y=M),Uf.initNonuniformCatmullRom(h.x,m.x,p.x,d.x,v,M,y),Df.initNonuniformCatmullRom(h.y,m.y,p.y,d.y,v,M,y),Nf.initNonuniformCatmullRom(h.z,m.z,p.z,d.z,v,M,y)}else this.curveType==="catmullrom"&&(Uf.initCatmullRom(h.x,m.x,p.x,d.x,this.tension),Df.initCatmullRom(h.y,m.y,p.y,d.y,this.tension),Nf.initCatmullRom(h.z,m.z,p.z,d.z,this.tension));return n.set(Uf.calc(u),Df.calc(u),Nf.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new I().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function X_(r,e,t,n,i){const s=(n-e)*.5,o=(i-t)*.5,c=r*r,u=r*c;return(2*t-2*n+s+o)*u+(-3*t+3*n-2*s-o)*c+s*r+t}function a2(r,e){const t=1-r;return t*t*e}function o2(r,e){return 2*(1-r)*r*e}function c2(r,e){return r*r*e}function Go(r,e,t,n){return a2(r,e)+o2(r,t)+c2(r,n)}function l2(r,e){const t=1-r;return t*t*t*e}function u2(r,e){const t=1-r;return 3*t*t*r*e}function h2(r,e){return 3*(1-r)*r*r*e}function f2(r,e){return r*r*r*e}function Vo(r,e,t,n,i){return l2(r,e)+u2(r,t)+h2(r,n)+f2(r,i)}class cp extends Bi{constructor(e=new ce,t=new ce,n=new ce,i=new ce){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new ce){const n=t,i=this.v0,s=this.v1,o=this.v2,c=this.v3;return n.set(Vo(e,i.x,s.x,o.x,c.x),Vo(e,i.y,s.y,o.y,c.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class iy extends Bi{constructor(e=new I,t=new I,n=new I,i=new I){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new I){const n=t,i=this.v0,s=this.v1,o=this.v2,c=this.v3;return n.set(Vo(e,i.x,s.x,o.x,c.x),Vo(e,i.y,s.y,o.y,c.y),Vo(e,i.z,s.z,o.z,c.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Gu extends Bi{constructor(e=new ce,t=new ce){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new ce){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new ce){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class ry extends Bi{constructor(e=new I,t=new I){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new I){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t=new I){return t.subVectors(this.v2,this.v1).normalize()}getTangentAt(e,t){return this.getTangent(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class lp extends Bi{constructor(e=new ce,t=new ce,n=new ce){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new ce){const n=t,i=this.v0,s=this.v1,o=this.v2;return n.set(Go(e,i.x,s.x,o.x),Go(e,i.y,s.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class up extends Bi{constructor(e=new I,t=new I,n=new I){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new I){const n=t,i=this.v0,s=this.v1,o=this.v2;return n.set(Go(e,i.x,s.x,o.x),Go(e,i.y,s.y,o.y),Go(e,i.z,s.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class hp extends Bi{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new ce){const n=t,i=this.points,s=(i.length-1)*e,o=Math.floor(s),c=s-o,u=i[o===0?o:o-1],h=i[o],d=i[o>i.length-2?i.length-1:o+1],m=i[o>i.length-3?i.length-1:o+2];return n.set(X_(c,u.x,h.x,d.x,m.x),X_(c,u.y,h.y,d.y,m.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new ce().fromArray(i))}return this}}var fp=Object.freeze({__proto__:null,ArcCurve:ty,CatmullRomCurve3:ny,CubicBezierCurve:cp,CubicBezierCurve3:iy,EllipseCurve:ku,LineCurve:Gu,LineCurve3:ry,QuadraticBezierCurve:lp,QuadraticBezierCurve3:up,SplineCurve:hp});class sy extends Bi{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Gu(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const o=i[s]-n,c=this.curves[s],u=c.getLength(),h=u===0?0:1-o/u;return c.getPointAt(h,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const o=s[i],c=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,u=o.getPoints(c);for(let h=0;h<u.length;h++){const d=u[h];n&&n.equals(d)||(t.push(d),n=d)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new fp[i.type]().fromJSON(i))}return this}}class ic extends sy{constructor(e){super(),this.type="Path",this.currentPoint=new ce,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Gu(this.currentPoint.clone(),new ce(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new lp(this.currentPoint.clone(),new ce(e,t),new ce(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,o){const c=new cp(this.currentPoint.clone(),new ce(e,t),new ce(n,i),new ce(s,o));return this.curves.push(c),this.currentPoint.set(s,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new hp(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,o){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+c,t+u,n,i,s,o),this}absarc(e,t,n,i,s,o){return this.absellipse(e,t,n,n,i,s,o),this}ellipse(e,t,n,i,s,o,c,u){const h=this.currentPoint.x,d=this.currentPoint.y;return this.absellipse(e+h,t+d,n,i,s,o,c,u),this}absellipse(e,t,n,i,s,o,c,u){const h=new ku(e,t,n,i,s,o,c,u);if(this.curves.length>0){const m=h.getPoint(0);m.equals(this.currentPoint)||this.lineTo(m.x,m.y)}this.curves.push(h);const d=h.getPoint(1);return this.currentPoint.copy(d),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Ja extends _t{constructor(e=[new ce(0,-.5),new ce(.5,0),new ce(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=nn(i,0,Math.PI*2);const s=[],o=[],c=[],u=[],h=[],d=1/t,m=new I,p=new ce,_=new I,v=new I,M=new I;let y=0,g=0;for(let S=0;S<=e.length-1;S++)switch(S){case 0:y=e[S+1].x-e[S].x,g=e[S+1].y-e[S].y,_.x=g*1,_.y=-y,_.z=g*0,M.copy(_),_.normalize(),u.push(_.x,_.y,_.z);break;case e.length-1:u.push(M.x,M.y,M.z);break;default:y=e[S+1].x-e[S].x,g=e[S+1].y-e[S].y,_.x=g*1,_.y=-y,_.z=g*0,v.copy(_),_.x+=M.x,_.y+=M.y,_.z+=M.z,_.normalize(),u.push(_.x,_.y,_.z),M.copy(v)}for(let S=0;S<=t;S++){const b=n+S*d*i,E=Math.sin(b),A=Math.cos(b);for(let L=0;L<=e.length-1;L++){m.x=e[L].x*E,m.y=e[L].y,m.z=e[L].x*A,o.push(m.x,m.y,m.z),p.x=S/t,p.y=L/(e.length-1),c.push(p.x,p.y);const F=u[3*L+0]*E,N=u[3*L+1],T=u[3*L+0]*A;h.push(F,N,T)}}for(let S=0;S<t;S++)for(let b=0;b<e.length-1;b++){const E=b+S*e.length,A=E,L=E+e.length,F=E+e.length+1,N=E+1;s.push(A,L,N),s.push(F,N,L)}this.setIndex(s),this.setAttribute("position",new We(o,3)),this.setAttribute("uv",new We(c,2)),this.setAttribute("normal",new We(h,3))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ja(e.points,e.segments,e.phiStart,e.phiLength)}}class mc extends Ja{constructor(e=1,t=1,n=4,i=8){const s=new ic;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new mc(e.radius,e.length,e.capSegments,e.radialSegments)}}class gc extends _t{constructor(e=1,t=32,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],o=[],c=[],u=[],h=new I,d=new ce;o.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(let m=0,p=3;m<=t;m++,p+=3){const _=n+m/t*i;h.x=e*Math.cos(_),h.y=e*Math.sin(_),o.push(h.x,h.y,h.z),c.push(0,0,1),d.x=(o[p]/e+1)/2,d.y=(o[p+1]/e+1)/2,u.push(d.x,d.y)}for(let m=1;m<=t;m++)s.push(m,m+1,0);this.setIndex(s),this.setAttribute("position",new We(o,3)),this.setAttribute("normal",new We(c,3)),this.setAttribute("uv",new We(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new gc(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class qs extends _t{constructor(e=1,t=1,n=1,i=32,s=1,o=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:o,thetaStart:c,thetaLength:u};const h=this;i=Math.floor(i),s=Math.floor(s);const d=[],m=[],p=[],_=[];let v=0;const M=[],y=n/2;let g=0;S(),o===!1&&(e>0&&b(!0),t>0&&b(!1)),this.setIndex(d),this.setAttribute("position",new We(m,3)),this.setAttribute("normal",new We(p,3)),this.setAttribute("uv",new We(_,2));function S(){const E=new I,A=new I;let L=0;const F=(t-e)/n;for(let N=0;N<=s;N++){const T=[],U=N/s,$=U*(t-e)+e;for(let he=0;he<=i;he++){const Y=he/i,Z=Y*u+c,X=Math.sin(Z),pe=Math.cos(Z);A.x=$*X,A.y=-U*n+y,A.z=$*pe,m.push(A.x,A.y,A.z),E.set(X,F,pe).normalize(),p.push(E.x,E.y,E.z),_.push(Y,1-U),T.push(v++)}M.push(T)}for(let N=0;N<i;N++)for(let T=0;T<s;T++){const U=M[T][N],$=M[T+1][N],he=M[T+1][N+1],Y=M[T][N+1];d.push(U,$,Y),d.push($,he,Y),L+=6}h.addGroup(g,L,0),g+=L}function b(E){const A=v,L=new ce,F=new I;let N=0;const T=E===!0?e:t,U=E===!0?1:-1;for(let he=1;he<=i;he++)m.push(0,y*U,0),p.push(0,U,0),_.push(.5,.5),v++;const $=v;for(let he=0;he<=i;he++){const Z=he/i*u+c,X=Math.cos(Z),pe=Math.sin(Z);F.x=T*pe,F.y=y*U,F.z=T*X,m.push(F.x,F.y,F.z),p.push(0,U,0),L.x=X*.5+.5,L.y=pe*.5*U+.5,_.push(L.x,L.y),v++}for(let he=0;he<i;he++){const Y=A+he,Z=$+he;E===!0?d.push(Z,Z+1,Y):d.push(Z+1,Z,Y),N+=3}h.addGroup(g,N,E===!0?1:2),g+=N}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new qs(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class _c extends qs{constructor(e=1,t=1,n=32,i=1,s=!1,o=0,c=Math.PI*2){super(0,e,t,n,i,s,o,c),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:o,thetaLength:c}}static fromJSON(e){return new _c(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Cr extends _t{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],o=[];c(i),h(n),d(),this.setAttribute("position",new We(s,3)),this.setAttribute("normal",new We(s.slice(),3)),this.setAttribute("uv",new We(o,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(S){const b=new I,E=new I,A=new I;for(let L=0;L<t.length;L+=3)_(t[L+0],b),_(t[L+1],E),_(t[L+2],A),u(b,E,A,S)}function u(S,b,E,A){const L=A+1,F=[];for(let N=0;N<=L;N++){F[N]=[];const T=S.clone().lerp(E,N/L),U=b.clone().lerp(E,N/L),$=L-N;for(let he=0;he<=$;he++)he===0&&N===L?F[N][he]=T:F[N][he]=T.clone().lerp(U,he/$)}for(let N=0;N<L;N++)for(let T=0;T<2*(L-N)-1;T++){const U=Math.floor(T/2);T%2===0?(p(F[N][U+1]),p(F[N+1][U]),p(F[N][U])):(p(F[N][U+1]),p(F[N+1][U+1]),p(F[N+1][U]))}}function h(S){const b=new I;for(let E=0;E<s.length;E+=3)b.x=s[E+0],b.y=s[E+1],b.z=s[E+2],b.normalize().multiplyScalar(S),s[E+0]=b.x,s[E+1]=b.y,s[E+2]=b.z}function d(){const S=new I;for(let b=0;b<s.length;b+=3){S.x=s[b+0],S.y=s[b+1],S.z=s[b+2];const E=y(S)/2/Math.PI+.5,A=g(S)/Math.PI+.5;o.push(E,1-A)}v(),m()}function m(){for(let S=0;S<o.length;S+=6){const b=o[S+0],E=o[S+2],A=o[S+4],L=Math.max(b,E,A),F=Math.min(b,E,A);L>.9&&F<.1&&(b<.2&&(o[S+0]+=1),E<.2&&(o[S+2]+=1),A<.2&&(o[S+4]+=1))}}function p(S){s.push(S.x,S.y,S.z)}function _(S,b){const E=S*3;b.x=e[E+0],b.y=e[E+1],b.z=e[E+2]}function v(){const S=new I,b=new I,E=new I,A=new I,L=new ce,F=new ce,N=new ce;for(let T=0,U=0;T<s.length;T+=9,U+=6){S.set(s[T+0],s[T+1],s[T+2]),b.set(s[T+3],s[T+4],s[T+5]),E.set(s[T+6],s[T+7],s[T+8]),L.set(o[U+0],o[U+1]),F.set(o[U+2],o[U+3]),N.set(o[U+4],o[U+5]),A.copy(S).add(b).add(E).divideScalar(3);const $=y(A);M(L,U+0,S,$),M(F,U+2,b,$),M(N,U+4,E,$)}}function M(S,b,E,A){A<0&&S.x===1&&(o[b]=S.x-1),E.x===0&&E.z===0&&(o[b]=A/2/Math.PI+.5)}function y(S){return Math.atan2(S.z,-S.x)}function g(S){return Math.atan2(-S.y,Math.sqrt(S.x*S.x+S.z*S.z))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Cr(e.vertices,e.indices,e.radius,e.details)}}class vc extends Cr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new vc(e.radius,e.detail)}}const ql=new I,Yl=new I,Of=new I,Zl=new $n;class ay extends _t{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(Ns*t),o=e.getIndex(),c=e.getAttribute("position"),u=o?o.count:c.count,h=[0,0,0],d=["a","b","c"],m=new Array(3),p={},_=[];for(let v=0;v<u;v+=3){o?(h[0]=o.getX(v),h[1]=o.getX(v+1),h[2]=o.getX(v+2)):(h[0]=v,h[1]=v+1,h[2]=v+2);const{a:M,b:y,c:g}=Zl;if(M.fromBufferAttribute(c,h[0]),y.fromBufferAttribute(c,h[1]),g.fromBufferAttribute(c,h[2]),Zl.getNormal(Of),m[0]=`${Math.round(M.x*i)},${Math.round(M.y*i)},${Math.round(M.z*i)}`,m[1]=`${Math.round(y.x*i)},${Math.round(y.y*i)},${Math.round(y.z*i)}`,m[2]=`${Math.round(g.x*i)},${Math.round(g.y*i)},${Math.round(g.z*i)}`,!(m[0]===m[1]||m[1]===m[2]||m[2]===m[0]))for(let S=0;S<3;S++){const b=(S+1)%3,E=m[S],A=m[b],L=Zl[d[S]],F=Zl[d[b]],N=`${E}_${A}`,T=`${A}_${E}`;T in p&&p[T]?(Of.dot(p[T].normal)<=s&&(_.push(L.x,L.y,L.z),_.push(F.x,F.y,F.z)),p[T]=null):N in p||(p[N]={index0:h[S],index1:h[b],normal:Of.clone()})}}for(const v in p)if(p[v]){const{index0:M,index1:y}=p[v];ql.fromBufferAttribute(c,M),Yl.fromBufferAttribute(c,y),_.push(ql.x,ql.y,ql.z),_.push(Yl.x,Yl.y,Yl.z)}this.setAttribute("position",new We(_,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class Os extends ic{constructor(e){super(e),this.uuid=li(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new ic().fromJSON(i))}return this}}const d2={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=oy(r,0,i,t,!0);const o=[];if(!s||s.next===s.prev)return o;let c,u,h,d,m,p,_;if(n&&(s=v2(r,e,s,t)),r.length>80*t){c=h=r[0],u=d=r[1];for(let v=t;v<i;v+=t)m=r[v],p=r[v+1],m<c&&(c=m),p<u&&(u=p),m>h&&(h=m),p>d&&(d=p);_=Math.max(h-c,d-u),_=_!==0?32767/_:0}return rc(s,o,t,c,u,_,0),o}};function oy(r,e,t,n,i){let s,o;if(i===C2(r,e,t,n)>0)for(s=e;s<t;s+=n)o=q_(s,r[s],r[s+1],o);else for(s=t-n;s>=e;s-=n)o=q_(s,r[s],r[s+1],o);return o&&Vu(o,o.next)&&(ac(o),o=o.next),o}function Hs(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(Vu(t,t.next)||Zt(t.prev,t,t.next)===0)){if(ac(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function rc(r,e,t,n,i,s,o){if(!r)return;!o&&s&&S2(r,n,i,s);let c=r,u,h;for(;r.prev!==r.next;){if(u=r.prev,h=r.next,s?m2(r,n,i,s):p2(r)){e.push(u.i/t|0),e.push(r.i/t|0),e.push(h.i/t|0),ac(r),r=h.next,c=h.next;continue}if(r=h,r===c){o?o===1?(r=g2(Hs(r),e,t),rc(r,e,t,n,i,s,2)):o===2&&_2(r,e,t,n,i,s):rc(Hs(r),e,t,n,i,s,1);break}}}function p2(r){const e=r.prev,t=r,n=r.next;if(Zt(e,t,n)>=0)return!1;const i=e.x,s=t.x,o=n.x,c=e.y,u=t.y,h=n.y,d=i<s?i<o?i:o:s<o?s:o,m=c<u?c<h?c:h:u<h?u:h,p=i>s?i>o?i:o:s>o?s:o,_=c>u?c>h?c:h:u>h?u:h;let v=n.next;for(;v!==e;){if(v.x>=d&&v.x<=p&&v.y>=m&&v.y<=_&&Ha(i,c,s,u,o,h,v.x,v.y)&&Zt(v.prev,v,v.next)>=0)return!1;v=v.next}return!0}function m2(r,e,t,n){const i=r.prev,s=r,o=r.next;if(Zt(i,s,o)>=0)return!1;const c=i.x,u=s.x,h=o.x,d=i.y,m=s.y,p=o.y,_=c<u?c<h?c:h:u<h?u:h,v=d<m?d<p?d:p:m<p?m:p,M=c>u?c>h?c:h:u>h?u:h,y=d>m?d>p?d:p:m>p?m:p,g=Ed(_,v,e,t,n),S=Ed(M,y,e,t,n);let b=r.prevZ,E=r.nextZ;for(;b&&b.z>=g&&E&&E.z<=S;){if(b.x>=_&&b.x<=M&&b.y>=v&&b.y<=y&&b!==i&&b!==o&&Ha(c,d,u,m,h,p,b.x,b.y)&&Zt(b.prev,b,b.next)>=0||(b=b.prevZ,E.x>=_&&E.x<=M&&E.y>=v&&E.y<=y&&E!==i&&E!==o&&Ha(c,d,u,m,h,p,E.x,E.y)&&Zt(E.prev,E,E.next)>=0))return!1;E=E.nextZ}for(;b&&b.z>=g;){if(b.x>=_&&b.x<=M&&b.y>=v&&b.y<=y&&b!==i&&b!==o&&Ha(c,d,u,m,h,p,b.x,b.y)&&Zt(b.prev,b,b.next)>=0)return!1;b=b.prevZ}for(;E&&E.z<=S;){if(E.x>=_&&E.x<=M&&E.y>=v&&E.y<=y&&E!==i&&E!==o&&Ha(c,d,u,m,h,p,E.x,E.y)&&Zt(E.prev,E,E.next)>=0)return!1;E=E.nextZ}return!0}function g2(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!Vu(i,s)&&cy(i,n,n.next,s)&&sc(i,s)&&sc(s,i)&&(e.push(i.i/t|0),e.push(n.i/t|0),e.push(s.i/t|0),ac(n),ac(n.next),n=r=s),n=n.next}while(n!==r);return Hs(n)}function _2(r,e,t,n,i,s){let o=r;do{let c=o.next.next;for(;c!==o.prev;){if(o.i!==c.i&&T2(o,c)){let u=ly(o,c);o=Hs(o,o.next),u=Hs(u,u.next),rc(o,e,t,n,i,s,0),rc(u,e,t,n,i,s,0);return}c=c.next}o=o.next}while(o!==r)}function v2(r,e,t,n){const i=[];let s,o,c,u,h;for(s=0,o=e.length;s<o;s++)c=e[s]*n,u=s<o-1?e[s+1]*n:r.length,h=oy(r,c,u,n,!1),h===h.next&&(h.steiner=!0),i.push(E2(h));for(i.sort(y2),s=0;s<i.length;s++)t=x2(i[s],t);return t}function y2(r,e){return r.x-e.x}function x2(r,e){const t=M2(r,e);if(!t)return e;const n=ly(t,r);return Hs(n,n.next),Hs(t,t.next)}function M2(r,e){let t=e,n=-1/0,i;const s=r.x,o=r.y;do{if(o<=t.y&&o>=t.next.y&&t.next.y!==t.y){const p=t.x+(o-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(p<=s&&p>n&&(n=p,i=t.x<t.next.x?t:t.next,p===s))return i}t=t.next}while(t!==e);if(!i)return null;const c=i,u=i.x,h=i.y;let d=1/0,m;t=i;do s>=t.x&&t.x>=u&&s!==t.x&&Ha(o<h?s:n,o,u,h,o<h?n:s,o,t.x,t.y)&&(m=Math.abs(o-t.y)/(s-t.x),sc(t,r)&&(m<d||m===d&&(t.x>i.x||t.x===i.x&&b2(i,t)))&&(i=t,d=m)),t=t.next;while(t!==c);return i}function b2(r,e){return Zt(r.prev,r,e.prev)<0&&Zt(e.next,r,r.next)<0}function S2(r,e,t,n){let i=r;do i.z===0&&(i.z=Ed(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,w2(i)}function w2(r){let e,t,n,i,s,o,c,u,h=1;do{for(t=r,r=null,s=null,o=0;t;){for(o++,n=t,c=0,e=0;e<h&&(c++,n=n.nextZ,!!n);e++);for(u=h;c>0||u>0&&n;)c!==0&&(u===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,c--):(i=n,n=n.nextZ,u--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,h*=2}while(o>1);return r}function Ed(r,e,t,n,i){return r=(r-t)*i|0,e=(e-n)*i|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function E2(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function Ha(r,e,t,n,i,s,o,c){return(i-o)*(e-c)>=(r-o)*(s-c)&&(r-o)*(n-c)>=(t-o)*(e-c)&&(t-o)*(s-c)>=(i-o)*(n-c)}function T2(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!A2(r,e)&&(sc(r,e)&&sc(e,r)&&R2(r,e)&&(Zt(r.prev,r,e.prev)||Zt(r,e.prev,e))||Vu(r,e)&&Zt(r.prev,r,r.next)>0&&Zt(e.prev,e,e.next)>0)}function Zt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function Vu(r,e){return r.x===e.x&&r.y===e.y}function cy(r,e,t,n){const i=Kl(Zt(r,e,t)),s=Kl(Zt(r,e,n)),o=Kl(Zt(t,n,r)),c=Kl(Zt(t,n,e));return!!(i!==s&&o!==c||i===0&&$l(r,t,e)||s===0&&$l(r,n,e)||o===0&&$l(t,r,n)||c===0&&$l(t,e,n))}function $l(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function Kl(r){return r>0?1:r<0?-1:0}function A2(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&cy(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function sc(r,e){return Zt(r.prev,r,r.next)<0?Zt(r,e,r.next)>=0&&Zt(r,r.prev,e)>=0:Zt(r,e,r.prev)<0||Zt(r,r.next,e)<0}function R2(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function ly(r,e){const t=new Td(r.i,r.x,r.y),n=new Td(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function q_(r,e,t,n){const i=new Td(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function ac(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function Td(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function C2(r,e,t,n){let i=0;for(let s=e,o=t-n;s<t;s+=n)i+=(r[o]-r[s])*(r[s+1]+r[o+1]),o=s;return i}class Ki{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return Ki.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];Y_(e),Z_(n,e);let o=e.length;t.forEach(Y_);for(let u=0;u<t.length;u++)i.push(o),o+=t[u].length,Z_(n,t[u]);const c=d2.triangulate(n,i);for(let u=0;u<c.length;u+=3)s.push(c.slice(u,u+3));return s}}function Y_(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function Z_(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class yc extends _t{constructor(e=new Os([new ce(.5,.5),new ce(-.5,.5),new ce(-.5,-.5),new ce(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let c=0,u=e.length;c<u;c++){const h=e[c];o(h)}this.setAttribute("position",new We(i,3)),this.setAttribute("uv",new We(s,2)),this.computeVertexNormals();function o(c){const u=[],h=t.curveSegments!==void 0?t.curveSegments:12,d=t.steps!==void 0?t.steps:1,m=t.depth!==void 0?t.depth:1;let p=t.bevelEnabled!==void 0?t.bevelEnabled:!0,_=t.bevelThickness!==void 0?t.bevelThickness:.2,v=t.bevelSize!==void 0?t.bevelSize:_-.1,M=t.bevelOffset!==void 0?t.bevelOffset:0,y=t.bevelSegments!==void 0?t.bevelSegments:3;const g=t.extrudePath,S=t.UVGenerator!==void 0?t.UVGenerator:P2;let b,E=!1,A,L,F,N;g&&(b=g.getSpacedPoints(d),E=!0,p=!1,A=g.computeFrenetFrames(d,!1),L=new I,F=new I,N=new I),p||(y=0,_=0,v=0,M=0);const T=c.extractPoints(h);let U=T.shape;const $=T.holes;if(!Ki.isClockWise(U)){U=U.reverse();for(let H=0,we=$.length;H<we;H++){const ie=$[H];Ki.isClockWise(ie)&&($[H]=ie.reverse())}}const Y=Ki.triangulateShape(U,$),Z=U;for(let H=0,we=$.length;H<we;H++){const ie=$[H];U=U.concat(ie)}function X(H,we,ie){return we||console.error("THREE.ExtrudeGeometry: vec does not exist"),H.clone().addScaledVector(we,ie)}const pe=U.length,ne=Y.length;function oe(H,we,ie){let be,fe,De;const Ue=H.x-we.x,Ne=H.y-we.y,Ze=ie.x-H.x,nt=ie.y-H.y,Lt=Ue*Ue+Ne*Ne,O=Ue*nt-Ne*Ze;if(Math.abs(O)>Number.EPSILON){const P=Math.sqrt(Lt),te=Math.sqrt(Ze*Ze+nt*nt),Se=we.x-Ne/P,ye=we.y+Ue/P,z=ie.x-nt/te,de=ie.y+Ze/te,xe=((z-Se)*nt-(de-ye)*Ze)/(Ue*nt-Ne*Ze);be=Se+Ue*xe-H.x,fe=ye+Ne*xe-H.y;const J=be*be+fe*fe;if(J<=2)return new ce(be,fe);De=Math.sqrt(J/2)}else{let P=!1;Ue>Number.EPSILON?Ze>Number.EPSILON&&(P=!0):Ue<-Number.EPSILON?Ze<-Number.EPSILON&&(P=!0):Math.sign(Ne)===Math.sign(nt)&&(P=!0),P?(be=-Ne,fe=Ue,De=Math.sqrt(Lt)):(be=Ue,fe=Ne,De=Math.sqrt(Lt/2))}return new ce(be/De,fe/De)}const me=[];for(let H=0,we=Z.length,ie=we-1,be=H+1;H<we;H++,ie++,be++)ie===we&&(ie=0),be===we&&(be=0),me[H]=oe(Z[H],Z[ie],Z[be]);const _e=[];let Ee,j=me.concat();for(let H=0,we=$.length;H<we;H++){const ie=$[H];Ee=[];for(let be=0,fe=ie.length,De=fe-1,Ue=be+1;be<fe;be++,De++,Ue++)De===fe&&(De=0),Ue===fe&&(Ue=0),Ee[be]=oe(ie[be],ie[De],ie[Ue]);_e.push(Ee),j=j.concat(Ee)}for(let H=0;H<y;H++){const we=H/y,ie=_*Math.cos(we*Math.PI/2),be=v*Math.sin(we*Math.PI/2)+M;for(let fe=0,De=Z.length;fe<De;fe++){const Ue=X(Z[fe],me[fe],be);Ge(Ue.x,Ue.y,-ie)}for(let fe=0,De=$.length;fe<De;fe++){const Ue=$[fe];Ee=_e[fe];for(let Ne=0,Ze=Ue.length;Ne<Ze;Ne++){const nt=X(Ue[Ne],Ee[Ne],be);Ge(nt.x,nt.y,-ie)}}}const ve=v+M;for(let H=0;H<pe;H++){const we=p?X(U[H],j[H],ve):U[H];E?(F.copy(A.normals[0]).multiplyScalar(we.x),L.copy(A.binormals[0]).multiplyScalar(we.y),N.copy(b[0]).add(F).add(L),Ge(N.x,N.y,N.z)):Ge(we.x,we.y,0)}for(let H=1;H<=d;H++)for(let we=0;we<pe;we++){const ie=p?X(U[we],j[we],ve):U[we];E?(F.copy(A.normals[H]).multiplyScalar(ie.x),L.copy(A.binormals[H]).multiplyScalar(ie.y),N.copy(b[H]).add(F).add(L),Ge(N.x,N.y,N.z)):Ge(ie.x,ie.y,m/d*H)}for(let H=y-1;H>=0;H--){const we=H/y,ie=_*Math.cos(we*Math.PI/2),be=v*Math.sin(we*Math.PI/2)+M;for(let fe=0,De=Z.length;fe<De;fe++){const Ue=X(Z[fe],me[fe],be);Ge(Ue.x,Ue.y,m+ie)}for(let fe=0,De=$.length;fe<De;fe++){const Ue=$[fe];Ee=_e[fe];for(let Ne=0,Ze=Ue.length;Ne<Ze;Ne++){const nt=X(Ue[Ne],Ee[Ne],be);E?Ge(nt.x,nt.y+b[d-1].y,b[d-1].x+ie):Ge(nt.x,nt.y,m+ie)}}}Me(),Re();function Me(){const H=i.length/3;if(p){let we=0,ie=pe*we;for(let be=0;be<ne;be++){const fe=Y[be];je(fe[2]+ie,fe[1]+ie,fe[0]+ie)}we=d+y*2,ie=pe*we;for(let be=0;be<ne;be++){const fe=Y[be];je(fe[0]+ie,fe[1]+ie,fe[2]+ie)}}else{for(let we=0;we<ne;we++){const ie=Y[we];je(ie[2],ie[1],ie[0])}for(let we=0;we<ne;we++){const ie=Y[we];je(ie[0]+pe*d,ie[1]+pe*d,ie[2]+pe*d)}}n.addGroup(H,i.length/3-H,0)}function Re(){const H=i.length/3;let we=0;Ie(Z,we),we+=Z.length;for(let ie=0,be=$.length;ie<be;ie++){const fe=$[ie];Ie(fe,we),we+=fe.length}n.addGroup(H,i.length/3-H,1)}function Ie(H,we){let ie=H.length;for(;--ie>=0;){const be=ie;let fe=ie-1;fe<0&&(fe=H.length-1);for(let De=0,Ue=d+y*2;De<Ue;De++){const Ne=pe*De,Ze=pe*(De+1),nt=we+be+Ne,Lt=we+fe+Ne,O=we+fe+Ze,P=we+be+Ze;Ye(nt,Lt,O,P)}}}function Ge(H,we,ie){u.push(H),u.push(we),u.push(ie)}function je(H,we,ie){At(H),At(we),At(ie);const be=i.length/3,fe=S.generateTopUV(n,i,be-3,be-2,be-1);$e(fe[0]),$e(fe[1]),$e(fe[2])}function Ye(H,we,ie,be){At(H),At(we),At(be),At(we),At(ie),At(be);const fe=i.length/3,De=S.generateSideWallUV(n,i,fe-6,fe-3,fe-2,fe-1);$e(De[0]),$e(De[1]),$e(De[3]),$e(De[1]),$e(De[2]),$e(De[3])}function At(H){i.push(u[H*3+0]),i.push(u[H*3+1]),i.push(u[H*3+2])}function $e(H){s.push(H.x),s.push(H.y)}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return L2(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,o=e.shapes.length;s<o;s++){const c=t[e.shapes[s]];n.push(c)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new fp[i.type]().fromJSON(i)),new yc(n,e.options)}}const P2={generateTopUV:function(r,e,t,n,i){const s=e[t*3],o=e[t*3+1],c=e[n*3],u=e[n*3+1],h=e[i*3],d=e[i*3+1];return[new ce(s,o),new ce(c,u),new ce(h,d)]},generateSideWallUV:function(r,e,t,n,i,s){const o=e[t*3],c=e[t*3+1],u=e[t*3+2],h=e[n*3],d=e[n*3+1],m=e[n*3+2],p=e[i*3],_=e[i*3+1],v=e[i*3+2],M=e[s*3],y=e[s*3+1],g=e[s*3+2];return Math.abs(c-d)<Math.abs(o-h)?[new ce(o,1-u),new ce(h,1-m),new ce(p,1-v),new ce(M,1-g)]:[new ce(c,1-u),new ce(d,1-m),new ce(_,1-v),new ce(y,1-g)]}};function L2(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class xc extends Cr{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new xc(e.radius,e.detail)}}class Qa extends Cr{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Qa(e.radius,e.detail)}}class Mc extends _t{constructor(e=.5,t=1,n=32,i=1,s=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:o},n=Math.max(3,n),i=Math.max(1,i);const c=[],u=[],h=[],d=[];let m=e;const p=(t-e)/i,_=new I,v=new ce;for(let M=0;M<=i;M++){for(let y=0;y<=n;y++){const g=s+y/n*o;_.x=m*Math.cos(g),_.y=m*Math.sin(g),u.push(_.x,_.y,_.z),h.push(0,0,1),v.x=(_.x/t+1)/2,v.y=(_.y/t+1)/2,d.push(v.x,v.y)}m+=p}for(let M=0;M<i;M++){const y=M*(n+1);for(let g=0;g<n;g++){const S=g+y,b=S,E=S+n+1,A=S+n+2,L=S+1;c.push(b,E,L),c.push(E,A,L)}}this.setIndex(c),this.setAttribute("position",new We(u,3)),this.setAttribute("normal",new We(h,3)),this.setAttribute("uv",new We(d,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Mc(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class bc extends _t{constructor(e=new Os([new ce(0,.5),new ce(-.5,-.5),new ce(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],o=[];let c=0,u=0;if(Array.isArray(e)===!1)h(e);else for(let d=0;d<e.length;d++)h(e[d]),this.addGroup(c,u,d),c+=u,u=0;this.setIndex(n),this.setAttribute("position",new We(i,3)),this.setAttribute("normal",new We(s,3)),this.setAttribute("uv",new We(o,2));function h(d){const m=i.length/3,p=d.extractPoints(t);let _=p.shape;const v=p.holes;Ki.isClockWise(_)===!1&&(_=_.reverse());for(let y=0,g=v.length;y<g;y++){const S=v[y];Ki.isClockWise(S)===!0&&(v[y]=S.reverse())}const M=Ki.triangulateShape(_,v);for(let y=0,g=v.length;y<g;y++){const S=v[y];_=_.concat(S)}for(let y=0,g=_.length;y<g;y++){const S=_[y];i.push(S.x,S.y,0),s.push(0,0,1),o.push(S.x,S.y)}for(let y=0,g=M.length;y<g;y++){const S=M[y],b=S[0]+m,E=S[1]+m,A=S[2]+m;n.push(b,E,A),u+=3}}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return I2(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const o=t[e.shapes[i]];n.push(o)}return new bc(n,e.curveSegments)}}function I2(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class ja extends _t{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,o=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:o,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(o+c,Math.PI);let h=0;const d=[],m=new I,p=new I,_=[],v=[],M=[],y=[];for(let g=0;g<=n;g++){const S=[],b=g/n;let E=0;g===0&&o===0?E=.5/t:g===n&&u===Math.PI&&(E=-.5/t);for(let A=0;A<=t;A++){const L=A/t;m.x=-e*Math.cos(i+L*s)*Math.sin(o+b*c),m.y=e*Math.cos(o+b*c),m.z=e*Math.sin(i+L*s)*Math.sin(o+b*c),v.push(m.x,m.y,m.z),p.copy(m).normalize(),M.push(p.x,p.y,p.z),y.push(L+E,1-b),S.push(h++)}d.push(S)}for(let g=0;g<n;g++)for(let S=0;S<t;S++){const b=d[g][S+1],E=d[g][S],A=d[g+1][S],L=d[g+1][S+1];(g!==0||o>0)&&_.push(b,E,L),(g!==n-1||u<Math.PI)&&_.push(E,A,L)}this.setIndex(_),this.setAttribute("position",new We(v,3)),this.setAttribute("normal",new We(M,3)),this.setAttribute("uv",new We(y,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new ja(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Sc extends Cr{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Sc(e.radius,e.detail)}}class wc extends _t{constructor(e=1,t=.4,n=12,i=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const o=[],c=[],u=[],h=[],d=new I,m=new I,p=new I;for(let _=0;_<=n;_++)for(let v=0;v<=i;v++){const M=v/i*s,y=_/n*Math.PI*2;m.x=(e+t*Math.cos(y))*Math.cos(M),m.y=(e+t*Math.cos(y))*Math.sin(M),m.z=t*Math.sin(y),c.push(m.x,m.y,m.z),d.x=e*Math.cos(M),d.y=e*Math.sin(M),p.subVectors(m,d).normalize(),u.push(p.x,p.y,p.z),h.push(v/i),h.push(_/n)}for(let _=1;_<=n;_++)for(let v=1;v<=i;v++){const M=(i+1)*_+v-1,y=(i+1)*(_-1)+v-1,g=(i+1)*(_-1)+v,S=(i+1)*_+v;o.push(M,y,S),o.push(y,g,S)}this.setIndex(o),this.setAttribute("position",new We(c,3)),this.setAttribute("normal",new We(u,3)),this.setAttribute("uv",new We(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new wc(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Ec extends _t{constructor(e=1,t=.4,n=64,i=8,s=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:o},n=Math.floor(n),i=Math.floor(i);const c=[],u=[],h=[],d=[],m=new I,p=new I,_=new I,v=new I,M=new I,y=new I,g=new I;for(let b=0;b<=n;++b){const E=b/n*s*Math.PI*2;S(E,s,o,e,_),S(E+.01,s,o,e,v),y.subVectors(v,_),g.addVectors(v,_),M.crossVectors(y,g),g.crossVectors(M,y),M.normalize(),g.normalize();for(let A=0;A<=i;++A){const L=A/i*Math.PI*2,F=-t*Math.cos(L),N=t*Math.sin(L);m.x=_.x+(F*g.x+N*M.x),m.y=_.y+(F*g.y+N*M.y),m.z=_.z+(F*g.z+N*M.z),u.push(m.x,m.y,m.z),p.subVectors(m,_).normalize(),h.push(p.x,p.y,p.z),d.push(b/n),d.push(A/i)}}for(let b=1;b<=n;b++)for(let E=1;E<=i;E++){const A=(i+1)*(b-1)+(E-1),L=(i+1)*b+(E-1),F=(i+1)*b+E,N=(i+1)*(b-1)+E;c.push(A,L,N),c.push(L,F,N)}this.setIndex(c),this.setAttribute("position",new We(u,3)),this.setAttribute("normal",new We(h,3)),this.setAttribute("uv",new We(d,2));function S(b,E,A,L,F){const N=Math.cos(b),T=Math.sin(b),U=A/E*b,$=Math.cos(U);F.x=L*(2+$)*.5*N,F.y=L*(2+$)*T*.5,F.z=L*Math.sin(U)*.5}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Ec(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Tc extends _t{constructor(e=new up(new I(-1,-1,0),new I(-1,1,0),new I(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const o=e.computeFrenetFrames(t,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const c=new I,u=new I,h=new ce;let d=new I;const m=[],p=[],_=[],v=[];M(),this.setIndex(v),this.setAttribute("position",new We(m,3)),this.setAttribute("normal",new We(p,3)),this.setAttribute("uv",new We(_,2));function M(){for(let b=0;b<t;b++)y(b);y(s===!1?t:0),S(),g()}function y(b){d=e.getPointAt(b/t,d);const E=o.normals[b],A=o.binormals[b];for(let L=0;L<=i;L++){const F=L/i*Math.PI*2,N=Math.sin(F),T=-Math.cos(F);u.x=T*E.x+N*A.x,u.y=T*E.y+N*A.y,u.z=T*E.z+N*A.z,u.normalize(),p.push(u.x,u.y,u.z),c.x=d.x+n*u.x,c.y=d.y+n*u.y,c.z=d.z+n*u.z,m.push(c.x,c.y,c.z)}}function g(){for(let b=1;b<=t;b++)for(let E=1;E<=i;E++){const A=(i+1)*(b-1)+(E-1),L=(i+1)*b+(E-1),F=(i+1)*b+E,N=(i+1)*(b-1)+E;v.push(A,L,N),v.push(L,F,N)}}function S(){for(let b=0;b<=t;b++)for(let E=0;E<=i;E++)h.x=b/t,h.y=E/i,_.push(h.x,h.y)}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Tc(new fp[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class uy extends _t{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new I,s=new I;if(e.index!==null){const o=e.attributes.position,c=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:c.count,materialIndex:0}]);for(let h=0,d=u.length;h<d;++h){const m=u[h],p=m.start,_=m.count;for(let v=p,M=p+_;v<M;v+=3)for(let y=0;y<3;y++){const g=c.getX(v+y),S=c.getX(v+(y+1)%3);i.fromBufferAttribute(o,g),s.fromBufferAttribute(o,S),$_(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const o=e.attributes.position;for(let c=0,u=o.count/3;c<u;c++)for(let h=0;h<3;h++){const d=3*c+h,m=3*c+(h+1)%3;i.fromBufferAttribute(o,d),s.fromBufferAttribute(o,m),$_(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new We(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function $_(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var K_=Object.freeze({__proto__:null,BoxGeometry:rs,CapsuleGeometry:mc,CircleGeometry:gc,ConeGeometry:_c,CylinderGeometry:qs,DodecahedronGeometry:vc,EdgesGeometry:ay,ExtrudeGeometry:yc,IcosahedronGeometry:xc,LatheGeometry:Ja,OctahedronGeometry:Qa,PlaneGeometry:$a,PolyhedronGeometry:Cr,RingGeometry:Mc,ShapeGeometry:bc,SphereGeometry:ja,TetrahedronGeometry:Sc,TorusGeometry:wc,TorusKnotGeometry:Ec,TubeGeometry:Tc,WireframeGeometry:uy});class hy extends Dn{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new Oe(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class fy extends Qi{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class dp extends Dn{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Oe(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Oe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ns,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class dy extends dp{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ce(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return nn(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new Oe(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new Oe(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Oe(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class Su extends Dn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Oe(16777215),this.specular=new Oe(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Oe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ns,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=hc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class py extends Dn{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Oe(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Oe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ns,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class my extends Dn{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ns,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class gy extends Dn{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new Oe(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Oe(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ns,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=hc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class _y extends Dn{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Oe(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=ns,this.normalScale=new ce(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class vy extends Gn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function bi(r,e,t){return pp(r)?new r.constructor(r.subarray(e,t!==void 0?t:r.length)):r.slice(e,t)}function Us(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function pp(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function yy(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function Ad(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,o=0;o!==n;++s){const c=t[s]*e;for(let u=0;u!==e;++u)i[o++]=r[c+u]}return i}function mp(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let o=s[n];if(o!==void 0)if(Array.isArray(o))do o=s[n],o!==void 0&&(e.push(s.time),t.push.apply(t,o)),s=r[i++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[n],o!==void 0&&(e.push(s.time),o.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do o=s[n],o!==void 0&&(e.push(s.time),t.push(o)),s=r[i++];while(s!==void 0)}function U2(r,e,t,n,i=30){const s=r.clone();s.name=e;const o=[];for(let u=0;u<s.tracks.length;++u){const h=s.tracks[u],d=h.getValueSize(),m=[],p=[];for(let _=0;_<h.times.length;++_){const v=h.times[_]*i;if(!(v<t||v>=n)){m.push(h.times[_]);for(let M=0;M<d;++M)p.push(h.values[_*d+M])}}m.length!==0&&(h.times=Us(m,h.times.constructor),h.values=Us(p,h.values.constructor),o.push(h))}s.tracks=o;let c=1/0;for(let u=0;u<s.tracks.length;++u)c>s.tracks[u].times[0]&&(c=s.tracks[u].times[0]);for(let u=0;u<s.tracks.length;++u)s.tracks[u].shift(-1*c);return s.resetDuration(),s}function D2(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let o=0;o<i;++o){const c=t.tracks[o],u=c.ValueTypeName;if(u==="bool"||u==="string")continue;const h=r.tracks.find(function(g){return g.name===c.name&&g.ValueTypeName===u});if(h===void 0)continue;let d=0;const m=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=m/3);let p=0;const _=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(p=_/3);const v=c.times.length-1;let M;if(s<=c.times[0]){const g=d,S=m-d;M=bi(c.values,g,S)}else if(s>=c.times[v]){const g=v*m+d,S=g+m-d;M=bi(c.values,g,S)}else{const g=c.createInterpolant(),S=d,b=m-d;g.evaluate(s),M=bi(g.resultBuffer,S,b)}u==="quaternion"&&new Un().fromArray(M).normalize().conjugate().toArray(M);const y=h.times.length;for(let g=0;g<y;++g){const S=g*_+p;if(u==="quaternion")Un.multiplyQuaternionsFlat(h.values,S,M,0,h.values,S);else{const b=_-p*2;for(let E=0;E<b;++E)h.values[S+E]-=M[E]}}}return r.blendMode=Xd,r}const N2={arraySlice:bi,convertArray:Us,isTypedArray:pp,getKeyframeOrder:yy,sortedArray:Ad,flattenJSON:mp,subclip:U2,makeClipAdditive:D2};class Ac{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let o;n:{i:if(!(e<i)){for(let c=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(s=i,i=t[++n],e<i)break t}o=t.length;break n}if(!(e>=s)){const c=t[1];e<c&&(n=2,s=c);for(let u=n-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(i=s,s=t[--n-1],e>=s)break t}o=n,n=0;break n}break e}for(;n<o;){const c=n+o>>>1;e<t[c]?o=c:n=c+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let o=0;o!==i;++o)t[o]=n[s+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class xy extends Ac{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Ps,endingEnd:Ps}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,o=e+1,c=i[s],u=i[o];if(c===void 0)switch(this.getSettings_().endingStart){case Ls:s=e,c=2*t-n;break;case Qo:s=i.length-2,c=t+i[s]-i[s+1];break;default:s=e,c=n}if(u===void 0)switch(this.getSettings_().endingEnd){case Ls:o=e,u=2*n-t;break;case Qo:o=1,u=n+i[1]-i[0];break;default:o=e-1,u=t}const h=(n-t)*.5,d=this.valueSize;this._weightPrev=h/(t-c),this._weightNext=h/(u-n),this._offsetPrev=s*d,this._offsetNext=o*d}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,d=this._offsetPrev,m=this._offsetNext,p=this._weightPrev,_=this._weightNext,v=(n-t)/(i-t),M=v*v,y=M*v,g=-p*y+2*p*M-p*v,S=(1+p)*y+(-1.5-2*p)*M+(-.5+p)*v+1,b=(-1-_)*y+(1.5+_)*M+.5*v,E=_*y-_*M;for(let A=0;A!==c;++A)s[A]=g*o[d+A]+S*o[h+A]+b*o[u+A]+E*o[m+A];return s}}class gp extends Ac{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,d=(n-t)/(i-t),m=1-d;for(let p=0;p!==c;++p)s[p]=o[h+p]*m+o[u+p]*d;return s}}class My extends Ac{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class zi{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=Us(t,this.TimeBufferType),this.values=Us(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:Us(e.times,Array),values:Us(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new My(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new gp(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new xy(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Ko:t=this.InterpolantFactoryMethodDiscrete;break;case Jo:t=this.InterpolantFactoryMethodLinear;break;case hu:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Ko;case this.InterpolantFactoryMethodLinear:return Jo;case this.InterpolantFactoryMethodSmooth:return hu}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,o=i-1;for(;s!==i&&n[s]<e;)++s;for(;o!==-1&&n[o]>t;)--o;if(++o,s!==0||o!==i){s>=o&&(o=Math.max(o,1),s=o-1);const c=this.getValueSize();this.times=bi(n,s,o),this.values=bi(this.values,s*c,o*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let c=0;c!==s;c++){const u=n[c];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,u),e=!1;break}if(o!==null&&o>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,u,o),e=!1;break}o=u}if(i!==void 0&&pp(i))for(let c=0,u=i.length;c!==u;++c){const h=i[c];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,h),e=!1;break}}return e}optimize(){const e=bi(this.times),t=bi(this.values),n=this.getValueSize(),i=this.getInterpolation()===hu,s=e.length-1;let o=1;for(let c=1;c<s;++c){let u=!1;const h=e[c],d=e[c+1];if(h!==d&&(c!==1||h!==e[0]))if(i)u=!0;else{const m=c*n,p=m-n,_=m+n;for(let v=0;v!==n;++v){const M=t[m+v];if(M!==t[p+v]||M!==t[_+v]){u=!0;break}}}if(u){if(c!==o){e[o]=e[c];const m=c*n,p=o*n;for(let _=0;_!==n;++_)t[p+_]=t[m+_]}++o}}if(s>0){e[o]=e[s];for(let c=s*n,u=o*n,h=0;h!==n;++h)t[u+h]=t[c+h];++o}return o!==e.length?(this.times=bi(e,0,o),this.values=bi(t,0,o*n)):(this.times=e,this.values=t),this}clone(){const e=bi(this.times,0),t=bi(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}zi.prototype.TimeBufferType=Float32Array;zi.prototype.ValueBufferType=Float32Array;zi.prototype.DefaultInterpolation=Jo;class Ys extends zi{}Ys.prototype.ValueTypeName="bool";Ys.prototype.ValueBufferType=Array;Ys.prototype.DefaultInterpolation=Ko;Ys.prototype.InterpolantFactoryMethodLinear=void 0;Ys.prototype.InterpolantFactoryMethodSmooth=void 0;class _p extends zi{}_p.prototype.ValueTypeName="color";class oc extends zi{}oc.prototype.ValueTypeName="number";class by extends Ac{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,c=this.valueSize,u=(n-t)/(i-t);let h=e*c;for(let d=h+c;h!==d;h+=4)Un.slerpFlat(s,0,o,h-c,o,h,u);return s}}class eo extends zi{InterpolantFactoryMethodLinear(e){return new by(this.times,this.values,this.getValueSize(),e)}}eo.prototype.ValueTypeName="quaternion";eo.prototype.DefaultInterpolation=Jo;eo.prototype.InterpolantFactoryMethodSmooth=void 0;class Zs extends zi{}Zs.prototype.ValueTypeName="string";Zs.prototype.ValueBufferType=Array;Zs.prototype.DefaultInterpolation=Ko;Zs.prototype.InterpolantFactoryMethodLinear=void 0;Zs.prototype.InterpolantFactoryMethodSmooth=void 0;class cc extends zi{}cc.prototype.ValueTypeName="vector";class lc{constructor(e,t=-1,n,i=Lu){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=li(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let o=0,c=n.length;o!==c;++o)t.push(F2(n[o]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,o=n.length;s!==o;++s)t.push(zi.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,o=[];for(let c=0;c<s;c++){let u=[],h=[];u.push((c+s-1)%s,c,(c+1)%s),h.push(0,1,0);const d=yy(u);u=Ad(u,1,d),h=Ad(h,1,d),!i&&u[0]===0&&(u.push(s),h.push(h[0])),o.push(new oc(".morphTargetInfluences["+t[c].name+"]",u,h).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let c=0,u=e.length;c<u;c++){const h=e[c],d=h.name.match(s);if(d&&d.length>1){const m=d[1];let p=i[m];p||(i[m]=p=[]),p.push(h)}}const o=[];for(const c in i)o.push(this.CreateFromMorphTargetSequence(c,i[c],t,n));return o}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(m,p,_,v,M){if(_.length!==0){const y=[],g=[];mp(_,y,g,v),y.length!==0&&M.push(new m(p,y,g))}},i=[],s=e.name||"default",o=e.fps||30,c=e.blendMode;let u=e.length||-1;const h=e.hierarchy||[];for(let m=0;m<h.length;m++){const p=h[m].keys;if(!(!p||p.length===0))if(p[0].morphTargets){const _={};let v;for(v=0;v<p.length;v++)if(p[v].morphTargets)for(let M=0;M<p[v].morphTargets.length;M++)_[p[v].morphTargets[M]]=-1;for(const M in _){const y=[],g=[];for(let S=0;S!==p[v].morphTargets.length;++S){const b=p[v];y.push(b.time),g.push(b.morphTarget===M?1:0)}i.push(new oc(".morphTargetInfluence["+M+"]",y,g))}u=_.length*o}else{const _=".bones["+t[m].name+"]";n(cc,_+".position",p,"pos",i),n(eo,_+".quaternion",p,"rot",i),n(cc,_+".scale",p,"scl",i)}}return i.length===0?null:new this(s,u,i,c)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function O2(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return oc;case"vector":case"vector2":case"vector3":case"vector4":return cc;case"color":return _p;case"quaternion":return eo;case"bool":case"boolean":return Ys;case"string":return Zs}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function F2(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=O2(r.type);if(r.times===void 0){const t=[],n=[];mp(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const ks={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class vp{constructor(e,t,n){const i=this;let s=!1,o=0,c=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(d){c++,s===!1&&i.onStart!==void 0&&i.onStart(d,o,c),s=!0},this.itemEnd=function(d){o++,i.onProgress!==void 0&&i.onProgress(d,o,c),o===c&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(d){i.onError!==void 0&&i.onError(d)},this.resolveURL=function(d){return u?u(d):d},this.setURLModifier=function(d){return u=d,this},this.addHandler=function(d,m){return h.push(d,m),this},this.removeHandler=function(d){const m=h.indexOf(d);return m!==-1&&h.splice(m,2),this},this.getHandler=function(d){for(let m=0,p=h.length;m<p;m+=2){const _=h[m],v=h[m+1];if(_.global&&(_.lastIndex=0),_.test(d))return v}return null}}}const Sy=new vp;class ui{constructor(e){this.manager=e!==void 0?e:Sy,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const yr={};class B2 extends Error{constructor(e,t){super(e),this.response=t}}class Rr extends ui{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=ks.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(yr[e]!==void 0){yr[e].push({onLoad:t,onProgress:n,onError:i});return}yr[e]=[],yr[e].push({onLoad:t,onProgress:n,onError:i});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(o).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const d=yr[e],m=h.body.getReader(),p=h.headers.get("Content-Length")||h.headers.get("X-File-Size"),_=p?parseInt(p):0,v=_!==0;let M=0;const y=new ReadableStream({start(g){S();function S(){m.read().then(({done:b,value:E})=>{if(b)g.close();else{M+=E.byteLength;const A=new ProgressEvent("progress",{lengthComputable:v,loaded:M,total:_});for(let L=0,F=d.length;L<F;L++){const N=d[L];N.onProgress&&N.onProgress(A)}g.enqueue(E),S()}})}}});return new Response(y)}else throw new B2(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(u){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(d=>new DOMParser().parseFromString(d,c));case"json":return h.json();default:if(c===void 0)return h.text();{const m=/charset="?([^;"\s]*)"?/i.exec(c),p=m&&m[1]?m[1].toLowerCase():void 0,_=new TextDecoder(p);return h.arrayBuffer().then(v=>_.decode(v))}}}).then(h=>{ks.add(e,h);const d=yr[e];delete yr[e];for(let m=0,p=d.length;m<p;m++){const _=d[m];_.onLoad&&_.onLoad(h)}}).catch(h=>{const d=yr[e];if(d===void 0)throw this.manager.itemError(e),h;delete yr[e];for(let m=0,p=d.length;m<p;m++){const _=d[m];_.onError&&_.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class z2 extends ui{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Rr(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=lc.parse(e[n]);t.push(i)}return t}}class H2 extends ui{constructor(e){super(e)}load(e,t,n,i){const s=this,o=[],c=new ap,u=new Rr(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(s.withCredentials);let h=0;function d(m){u.load(e[m],function(p){const _=s.parse(p,!0);o[m]={width:_.width,height:_.height,format:_.format,mipmaps:_.mipmaps},h+=1,h===6&&(_.mipmapCount===1&&(c.minFilter=cn),c.image=o,c.format=_.format,c.needsUpdate=!0,t&&t(c))},n,i)}if(Array.isArray(e))for(let m=0,p=e.length;m<p;++m)d(m);else u.load(e,function(m){const p=s.parse(m,!0);if(p.isCubemap){const _=p.mipmaps.length/p.mipmapCount;for(let v=0;v<_;v++){o[v]={mipmaps:[]};for(let M=0;M<p.mipmapCount;M++)o[v].mipmaps.push(p.mipmaps[v*p.mipmapCount+M]),o[v].format=p.format,o[v].width=p.width,o[v].height=p.height}c.image=o}else c.image.width=p.width,c.image.height=p.height,c.mipmaps=p.mipmaps;p.mipmapCount===1&&(c.minFilter=cn),c.format=p.format,c.needsUpdate=!0,t&&t(c)},n,i);return c}}class uc extends ui{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=ks.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const c=nc("img");function u(){d(),ks.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(m){d(),i&&i(m),s.manager.itemError(e),s.manager.itemEnd(e)}function d(){c.removeEventListener("load",u,!1),c.removeEventListener("error",h,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),s.manager.itemStart(e),c.src=e,c}}class k2 extends ui{constructor(e){super(e)}load(e,t,n,i){const s=new pc;s.colorSpace=ut;const o=new uc(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let c=0;function u(h){o.load(e[h],function(d){s.images[h]=d,c++,c===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let h=0;h<e.length;++h)u(h);return s}}class G2 extends ui{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Ga,c=new Rr(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(s.withCredentials),c.load(e,function(u){const h=s.parse(u);h&&(h.image!==void 0?o.image=h.image:h.data!==void 0&&(o.image.width=h.width,o.image.height=h.height,o.image.data=h.data),o.wrapS=h.wrapS!==void 0?h.wrapS:Ln,o.wrapT=h.wrapT!==void 0?h.wrapT:Ln,o.magFilter=h.magFilter!==void 0?h.magFilter:cn,o.minFilter=h.minFilter!==void 0?h.minFilter:cn,o.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.colorSpace!==void 0?o.colorSpace=h.colorSpace:h.encoding!==void 0&&(o.encoding=h.encoding),h.flipY!==void 0&&(o.flipY=h.flipY),h.format!==void 0&&(o.format=h.format),h.type!==void 0&&(o.type=h.type),h.mipmaps!==void 0&&(o.mipmaps=h.mipmaps,o.minFilter=Jr),h.mipmapCount===1&&(o.minFilter=cn),h.generateMipmaps!==void 0&&(o.generateMipmaps=h.generateMipmaps),o.needsUpdate=!0,t&&t(o,h))},n,i),o}}class V2 extends ui{constructor(e){super(e)}load(e,t,n,i){const s=new ln,o=new uc(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(c){s.image=c,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class ss extends Ct{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new Oe(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class wy extends ss{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(Ct.DEFAULT_UP),this.updateMatrix(),this.groundColor=new Oe(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Ff=new at,J_=new I,Q_=new I;class yp{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ce(512,512),this.map=null,this.mapPass=null,this.matrix=new at,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Du,this._frameExtents=new ce(1,1),this._viewportCount=1,this._viewports=[new Dt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;J_.setFromMatrixPosition(e.matrixWorld),t.position.copy(J_),Q_.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Q_),t.updateMatrixWorld(),Ff.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Ff),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Ff)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class W2 extends yp{constructor(){super(new xn(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=Wa*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class Ey extends ss{constructor(e,t,n=0,i=Math.PI/3,s=0,o=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(Ct.DEFAULT_UP),this.updateMatrix(),this.target=new Ct,this.distance=n,this.angle=i,this.penumbra=s,this.decay=o,this.map=null,this.shadow=new W2}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const j_=new at,Io=new I,Bf=new I;class X2 extends yp{constructor(){super(new xn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ce(4,2),this._viewportCount=6,this._viewports=[new Dt(2,1,1,1),new Dt(0,1,1,1),new Dt(3,1,1,1),new Dt(1,1,1,1),new Dt(3,0,1,1),new Dt(1,0,1,1)],this._cubeDirections=[new I(1,0,0),new I(-1,0,0),new I(0,0,1),new I(0,0,-1),new I(0,1,0),new I(0,-1,0)],this._cubeUps=[new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,0,1),new I(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),Io.setFromMatrixPosition(e.matrixWorld),n.position.copy(Io),Bf.copy(n.position),Bf.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Bf),n.updateMatrixWorld(),i.makeTranslation(-Io.x,-Io.y,-Io.z),j_.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(j_)}}class Ty extends ss{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new X2}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class q2 extends yp{constructor(){super(new Nu(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Ay extends ss{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(Ct.DEFAULT_UP),this.updateMatrix(),this.target=new Ct,this.shadow=new q2}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Ry extends ss{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class Cy extends ss{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class Py{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new I)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*i),t.addScaledVector(o[2],.488603*s),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],1.092548*(n*i)),t.addScaledVector(o[5],1.092548*(i*s)),t.addScaledVector(o[6],.315392*(3*s*s-1)),t.addScaledVector(o[7],1.092548*(n*s)),t.addScaledVector(o[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*i),t.addScaledVector(o[2],2*.511664*s),t.addScaledVector(o[3],2*.511664*n),t.addScaledVector(o[4],2*.429043*n*i),t.addScaledVector(o[5],2*.429043*i*s),t.addScaledVector(o[6],.743125*s*s-.247708),t.addScaledVector(o[7],2*.429043*n*s),t.addScaledVector(o[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}class Wu extends ss{constructor(e=new Py,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class Xu extends ui{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,o=new Rr(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=Xu.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Oe().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.anisotropy!==void 0&&(i.anisotropy=e.anisotropy),e.anisotropyRotation!==void 0&&(i.anisotropyRotation=e.anisotropyRotation),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==1&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.forceSinglePass!==void 0&&(i.forceSinglePass=e.forceSinglePass),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const o=e.uniforms[s];switch(i.uniforms[s]={},o.type){case"t":i.uniforms[s].value=n(o.value);break;case"c":i.uniforms[s].value=new Oe().setHex(o.value);break;case"v2":i.uniforms[s].value=new ce().fromArray(o.value);break;case"v3":i.uniforms[s].value=new I().fromArray(o.value);break;case"v4":i.uniforms[s].value=new Dt().fromArray(o.value);break;case"m3":i.uniforms[s].value=new pt().fromArray(o.value);break;case"m4":i.uniforms[s].value=new at().fromArray(o.value);break;default:i.uniforms[s].value=o.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.lights!==void 0&&(i.lights=e.lights),e.clipping!==void 0&&(i.clipping=e.clipping),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new ce().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new ce().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.anisotropyMap!==void 0&&(i.anisotropyMap=n(e.anisotropyMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:hy,SpriteMaterial:ip,RawShaderMaterial:fy,ShaderMaterial:Qi,PointsMaterial:sp,MeshPhysicalMaterial:dy,MeshStandardMaterial:dp,MeshPhongMaterial:Su,MeshToonMaterial:py,MeshNormalMaterial:my,MeshLambertMaterial:gy,MeshDepthMaterial:jd,MeshDistanceMaterial:ep,MeshBasicMaterial:is,MeshMatcapMaterial:_y,LineDashedMaterial:vy,LineBasicMaterial:Gn,Material:Dn};return new t[e]}}class Rd{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class Ly extends _t{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class Iy extends ui{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Rr(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(c){try{t(s.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(_,v){if(t[v]!==void 0)return t[v];const y=_.interleavedBuffers[v],g=s(_,y.buffer),S=Fa(y.type,g),b=new zu(S,y.stride);return b.uuid=y.uuid,t[v]=b,b}function s(_,v){if(n[v]!==void 0)return n[v];const y=_.arrayBuffers[v],g=new Uint32Array(y).buffer;return n[v]=g,g}const o=e.isInstancedBufferGeometry?new Ly:new _t,c=e.data.index;if(c!==void 0){const _=Fa(c.type,c.array);o.setIndex(new Nt(_,1))}const u=e.data.attributes;for(const _ in u){const v=u[_];let M;if(v.isInterleavedBufferAttribute){const y=i(e.data,v.data);M=new zs(y,v.itemSize,v.offset,v.normalized)}else{const y=Fa(v.type,v.array),g=v.isInstancedBufferAttribute?qa:Nt;M=new g(y,v.itemSize,v.normalized)}v.name!==void 0&&(M.name=v.name),v.usage!==void 0&&M.setUsage(v.usage),v.updateRange!==void 0&&(M.updateRange.offset=v.updateRange.offset,M.updateRange.count=v.updateRange.count),o.setAttribute(_,M)}const h=e.data.morphAttributes;if(h)for(const _ in h){const v=h[_],M=[];for(let y=0,g=v.length;y<g;y++){const S=v[y];let b;if(S.isInterleavedBufferAttribute){const E=i(e.data,S.data);b=new zs(E,S.itemSize,S.offset,S.normalized)}else{const E=Fa(S.type,S.array);b=new Nt(E,S.itemSize,S.normalized)}S.name!==void 0&&(b.name=S.name),M.push(b)}o.morphAttributes[_]=M}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const m=e.data.groups||e.data.drawcalls||e.data.offsets;if(m!==void 0)for(let _=0,v=m.length;_!==v;++_){const M=m[_];o.addGroup(M.start,M.count,M.materialIndex)}const p=e.data.boundingSphere;if(p!==void 0){const _=new I;p.center!==void 0&&_.fromArray(p.center),o.boundingSphere=new Fi(_,p.radius)}return e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}}class Y2 extends ui{constructor(e){super(e)}load(e,t,n,i){const s=this,o=this.path===""?Rd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const c=new Rr(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(u){let h=null;try{h=JSON.parse(u)}catch(m){i!==void 0&&i(m),console.error("THREE:ObjectLoader: Can't parse "+e+".",m.message);return}const d=h.metadata;if(d===void 0||d.type===void 0||d.type.toLowerCase()==="geometry"){i!==void 0&&i(new Error("THREE.ObjectLoader: Can't load "+e)),console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?Rd.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new Rr(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const o=await s.loadAsync(e,t),c=JSON.parse(o),u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(c)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),o=this.parseImages(e.images,function(){t!==void 0&&t(h)}),c=this.parseTextures(e.textures,o),u=this.parseMaterials(e.materials,c),h=this.parseObject(e.object,s,u,c,n),d=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,d),t!==void 0){let m=!1;for(const p in o)if(o[p].data instanceof HTMLImageElement){m=!0;break}m===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),o=this.parseTextures(e.textures,s),c=this.parseMaterials(e.materials,o),u=this.parseObject(e.object,i,c,o,t),h=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,h),u}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new Os().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,o=e.length;s<o;s++){const c=new Hu().fromJSON(e[s],i);n[c.uuid]=c}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new Iy;for(let s=0,o=e.length;s<o;s++){let c;const u=e[s];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(u);break;default:u.type in K_?c=K_[u.type].fromJSON(u,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}c.uuid=u.uuid,u.name!==void 0&&(c.name=u.name),u.userData!==void 0&&(c.userData=u.userData),n[u.uuid]=c}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new Xu;s.setTextures(t);for(let o=0,c=e.length;o<c;o++){const u=e[o];n[u.uuid]===void 0&&(n[u.uuid]=s.parse(u)),i[u.uuid]=n[u.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=lc.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function o(u){return n.manager.itemStart(u),s.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}function c(u){if(typeof u=="string"){const h=u,d=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return o(d)}else return u.data?{data:Fa(u.type,u.data),width:u.width,height:u.height}:null}if(e!==void 0&&e.length>0){const u=new vp(t);s=new uc(u),s.setCrossOrigin(this.crossOrigin);for(let h=0,d=e.length;h<d;h++){const m=e[h],p=m.url;if(Array.isArray(p)){const _=[];for(let v=0,M=p.length;v<M;v++){const y=p[v],g=c(y);g!==null&&(g instanceof HTMLImageElement?_.push(g):_.push(new Ga(g.data,g.width,g.height)))}i[m.uuid]=new Is(_)}else{const _=c(m.url);i[m.uuid]=new Is(_)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(o){if(typeof o=="string"){const c=o,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:t.resourcePath+c;return await i.loadAsync(u)}else return o.data?{data:Fa(o.type,o.data),width:o.width,height:o.height}:null}if(e!==void 0&&e.length>0){i=new uc(this.manager),i.setCrossOrigin(this.crossOrigin);for(let o=0,c=e.length;o<c;o++){const u=e[o],h=u.url;if(Array.isArray(h)){const d=[];for(let m=0,p=h.length;m<p;m++){const _=h[m],v=await s(_);v!==null&&(v instanceof HTMLImageElement?d.push(v):d.push(new Ga(v.data,v.width,v.height)))}n[u.uuid]=new Is(d)}else{const d=await s(u.url);n[u.uuid]=new Is(d)}}}return n}parseTextures(e,t){function n(s,o){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),o[s])}const i={};if(e!==void 0)for(let s=0,o=e.length;s<o;s++){const c=e[s];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),t[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const u=t[c.image],h=u.data;let d;Array.isArray(h)?(d=new pc,h.length===6&&(d.needsUpdate=!0)):(h&&h.data?d=new Ga:d=new ln,h&&(d.needsUpdate=!0)),d.source=u,d.uuid=c.uuid,c.name!==void 0&&(d.name=c.name),c.mapping!==void 0&&(d.mapping=n(c.mapping,Z2)),c.channel!==void 0&&(d.channel=c.channel),c.offset!==void 0&&d.offset.fromArray(c.offset),c.repeat!==void 0&&d.repeat.fromArray(c.repeat),c.center!==void 0&&d.center.fromArray(c.center),c.rotation!==void 0&&(d.rotation=c.rotation),c.wrap!==void 0&&(d.wrapS=n(c.wrap[0],e0),d.wrapT=n(c.wrap[1],e0)),c.format!==void 0&&(d.format=c.format),c.internalFormat!==void 0&&(d.internalFormat=c.internalFormat),c.type!==void 0&&(d.type=c.type),c.colorSpace!==void 0&&(d.colorSpace=c.colorSpace),c.encoding!==void 0&&(d.encoding=c.encoding),c.minFilter!==void 0&&(d.minFilter=n(c.minFilter,t0)),c.magFilter!==void 0&&(d.magFilter=n(c.magFilter,t0)),c.anisotropy!==void 0&&(d.anisotropy=c.anisotropy),c.flipY!==void 0&&(d.flipY=c.flipY),c.generateMipmaps!==void 0&&(d.generateMipmaps=c.generateMipmaps),c.premultiplyAlpha!==void 0&&(d.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(d.unpackAlignment=c.unpackAlignment),c.compareFunction!==void 0&&(d.compareFunction=c.compareFunction),c.userData!==void 0&&(d.userData=c.userData),i[c.uuid]=d}return i}parseObject(e,t,n,i,s){let o;function c(p){return t[p]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",p),t[p]}function u(p){if(p!==void 0){if(Array.isArray(p)){const _=[];for(let v=0,M=p.length;v<M;v++){const y=p[v];n[y]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",y),_.push(n[y])}return _}return n[p]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",p),n[p]}}function h(p){return i[p]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",p),i[p]}let d,m;switch(e.type){case"Scene":o=new np,e.background!==void 0&&(Number.isInteger(e.background)?o.background=new Oe(e.background):o.background=h(e.background)),e.environment!==void 0&&(o.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?o.fog=new Bu(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(o.fog=new Fu(e.fog.color,e.fog.density))),e.backgroundBlurriness!==void 0&&(o.backgroundBlurriness=e.backgroundBlurriness),e.backgroundIntensity!==void 0&&(o.backgroundIntensity=e.backgroundIntensity);break;case"PerspectiveCamera":o=new xn(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(o.focus=e.focus),e.zoom!==void 0&&(o.zoom=e.zoom),e.filmGauge!==void 0&&(o.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(o.filmOffset=e.filmOffset),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new Nu(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(o.zoom=e.zoom),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new Ry(e.color,e.intensity);break;case"DirectionalLight":o=new Ay(e.color,e.intensity);break;case"PointLight":o=new Ty(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new Cy(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new Ey(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":o=new wy(e.color,e.groundColor,e.intensity);break;case"LightProbe":o=new Wu().fromJSON(e);break;case"SkinnedMesh":d=c(e.geometry),m=u(e.material),o=new Jv(d,m),e.bindMode!==void 0&&(o.bindMode=e.bindMode),e.bindMatrix!==void 0&&o.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(o.skeleton=e.skeleton);break;case"Mesh":d=c(e.geometry),m=u(e.material),o=new Mn(d,m);break;case"InstancedMesh":d=c(e.geometry),m=u(e.material);const p=e.count,_=e.instanceMatrix,v=e.instanceColor;o=new Qv(d,m,p),o.instanceMatrix=new qa(new Float32Array(_.array),16),v!==void 0&&(o.instanceColor=new qa(new Float32Array(v.array),v.itemSize));break;case"LOD":o=new Kv;break;case"Line":o=new Qr(c(e.geometry),u(e.material));break;case"LineLoop":o=new jv(c(e.geometry),u(e.material));break;case"LineSegments":o=new tr(c(e.geometry),u(e.material));break;case"PointCloud":case"Points":o=new ey(c(e.geometry),u(e.material));break;case"Sprite":o=new $v(u(e.material));break;case"Group":o=new za;break;case"Bone":o=new rp;break;default:o=new Ct}if(o.uuid=e.uuid,e.name!==void 0&&(o.name=e.name),e.matrix!==void 0?(o.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(e.position!==void 0&&o.position.fromArray(e.position),e.rotation!==void 0&&o.rotation.fromArray(e.rotation),e.quaternion!==void 0&&o.quaternion.fromArray(e.quaternion),e.scale!==void 0&&o.scale.fromArray(e.scale)),e.up!==void 0&&o.up.fromArray(e.up),e.castShadow!==void 0&&(o.castShadow=e.castShadow),e.receiveShadow!==void 0&&(o.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(o.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(o.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(o.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(o.visible=e.visible),e.frustumCulled!==void 0&&(o.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(o.renderOrder=e.renderOrder),e.userData!==void 0&&(o.userData=e.userData),e.layers!==void 0&&(o.layers.mask=e.layers),e.children!==void 0){const p=e.children;for(let _=0;_<p.length;_++)o.add(this.parseObject(p[_],t,n,i,s))}if(e.animations!==void 0){const p=e.animations;for(let _=0;_<p.length;_++){const v=p[_];o.animations.push(s[v])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(o.autoUpdate=e.autoUpdate);const p=e.levels;for(let _=0;_<p.length;_++){const v=p[_],M=o.getObjectByProperty("uuid",v.object);M!==void 0&&o.addLevel(M,v.distance,v.hysteresis)}}return o}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const Z2={UVMapping:Cu,CubeReflectionMapping:$r,CubeRefractionMapping:Kr,EquirectangularReflectionMapping:qo,EquirectangularRefractionMapping:Yo,CubeUVReflectionMapping:Ya},e0={RepeatWrapping:Zo,ClampToEdgeWrapping:Ln,MirroredRepeatWrapping:$o},t0={NearestFilter:on,NearestMipmapNearestFilter:xu,NearestMipmapLinearFilter:zo,LinearFilter:cn,LinearMipmapNearestFilter:Bd,LinearMipmapLinearFilter:Jr};class $2 extends ui{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=ks.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader,fetch(e,c).then(function(u){return u.blob()}).then(function(u){return createImageBitmap(u,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(u){ks.add(e,u),t&&t(u),s.manager.itemEnd(e)}).catch(function(u){i&&i(u),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}let Jl;class xp{static getContext(){return Jl===void 0&&(Jl=new(window.AudioContext||window.webkitAudioContext)),Jl}static setContext(e){Jl=e}}class K2 extends ui{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Rr(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(u){try{const h=u.slice(0);xp.getContext().decodeAudioData(h,function(m){t(m)},c)}catch(h){c(h)}},n,i);function c(u){i?i(u):console.error(u),s.manager.itemError(e)}}}class J2 extends Wu{constructor(e,t,n=1){super(void 0,n),this.isHemisphereLightProbe=!0;const i=new Oe().set(e),s=new Oe().set(t),o=new I(i.r,i.g,i.b),c=new I(s.r,s.g,s.b),u=Math.sqrt(Math.PI),h=u*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(c).multiplyScalar(u),this.sh.coefficients[1].copy(o).sub(c).multiplyScalar(h)}}class Q2 extends Wu{constructor(e,t=1){super(void 0,t),this.isAmbientLightProbe=!0;const n=new Oe().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}const n0=new at,i0=new at,ys=new at;class j2{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new xn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new xn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,ys.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,o=t.near*Math.tan(Ns*t.fov*.5)/t.zoom;let c,u;i0.elements[12]=-i,n0.elements[12]=i,c=-o*t.aspect+s,u=o*t.aspect+s,ys.elements[0]=2*t.near/(u-c),ys.elements[8]=(u+c)/(u-c),this.cameraL.projectionMatrix.copy(ys),c=-o*t.aspect-s,u=o*t.aspect-s,ys.elements[0]=2*t.near/(u-c),ys.elements[8]=(u+c)/(u-c),this.cameraR.projectionMatrix.copy(ys)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(i0),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(n0)}}class Mp{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=r0(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=r0();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function r0(){return(typeof performance>"u"?Date:performance).now()}const xs=new I,s0=new Un,eI=new I,Ms=new I;class tI extends Ct{constructor(){super(),this.type="AudioListener",this.context=xp.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new Mp}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(xs,s0,eI),Ms.set(0,0,-1).applyQuaternion(s0),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(xs.x,i),t.positionY.linearRampToValueAtTime(xs.y,i),t.positionZ.linearRampToValueAtTime(xs.z,i),t.forwardX.linearRampToValueAtTime(Ms.x,i),t.forwardY.linearRampToValueAtTime(Ms.y,i),t.forwardZ.linearRampToValueAtTime(Ms.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(xs.x,xs.y,xs.z),t.setOrientation(Ms.x,Ms.y,Ms.z,n.x,n.y,n.z)}}class Uy extends Ct{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const bs=new I,a0=new Un,nI=new I,Ss=new I;class iI extends Uy{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(bs,a0,nI),Ss.set(0,0,1).applyQuaternion(a0);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(bs.x,n),t.positionY.linearRampToValueAtTime(bs.y,n),t.positionZ.linearRampToValueAtTime(bs.z,n),t.orientationX.linearRampToValueAtTime(Ss.x,n),t.orientationY.linearRampToValueAtTime(Ss.y,n),t.orientationZ.linearRampToValueAtTime(Ss.z,n)}else t.setPosition(bs.x,bs.y,bs.z),t.setOrientation(Ss.x,Ss.y,Ss.z)}}class rI{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class Dy{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,o;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let o=this.cumulativeWeight;if(o===0){for(let c=0;c!==i;++c)n[s+c]=n[c];o=t}else{o+=t;const c=t/o;this._mixBufferRegion(n,s,0,c,i)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,o=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const u=t*this._origIndex;this._mixBufferRegion(n,i,u,1-s,t)}o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let u=t,h=t+t;u!==h;++u)if(n[u]!==n[u+t]){c.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,o=i;s!==o;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let o=0;o!==s;++o)e[t+o]=e[n+o]}_slerp(e,t,n,i){Un.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const o=this._workIndex*s;Un.multiplyQuaternionsFlat(e,o,e,t,e,n),Un.slerpFlat(e,t,e,t,e,o,i)}_lerp(e,t,n,i,s){const o=1-i;for(let c=0;c!==s;++c){const u=t+c;e[u]=e[u]*o+e[n+c]*i}}_lerpAdditive(e,t,n,i,s){for(let o=0;o!==s;++o){const c=t+o;e[c]=e[c]+e[n+o]*i}}}const bp="\\[\\]\\.:\\/",sI=new RegExp("["+bp+"]","g"),Sp="[^"+bp+"]",aI="[^"+bp.replace("\\.","")+"]",oI=/((?:WC+[\/:])*)/.source.replace("WC",Sp),cI=/(WCOD+)?/.source.replace("WCOD",aI),lI=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Sp),uI=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Sp),hI=new RegExp("^"+oI+cI+lI+uI+"$"),fI=["material","materials","bones","map"];class dI{constructor(e,t,n){const i=n||Rt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class Rt{constructor(e,t,n){this.path=t,this.parsedPath=n||Rt.parseTrackName(t),this.node=Rt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Rt.Composite(e,t,n):new Rt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(sI,"")}static parseTrackName(e){const t=hI.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);fI.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let o=0;o<s.length;o++){const c=s[o];if(c.name===t||c.uuid===t)return c;const u=n(c.children);if(u)return u}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=Rt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let d=0;d<e.length;d++)if(e[d].name===h){h=d;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const o=e[i];if(o===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}u=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else o.fromArray!==void 0&&o.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(u=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Rt.Composite=dI;Rt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};Rt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};Rt.prototype.GetterByBindingType=[Rt.prototype._getValue_direct,Rt.prototype._getValue_array,Rt.prototype._getValue_arrayElement,Rt.prototype._getValue_toArray];Rt.prototype.SetterByBindingTypeAndVersioning=[[Rt.prototype._setValue_direct,Rt.prototype._setValue_direct_setNeedsUpdate,Rt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Rt.prototype._setValue_array,Rt.prototype._setValue_array_setNeedsUpdate,Rt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Rt.prototype._setValue_arrayElement,Rt.prototype._setValue_arrayElement_setNeedsUpdate,Rt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Rt.prototype._setValue_fromArray,Rt.prototype._setValue_fromArray_setNeedsUpdate,Rt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class pI{constructor(){this.isAnimationObjectGroup=!0,this.uuid=li(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,o=s.length;let c,u=e.length,h=this.nCachedObjects_;for(let d=0,m=arguments.length;d!==m;++d){const p=arguments[d],_=p.uuid;let v=t[_];if(v===void 0){v=u++,t[_]=v,e.push(p);for(let M=0,y=o;M!==y;++M)s[M].push(new Rt(p,n[M],i[M]))}else if(v<h){c=e[v];const M=--h,y=e[M];t[y.uuid]=v,e[v]=y,t[_]=M,e[M]=p;for(let g=0,S=o;g!==S;++g){const b=s[g],E=b[M];let A=b[v];b[v]=E,A===void 0&&(A=new Rt(p,n[g],i[g])),b[M]=A}}else e[v]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let o=0,c=arguments.length;o!==c;++o){const u=arguments[o],h=u.uuid,d=t[h];if(d!==void 0&&d>=s){const m=s++,p=e[m];t[p.uuid]=d,e[d]=p,t[h]=m,e[m]=u;for(let _=0,v=i;_!==v;++_){const M=n[_],y=M[m],g=M[d];M[d]=y,M[m]=g}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,o=e.length;for(let c=0,u=arguments.length;c!==u;++c){const h=arguments[c],d=h.uuid,m=t[d];if(m!==void 0)if(delete t[d],m<s){const p=--s,_=e[p],v=--o,M=e[v];t[_.uuid]=m,e[m]=_,t[M.uuid]=p,e[p]=M,e.pop();for(let y=0,g=i;y!==g;++y){const S=n[y],b=S[p],E=S[v];S[m]=b,S[p]=E,S.pop()}}else{const p=--o,_=e[p];p>0&&(t[_.uuid]=m),e[m]=_,e.pop();for(let v=0,M=i;v!==M;++v){const y=n[v];y[m]=y[p],y.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const o=this._paths,c=this._parsedPaths,u=this._objects,h=u.length,d=this.nCachedObjects_,m=new Array(h);i=s.length,n[e]=i,o.push(e),c.push(t),s.push(m);for(let p=d,_=u.length;p!==_;++p){const v=u[p];m[p]=new Rt(v,e,t)}return m}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,o=this._bindings,c=o.length-1,u=o[c],h=e[c];t[h]=n,o[n]=u,o.pop(),s[n]=s[c],s.pop(),i[n]=i[c],i.pop()}}}class Ny{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,o=s.length,c=new Array(o),u={endingStart:Ps,endingEnd:Ps};for(let h=0;h!==o;++h){const d=s[h].createInterpolant(null);c[h]=d,d.settings=u}this._interpolantSettings=u,this._interpolants=c,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=vv,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,o=s/i,c=i/s;e.warp(1,o,t),this.warp(c,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,o=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const u=c.parameterPositions,h=c.sampleValues;return u[0]=s,u[1]=s+n,h[0]=e/o,h[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const u=(e-s)*n;u<0||n===0?t=0:(this._startTime=null,t=n*u)}t*=this._updateTimeScale(e);const o=this._updateTime(t),c=this._updateWeight(e);if(c>0){const u=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case Xd:for(let d=0,m=u.length;d!==m;++d)u[d].evaluate(o),h[d].accumulateAdditive(c);break;case Lu:default:for(let d=0,m=u.length;d!==m;++d)u[d].evaluate(o),h[d].accumulate(i,c)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const o=n===yv;if(e===0)return s===-1?i:o&&(s&1)===1?t-i:i;if(n===_v){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),i>=t||i<0){const c=Math.floor(i/t);i-=t*c,s+=Math.abs(c);const u=this.repetitions-s;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const h=e<0;this._setEndings(h,!h,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(o&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=Ls,i.endingEnd=Ls):(e?i.endingStart=this.zeroSlopeAtStart?Ls:Ps:i.endingStart=Qo,t?i.endingEnd=this.zeroSlopeAtEnd?Ls:Ps:i.endingEnd=Qo)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let o=this._weightInterpolant;o===null&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const c=o.parameterPositions,u=o.sampleValues;return c[0]=s,u[0]=t,c[1]=s+e,u[1]=n,this}}const mI=new Float32Array(1);class gI extends ji{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,o=e._propertyBindings,c=e._interpolants,u=n.uuid,h=this._bindingsByRootAndName;let d=h[u];d===void 0&&(d={},h[u]=d);for(let m=0;m!==s;++m){const p=i[m],_=p.name;let v=d[_];if(v!==void 0)++v.referenceCount,o[m]=v;else{if(v=o[m],v!==void 0){v._cacheIndex===null&&(++v.referenceCount,this._addInactiveBinding(v,u,_));continue}const M=t&&t._propertyBindings[m].binding.parsedPath;v=new Dy(Rt.create(n,_,M),p.ValueTypeName,p.getValueSize()),++v.referenceCount,this._addInactiveBinding(v,u,_),o[m]=v}c[m].resultBuffer=v.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let o=s[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=o;else{const c=o.knownActions;e._byClipCacheIndex=c.length,c.push(e)}e._cacheIndex=i.length,i.push(e),o.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,o=this._actionsByClip,c=o[s],u=c.knownActions,h=u[u.length-1],d=e._byClipCacheIndex;h._byClipCacheIndex=d,u[d]=h,u.pop(),e._byClipCacheIndex=null;const m=c.actionByRoot,p=(e._localRoot||this._root).uuid;delete m[p],u.length===0&&delete o[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let o=i[t];o===void 0&&(o={},i[t]=o),o[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,o=this._bindingsByRootAndName,c=o[i],u=t[t.length-1],h=e._cacheIndex;u._cacheIndex=h,t[h]=u,t.pop(),delete c[s],Object.keys(c).length===0&&delete o[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new gp(new Float32Array(2),new Float32Array(2),1,mI),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let o=typeof e=="string"?lc.findByName(i,e):e;const c=o!==null?o.uuid:e,u=this._actionsByClip[c];let h=null;if(n===void 0&&(o!==null?n=o.blendMode:n=Lu),u!==void 0){const m=u.actionByRoot[s];if(m!==void 0&&m.blendMode===n)return m;h=u.knownActions[0],o===null&&(o=h._clip)}if(o===null)return null;const d=new Ny(this,o,t,n);return this._bindAction(d,h),this._addInactiveAction(d,c,s),d}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?lc.findByName(n,e):e,o=s?s.uuid:e,c=this._actionsByClip[o];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),o=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,s,o);const c=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)c[h].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const o=s.knownActions;for(let c=0,u=o.length;c!==u;++c){const h=o[c];this._deactivateAction(h);const d=h._cacheIndex,m=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,m._cacheIndex=d,t[d]=m,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const o in n){const c=n[o].actionByRoot,u=c[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const o in s){const c=s[o];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class wp{constructor(e){this.value=e}clone(){return new wp(this.value.clone===void 0?this.value:this.value.clone())}}let _I=0;class vI extends ji{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:_I++}),this.name="",this.usage=ec,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++)this.uniforms.push(t[n].clone());return this}clone(){return new this.constructor().copy(this)}}class yI extends zu{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class xI{constructor(e,t,n,i,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class MI{constructor(e,t,n=0,i=1/0){this.ray=new Za(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new Uu,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return Cd(e,this,n,t),n.sort(o0),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)Cd(e[i],this,n,t);return n.sort(o0),n}}function o0(r,e){return r.distance-e.distance}function Cd(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),n===!0){const i=r.children;for(let s=0,o=i.length;s<o;s++)Cd(i[s],e,t,!0)}}class Pd{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(nn(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class bI{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const c0=new ce;class SI{constructor(e=new ce(1/0,1/0),t=new ce(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=c0.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,c0).distanceTo(e)}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const l0=new I,Ql=new I;class wI{constructor(e=new I,t=new I){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){l0.subVectors(e,this.start),Ql.subVectors(this.end,this.start);const n=Ql.dot(Ql);let s=Ql.dot(l0)/n;return t&&(s=nn(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const u0=new I;class EI extends Ct{constructor(e,t){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t,this.type="SpotLightHelper";const n=new _t,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,c=1,u=32;o<u;o++,c++){const h=o/u*Math.PI*2,d=c/u*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(d),Math.sin(d),1)}n.setAttribute("position",new We(i,3));const s=new Gn({fog:!1,toneMapped:!1});this.cone=new tr(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1);const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),u0.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(u0),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Wr=new I,jl=new at,zf=new at;class TI extends tr{constructor(e){const t=Oy(e),n=new _t,i=[],s=[],o=new Oe(0,0,1),c=new Oe(0,1,0);for(let h=0;h<t.length;h++){const d=t[h];d.parent&&d.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(o.r,o.g,o.b),s.push(c.r,c.g,c.b))}n.setAttribute("position",new We(i,3)),n.setAttribute("color",new We(s,3));const u=new Gn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");zf.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<t.length;s++){const c=t[s];c.parent&&c.parent.isBone&&(jl.multiplyMatrices(zf,c.matrixWorld),Wr.setFromMatrixPosition(jl),i.setXYZ(o,Wr.x,Wr.y,Wr.z),jl.multiplyMatrices(zf,c.parent.matrixWorld),Wr.setFromMatrixPosition(jl),i.setXYZ(o+1,Wr.x,Wr.y,Wr.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function Oy(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,Oy(r.children[t]));return e}class AI extends Mn{constructor(e,t,n){const i=new ja(t,4,2),s=new is({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const RI=new I,h0=new Oe,f0=new Oe;class CI extends Ct{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="HemisphereLightHelper";const i=new Qa(t);i.rotateY(Math.PI*.5),this.material=new is({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),o=new Float32Array(s.count*3);i.setAttribute("color",new Nt(o,3)),this.add(new Mn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");h0.copy(this.light.color),f0.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?h0:f0;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),e.lookAt(RI.setFromMatrixPosition(this.light.matrixWorld).negate())}}class PI extends tr{constructor(e=10,t=10,n=4473924,i=8947848){n=new Oe(n),i=new Oe(i);const s=t/2,o=e/t,c=e/2,u=[],h=[];for(let p=0,_=0,v=-c;p<=t;p++,v+=o){u.push(-c,0,v,c,0,v),u.push(v,0,-c,v,0,c);const M=p===s?n:i;M.toArray(h,_),_+=3,M.toArray(h,_),_+=3,M.toArray(h,_),_+=3,M.toArray(h,_),_+=3}const d=new _t;d.setAttribute("position",new We(u,3)),d.setAttribute("color",new We(h,3));const m=new Gn({vertexColors:!0,toneMapped:!1});super(d,m),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class LI extends tr{constructor(e=10,t=16,n=8,i=64,s=4473924,o=8947848){s=new Oe(s),o=new Oe(o);const c=[],u=[];if(t>1)for(let m=0;m<t;m++){const p=m/t*(Math.PI*2),_=Math.sin(p)*e,v=Math.cos(p)*e;c.push(0,0,0),c.push(_,0,v);const M=m&1?s:o;u.push(M.r,M.g,M.b),u.push(M.r,M.g,M.b)}for(let m=0;m<n;m++){const p=m&1?s:o,_=e-e/n*m;for(let v=0;v<i;v++){let M=v/i*(Math.PI*2),y=Math.sin(M)*_,g=Math.cos(M)*_;c.push(y,0,g),u.push(p.r,p.g,p.b),M=(v+1)/i*(Math.PI*2),y=Math.sin(M)*_,g=Math.cos(M)*_,c.push(y,0,g),u.push(p.r,p.g,p.b)}}const h=new _t;h.setAttribute("position",new We(c,3)),h.setAttribute("color",new We(u,3));const d=new Gn({vertexColors:!0,toneMapped:!1});super(h,d),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const d0=new I,eu=new I,p0=new I;class II extends Ct{constructor(e,t,n){super(),this.light=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,this.type="DirectionalLightHelper",t===void 0&&(t=1);let i=new _t;i.setAttribute("position",new We([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Gn({fog:!1,toneMapped:!1});this.lightPlane=new Qr(i,s),this.add(this.lightPlane),i=new _t,i.setAttribute("position",new We([0,0,0,0,0,1],3)),this.targetLine=new Qr(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),d0.setFromMatrixPosition(this.light.matrixWorld),eu.setFromMatrixPosition(this.light.target.matrixWorld),p0.subVectors(eu,d0),this.lightPlane.lookAt(eu),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(eu),this.targetLine.scale.z=p0.length()}}const tu=new I,Jt=new dc;class UI extends tr{constructor(e){const t=new _t,n=new Gn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],o={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(v,M){u(v),u(M)}function u(v){i.push(0,0,0),s.push(0,0,0),o[v]===void 0&&(o[v]=[]),o[v].push(i.length/3-1)}t.setAttribute("position",new We(i,3)),t.setAttribute("color",new We(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update();const h=new Oe(16755200),d=new Oe(16711680),m=new Oe(43775),p=new Oe(16777215),_=new Oe(3355443);this.setColors(h,d,m,p,_)}setColors(e,t,n,i,s){const c=this.geometry.getAttribute("color");c.setXYZ(0,e.r,e.g,e.b),c.setXYZ(1,e.r,e.g,e.b),c.setXYZ(2,e.r,e.g,e.b),c.setXYZ(3,e.r,e.g,e.b),c.setXYZ(4,e.r,e.g,e.b),c.setXYZ(5,e.r,e.g,e.b),c.setXYZ(6,e.r,e.g,e.b),c.setXYZ(7,e.r,e.g,e.b),c.setXYZ(8,e.r,e.g,e.b),c.setXYZ(9,e.r,e.g,e.b),c.setXYZ(10,e.r,e.g,e.b),c.setXYZ(11,e.r,e.g,e.b),c.setXYZ(12,e.r,e.g,e.b),c.setXYZ(13,e.r,e.g,e.b),c.setXYZ(14,e.r,e.g,e.b),c.setXYZ(15,e.r,e.g,e.b),c.setXYZ(16,e.r,e.g,e.b),c.setXYZ(17,e.r,e.g,e.b),c.setXYZ(18,e.r,e.g,e.b),c.setXYZ(19,e.r,e.g,e.b),c.setXYZ(20,e.r,e.g,e.b),c.setXYZ(21,e.r,e.g,e.b),c.setXYZ(22,e.r,e.g,e.b),c.setXYZ(23,e.r,e.g,e.b),c.setXYZ(24,t.r,t.g,t.b),c.setXYZ(25,t.r,t.g,t.b),c.setXYZ(26,t.r,t.g,t.b),c.setXYZ(27,t.r,t.g,t.b),c.setXYZ(28,t.r,t.g,t.b),c.setXYZ(29,t.r,t.g,t.b),c.setXYZ(30,t.r,t.g,t.b),c.setXYZ(31,t.r,t.g,t.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,s.r,s.g,s.b),c.setXYZ(41,s.r,s.g,s.b),c.setXYZ(42,s.r,s.g,s.b),c.setXYZ(43,s.r,s.g,s.b),c.setXYZ(44,s.r,s.g,s.b),c.setXYZ(45,s.r,s.g,s.b),c.setXYZ(46,s.r,s.g,s.b),c.setXYZ(47,s.r,s.g,s.b),c.setXYZ(48,s.r,s.g,s.b),c.setXYZ(49,s.r,s.g,s.b),c.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;Jt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),an("c",t,e,Jt,0,0,-1),an("t",t,e,Jt,0,0,1),an("n1",t,e,Jt,-n,-i,-1),an("n2",t,e,Jt,n,-i,-1),an("n3",t,e,Jt,-n,i,-1),an("n4",t,e,Jt,n,i,-1),an("f1",t,e,Jt,-n,-i,1),an("f2",t,e,Jt,n,-i,1),an("f3",t,e,Jt,-n,i,1),an("f4",t,e,Jt,n,i,1),an("u1",t,e,Jt,n*.7,i*1.1,-1),an("u2",t,e,Jt,-n*.7,i*1.1,-1),an("u3",t,e,Jt,0,i*2,-1),an("cf1",t,e,Jt,-n,0,1),an("cf2",t,e,Jt,n,0,1),an("cf3",t,e,Jt,0,-i,1),an("cf4",t,e,Jt,0,i,1),an("cn1",t,e,Jt,-n,0,-1),an("cn2",t,e,Jt,n,0,-1),an("cn3",t,e,Jt,0,-i,-1),an("cn4",t,e,Jt,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function an(r,e,t,n,i,s,o){tu.set(i,s,o).unproject(n);const c=e[r];if(c!==void 0){const u=t.getAttribute("position");for(let h=0,d=c.length;h<d;h++)u.setXYZ(c[h],tu.x,tu.y,tu.z)}}const nu=new er;class DI extends tr{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new _t;s.setIndex(new Nt(n,1)),s.setAttribute("position",new Nt(i,3)),super(s,new Gn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&nu.setFromObject(this.object),nu.isEmpty())return;const t=nu.min,n=nu.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class NI extends tr{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new _t;s.setIndex(new Nt(n,1)),s.setAttribute("position",new We(i,3)),super(s,new Gn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class OI extends Qr{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],o=new _t;o.setAttribute("position",new We(s,3)),o.computeBoundingSphere(),super(o,new Gn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new _t;u.setAttribute("position",new We(c,3)),u.computeBoundingSphere(),this.add(new Mn(u,new is({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const m0=new I;let iu,Hf;class FI extends Ct{constructor(e=new I(0,0,1),t=new I(0,0,0),n=1,i=16776960,s=n*.2,o=s*.2){super(),this.type="ArrowHelper",iu===void 0&&(iu=new _t,iu.setAttribute("position",new We([0,0,0,0,1,0],3)),Hf=new qs(0,.5,1,5,1),Hf.translate(0,-.5,0)),this.position.copy(t),this.line=new Qr(iu,new Gn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Mn(Hf,new is({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{m0.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(m0,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class BI extends tr{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new _t;i.setAttribute("position",new We(t,3)),i.setAttribute("color",new We(n,3));const s=new Gn({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new Oe,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class zI{constructor(){this.type="ShapePath",this.color=new Oe,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new ic,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,o){return this.currentPath.bezierCurveTo(e,t,n,i,s,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(g){const S=[];for(let b=0,E=g.length;b<E;b++){const A=g[b],L=new Os;L.curves=A.curves,S.push(L)}return S}function n(g,S){const b=S.length;let E=!1;for(let A=b-1,L=0;L<b;A=L++){let F=S[A],N=S[L],T=N.x-F.x,U=N.y-F.y;if(Math.abs(U)>Number.EPSILON){if(U<0&&(F=S[L],T=-T,N=S[A],U=-U),g.y<F.y||g.y>N.y)continue;if(g.y===F.y){if(g.x===F.x)return!0}else{const $=U*(g.x-F.x)-T*(g.y-F.y);if($===0)return!0;if($<0)continue;E=!E}}else{if(g.y!==F.y)continue;if(N.x<=g.x&&g.x<=F.x||F.x<=g.x&&g.x<=N.x)return!0}}return E}const i=Ki.isClockWise,s=this.subPaths;if(s.length===0)return[];let o,c,u;const h=[];if(s.length===1)return c=s[0],u=new Os,u.curves=c.curves,h.push(u),h;let d=!i(s[0].getPoints());d=e?!d:d;const m=[],p=[];let _=[],v=0,M;p[v]=void 0,_[v]=[];for(let g=0,S=s.length;g<S;g++)c=s[g],M=c.getPoints(),o=i(M),o=e?!o:o,o?(!d&&p[v]&&v++,p[v]={s:new Os,p:M},p[v].s.curves=c.curves,d&&v++,_[v]=[]):_[v].push({h:c,p:M[0]});if(!p[0])return t(s);if(p.length>1){let g=!1,S=0;for(let b=0,E=p.length;b<E;b++)m[b]=[];for(let b=0,E=p.length;b<E;b++){const A=_[b];for(let L=0;L<A.length;L++){const F=A[L];let N=!0;for(let T=0;T<p.length;T++)n(F.p,p[T].p)&&(b!==T&&S++,N?(N=!1,m[T].push(F)):g=!0);N&&m[b].push(F)}}S>0&&g===!1&&(_=m)}let y;for(let g=0,S=p.length;g<S;g++){u=p[g].s,h.push(u),y=_[g];for(let b=0,E=y.length;b<E;b++)u.holes.push(y[b].h)}return h}}class HI extends rs{constructor(e,t,n,i,s,o){console.warn("THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry."),super(e,t,n,i,s,o)}}class kI extends mc{constructor(e,t,n,i){console.warn("THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry."),super(e,t,n,i)}}class GI extends gc{constructor(e,t,n,i){console.warn("THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry."),super(e,t,n,i)}}class VI extends _c{constructor(e,t,n,i,s,o,c){console.warn("THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry."),super(e,t,n,i,s,o,c)}}class WI extends qs{constructor(e,t,n,i,s,o,c,u){console.warn("THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry."),super(e,t,n,i,s,o,c,u)}}class XI extends vc{constructor(e,t){console.warn("THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry."),super(e,t)}}class qI extends yc{constructor(e,t){console.warn("THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry."),super(e,t)}}class YI extends xc{constructor(e,t){console.warn("THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry."),super(e,t)}}class ZI extends Ja{constructor(e,t,n,i){console.warn("THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry."),super(e,t,n,i)}}class $I extends Qa{constructor(e,t){console.warn("THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry."),super(e,t)}}class KI extends $a{constructor(e,t,n,i){console.warn("THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry."),super(e,t,n,i)}}class JI extends Cr{constructor(e,t,n,i){console.warn("THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry."),super(e,t,n,i)}}class QI extends Mc{constructor(e,t,n,i,s,o){console.warn("THREE.RingBufferGeometry has been renamed to THREE.RingGeometry."),super(e,t,n,i,s,o)}}class jI extends bc{constructor(e,t){console.warn("THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry."),super(e,t)}}class eU extends ja{constructor(e,t,n,i,s,o,c){console.warn("THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry."),super(e,t,n,i,s,o,c)}}class tU extends Sc{constructor(e,t){console.warn("THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry."),super(e,t)}}class nU extends wc{constructor(e,t,n,i,s){console.warn("THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry."),super(e,t,n,i,s)}}class iU extends Ec{constructor(e,t,n,i,s,o){console.warn("THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry."),super(e,t,n,i,s,o)}}class rU extends Tc{constructor(e,t,n,i,s){console.warn("THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry."),super(e,t,n,i,s)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Au}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Au);const sU=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Fd,AddEquation:As,AddOperation:iv,AdditiveAnimationBlendMode:Xd,AdditiveBlending:qf,AlphaFormat:uv,AlwaysCompare:Lv,AlwaysDepth:K0,AlwaysStencilFunc:Sv,AmbientLight:Ry,AmbientLightProbe:Q2,AnimationAction:Ny,AnimationClip:lc,AnimationLoader:z2,AnimationMixer:gI,AnimationObjectGroup:pI,AnimationUtils:N2,ArcCurve:ty,ArrayCamera:Xv,ArrowHelper:FI,Audio:Uy,AudioAnalyser:rI,AudioContext:xp,AudioListener:tI,AudioLoader:K2,AxesHelper:BI,BackSide:In,BasicDepthPacking:xv,BasicShadowMap:O0,Bone:rp,BooleanKeyframeTrack:Ys,Box2:SI,Box3:er,Box3Helper:NI,BoxBufferGeometry:HI,BoxGeometry:rs,BoxHelper:DI,BufferAttribute:Nt,BufferGeometry:_t,BufferGeometryLoader:Iy,ByteType:cv,Cache:ks,Camera:dc,CameraHelper:UI,CanvasTexture:s2,CapsuleBufferGeometry:kI,CapsuleGeometry:mc,CatmullRomCurve3:ny,CineonToneMapping:av,CircleBufferGeometry:GI,CircleGeometry:gc,ClampToEdgeWrapping:Ln,Clock:Mp,Color:Oe,ColorKeyframeTrack:_p,ColorManagement:si,CompressedArrayTexture:r2,CompressedTexture:ap,CompressedTextureLoader:H2,ConeBufferGeometry:VI,ConeGeometry:_c,CubeCamera:Fv,CubeReflectionMapping:$r,CubeRefractionMapping:Kr,CubeTexture:pc,CubeTextureLoader:k2,CubeUVReflectionMapping:Ya,CubicBezierCurve:cp,CubicBezierCurve3:iy,CubicInterpolant:xy,CullFaceBack:Xf,CullFaceFront:N0,CullFaceFrontBack:tT,CullFaceNone:D0,Curve:Bi,CurvePath:sy,CustomBlending:F0,CustomToneMapping:ov,CylinderBufferGeometry:WI,CylinderGeometry:qs,Cylindrical:bI,Data3DTexture:$d,DataArrayTexture:Iu,DataTexture:Ga,DataTextureLoader:G2,DataUtils:pA,DecrementStencilOp:dT,DecrementWrapStencilOp:mT,DefaultLoadingManager:Sy,DepthFormat:Yr,DepthStencilFormat:Bs,DepthTexture:qv,DirectionalLight:Ay,DirectionalLightHelper:II,DiscreteInterpolant:My,DisplayP3ColorSpace:qd,DodecahedronBufferGeometry:XI,DodecahedronGeometry:vc,DoubleSide:qi,DstAlphaFactor:W0,DstColorFactor:q0,DynamicCopyUsage:PT,DynamicDrawUsage:wT,DynamicReadUsage:AT,EdgesGeometry:ay,EllipseCurve:ku,EqualCompare:Tv,EqualDepth:Q0,EqualStencilFunc:yT,EquirectangularReflectionMapping:qo,EquirectangularRefractionMapping:Yo,Euler:fc,EventDispatcher:ji,ExtrudeBufferGeometry:qI,ExtrudeGeometry:yc,FileLoader:Rr,Float16BufferAttribute:xA,Float32BufferAttribute:We,Float64BufferAttribute:MA,FloatType:Yi,Fog:Bu,FogExp2:Fu,FramebufferTexture:i2,FrontSide:Ji,Frustum:Du,GLBufferAttribute:xI,GLSL1:IT,GLSL3:xd,GreaterCompare:Rv,GreaterDepth:ev,GreaterEqualCompare:Pv,GreaterEqualDepth:j0,GreaterEqualStencilFunc:ST,GreaterStencilFunc:MT,GridHelper:PI,Group:za,HalfFloatType:Va,HemisphereLight:wy,HemisphereLightHelper:CI,HemisphereLightProbe:J2,IcosahedronBufferGeometry:YI,IcosahedronGeometry:xc,ImageBitmapLoader:$2,ImageLoader:uc,ImageUtils:Zd,IncrementStencilOp:fT,IncrementWrapStencilOp:pT,InstancedBufferAttribute:qa,InstancedBufferGeometry:Ly,InstancedInterleavedBuffer:yI,InstancedMesh:Qv,Int16BufferAttribute:vA,Int32BufferAttribute:yA,Int8BufferAttribute:mA,IntType:zd,InterleavedBuffer:zu,InterleavedBufferAttribute:zs,Interpolant:Ac,InterpolateDiscrete:Ko,InterpolateLinear:Jo,InterpolateSmooth:hu,InvertStencilOp:gT,KeepStencilOp:fu,KeyframeTrack:zi,LOD:Kv,LatheBufferGeometry:ZI,LatheGeometry:Ja,Layers:Uu,LessCompare:Ev,LessDepth:J0,LessEqualCompare:Av,LessEqualDepth:yu,LessEqualStencilFunc:xT,LessStencilFunc:vT,Light:ss,LightProbe:Wu,Line:Qr,Line3:wI,LineBasicMaterial:Gn,LineCurve:Gu,LineCurve3:ry,LineDashedMaterial:vy,LineLoop:jv,LineSegments:tr,LinearEncoding:jo,LinearFilter:cn,LinearInterpolant:gp,LinearMipMapLinearFilter:aT,LinearMipMapNearestFilter:sT,LinearMipmapLinearFilter:Jr,LinearMipmapNearestFilter:Bd,LinearSRGBColorSpace:Ni,LinearToneMapping:rv,Loader:ui,LoaderUtils:Rd,LoadingManager:vp,LoopOnce:_v,LoopPingPong:yv,LoopRepeat:vv,LuminanceAlphaFormat:fv,LuminanceFormat:hv,MOUSE:ws,Material:Dn,MaterialLoader:Xu,MathUtils:qT,Matrix3:pt,Matrix4:at,MaxEquation:Kf,Mesh:Mn,MeshBasicMaterial:is,MeshDepthMaterial:jd,MeshDistanceMaterial:ep,MeshLambertMaterial:gy,MeshMatcapMaterial:_y,MeshNormalMaterial:my,MeshPhongMaterial:Su,MeshPhysicalMaterial:dy,MeshStandardMaterial:dp,MeshToonMaterial:py,MinEquation:$f,MirroredRepeatWrapping:$o,MixOperation:nv,MultiplyBlending:Zf,MultiplyOperation:hc,NearestFilter:on,NearestMipMapLinearFilter:rT,NearestMipMapNearestFilter:iT,NearestMipmapLinearFilter:zo,NearestMipmapNearestFilter:xu,NeverCompare:wv,NeverDepth:$0,NeverStencilFunc:_T,NoBlending:Er,NoColorSpace:Zr,NoToneMapping:$i,NormalAnimationBlendMode:Lu,NormalBlending:Ds,NotEqualCompare:Cv,NotEqualDepth:tv,NotEqualStencilFunc:bT,NumberKeyframeTrack:oc,Object3D:Ct,ObjectLoader:Y2,ObjectSpaceNormalMap:bv,OctahedronBufferGeometry:$I,OctahedronGeometry:Qa,OneFactor:k0,OneMinusDstAlphaFactor:X0,OneMinusDstColorFactor:Y0,OneMinusSrcAlphaFactor:Od,OneMinusSrcColorFactor:V0,OrthographicCamera:Nu,PCFShadowMap:Dd,PCFSoftShadowMap:Ru,PMREMGenerator:bd,Path:ic,PerspectiveCamera:xn,Plane:Xr,PlaneBufferGeometry:KI,PlaneGeometry:$a,PlaneHelper:OI,PointLight:Ty,PointLightHelper:AI,Points:ey,PointsMaterial:sp,PolarGridHelper:LI,PolyhedronBufferGeometry:JI,PolyhedronGeometry:Cr,PositionalAudio:iI,PropertyBinding:Rt,PropertyMixer:Dy,QuadraticBezierCurve:lp,QuadraticBezierCurve3:up,Quaternion:Un,QuaternionKeyframeTrack:eo,QuaternionLinearInterpolant:by,RED_GREEN_RGTC2_Format:vd,RED_RGTC1_Format:gv,REVISION:Au,RGBADepthPacking:Mv,RGBAFormat:oi,RGBAIntegerFormat:Wd,RGBA_ASTC_10x10_Format:pd,RGBA_ASTC_10x5_Format:hd,RGBA_ASTC_10x6_Format:fd,RGBA_ASTC_10x8_Format:dd,RGBA_ASTC_12x10_Format:md,RGBA_ASTC_12x12_Format:gd,RGBA_ASTC_4x4_Format:id,RGBA_ASTC_5x4_Format:rd,RGBA_ASTC_5x5_Format:sd,RGBA_ASTC_6x5_Format:ad,RGBA_ASTC_6x6_Format:od,RGBA_ASTC_8x5_Format:cd,RGBA_ASTC_8x6_Format:ld,RGBA_ASTC_8x8_Format:ud,RGBA_BPTC_Format:uu,RGBA_ETC2_EAC_Format:nd,RGBA_PVRTC_2BPPV1_Format:ed,RGBA_PVRTC_4BPPV1_Format:jf,RGBA_S3TC_DXT1_Format:ou,RGBA_S3TC_DXT3_Format:cu,RGBA_S3TC_DXT5_Format:lu,RGB_ETC1_Format:mv,RGB_ETC2_Format:td,RGB_PVRTC_2BPPV1_Format:Qf,RGB_PVRTC_4BPPV1_Format:Jf,RGB_S3TC_DXT1_Format:au,RGFormat:pv,RGIntegerFormat:Vd,RawShaderMaterial:fy,Ray:Za,Raycaster:MI,RectAreaLight:Cy,RedFormat:dv,RedIntegerFormat:Gd,ReinhardToneMapping:sv,RepeatWrapping:Zo,ReplaceStencilOp:hT,ReverseSubtractEquation:z0,RingBufferGeometry:QI,RingGeometry:Mc,SIGNED_RED_GREEN_RGTC2_Format:yd,SIGNED_RED_RGTC1_Format:_d,SRGBColorSpace:ut,Scene:np,ShaderChunk:dt,ShaderLib:Ui,ShaderMaterial:Qi,ShadowMaterial:hy,Shape:Os,ShapeBufferGeometry:jI,ShapeGeometry:bc,ShapePath:zI,ShapeUtils:Ki,ShortType:lv,Skeleton:Hu,SkeletonHelper:TI,SkinnedMesh:Jv,Source:Is,Sphere:Fi,SphereBufferGeometry:eU,SphereGeometry:ja,Spherical:Pd,SphericalHarmonics3:Py,SplineCurve:hp,SpotLight:Ey,SpotLightHelper:EI,Sprite:$v,SpriteMaterial:ip,SrcAlphaFactor:Nd,SrcAlphaSaturateFactor:Z0,SrcColorFactor:G0,StaticCopyUsage:CT,StaticDrawUsage:ec,StaticReadUsage:TT,StereoCamera:j2,StreamCopyUsage:LT,StreamDrawUsage:ET,StreamReadUsage:RT,StringKeyframeTrack:Zs,SubtractEquation:B0,SubtractiveBlending:Yf,TOUCH:Es,TangentSpaceNormalMap:ns,TetrahedronBufferGeometry:tU,TetrahedronGeometry:Sc,Texture:ln,TextureLoader:V2,TorusBufferGeometry:nU,TorusGeometry:wc,TorusKnotBufferGeometry:iU,TorusKnotGeometry:Ec,Triangle:$n,TriangleFanDrawMode:lT,TriangleStripDrawMode:cT,TrianglesDrawMode:oT,TubeBufferGeometry:rU,TubeGeometry:Tc,TwoPassDoubleSide:nT,UVMapping:Cu,Uint16BufferAttribute:Kd,Uint32BufferAttribute:Jd,Uint8BufferAttribute:gA,Uint8ClampedBufferAttribute:_A,Uniform:wp,UniformsGroup:vI,UniformsLib:Ae,UniformsUtils:Ov,UnsignedByteType:Tr,UnsignedInt248Type:qr,UnsignedIntType:Sr,UnsignedShort4444Type:Hd,UnsignedShort5551Type:kd,UnsignedShortType:Pu,VSMShadowMap:Xi,Vector2:ce,Vector3:I,Vector4:Dt,VectorKeyframeTrack:cc,VideoTexture:n2,WebGL1Renderer:Yv,WebGL3DRenderTarget:iA,WebGLArrayRenderTarget:nA,WebGLCoordinateSystem:Zi,WebGLCubeRenderTarget:Bv,WebGLMultipleRenderTargets:rA,WebGLRenderTarget:Oi,WebGLRenderer:tp,WebGLUtils:Wv,WebGPUCoordinateSystem:tc,WireframeGeometry:uy,WrapAroundEnding:Qo,ZeroCurvatureEnding:Ps,ZeroFactor:H0,ZeroSlopeEnding:Ls,ZeroStencilOp:uT,_SRGBAFormat:Mu,sRGBEncoding:Ar},Symbol.toStringTag,{value:"Module"})),aU=()=>Di("threlte-internal-context");function oU(r){let e;const t=r[9].default,n=Gs(t,r,r[8],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,s){n&&n.m(i,s),e=!0},p(i,[s]){n&&n.p&&(!e||s&256)&&Vs(n,t,i,i[8],e?Xs(t,i[8],s,null):Ws(i[8]),null)},i(i){e||(gt(n,i),e=!0)},o(i){bt(n,i),e=!1},d(i){n&&n.d(i)}}}const g0="threlte-disposable-object-context";function cU(r,e,t){let n,i,{$$slots:s={},$$scope:o}=e;const{collectDisposableObjects:c,addDisposableObjects:u,removeDisposableObjects:h}=aU();let{object:d=void 0}=e,m=d,{dispose:p=void 0}=e;const _=Di(g0);Fs(r,_,y=>t(7,i=y));const v=Si(p??i??!0);Fs(r,v,y=>t(6,n=y)),wr(g0,v);let M=n?c(d):[];return u(M),bn(()=>{h(M)}),r.$$set=y=>{"object"in y&&t(2,d=y.object),"dispose"in y&&t(3,p=y.dispose),"$$scope"in y&&t(8,o=y.$$scope)},r.$$.update=()=>{r.$$.dirty&136&&v.set(p??i??!0),r.$$.dirty&116&&d!==m&&(h(M),t(5,M=n?c(d):[]),u(M),t(4,m=d))},[_,v,d,p,m,M,n,i,o,s]}class lU extends jr{constructor(e){super(),es(this,e,cU,oU,ts,{object:2,dispose:3})}}function uU(r,e){const t=Si(r);let n=r;const i=t.subscribe(c=>n=c);return bn(i),{...t,set:c=>{if(c?.uuid===n?.uuid)return;const u=n;t.set(c),e?.(c,u)},update:c=>{const u=c(n);if(u?.uuid===n?.uuid)return;const h=n;t.set(u),e?.(u,h)}}}const to=()=>Di("threlte"),Fy=()=>Di("threlte-hierarchical-parent-context");function hU(r){let e;const t=r[8].default,n=Gs(t,r,r[7],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,s){n&&n.m(i,s),e=!0},p(i,[s]){n&&n.p&&(!e||s&128)&&Vs(n,t,i,i[7],e?Xs(t,i[7],s,null):Ws(i[7]),null)},i(i){e||(gt(n,i),e=!0)},o(i){bt(n,i),e=!1},d(i){n&&n.d(i)}}}const fU=()=>({onChildMount:Di("threlte-hierarchical-object-on-mount"),onChildDestroy:Di("threlte-hierarchical-object-on-destroy")});function dU(r,e,t){let n,{$$slots:i={},$$scope:s}=e,{object:o=void 0}=e,{children:c=[]}=e,{onChildMount:u=void 0}=e;const h=g=>{c.push(g),t(1,c),u?.(g)};let{onChildDestroy:d=void 0}=e;const m=g=>{const S=c.findIndex(b=>b.uuid===g.uuid);S!==-1&&c.splice(S,1),t(1,c),d?.(g)},{invalidate:p}=to(),_=Fy();Fs(r,_,g=>t(6,n=g));let{parent:v=n}=e;const M=fU();o&&(M.onChildMount?.(o),p("HierarchicalObject: object added"));const y=uU(o,(g,S)=>{S&&(M.onChildDestroy?.(S),p("HierarchicalObject: object added")),g&&(M.onChildMount?.(g),p("HierarchicalObject: object removed"))});return bn(()=>{o&&(M.onChildDestroy?.(o),p("HierarchicalObject: object removed"))}),wr("threlte-hierarchical-object-on-mount",h),wr("threlte-hierarchical-object-on-destroy",m),wr("threlte-hierarchical-parent-context",y),r.$$set=g=>{"object"in g&&t(3,o=g.object),"children"in g&&t(1,c=g.children),"onChildMount"in g&&t(4,u=g.onChildMount),"onChildDestroy"in g&&t(5,d=g.onChildDestroy),"parent"in g&&t(2,v=g.parent),"$$scope"in g&&t(7,s=g.$$scope)},r.$$.update=()=>{r.$$.dirty&64&&t(2,v=n),r.$$.dirty&8&&y.set(o)},[_,c,v,o,u,d,n,s,i]}class pU extends jr{constructor(e){super(),es(this,e,dU,hU,ts,{object:3,children:1,onChildMount:4,onChildDestroy:5,parent:2})}}function mU(r){let e;const t=r[1].default,n=Gs(t,r,r[4],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,s){n&&n.m(i,s),e=!0},p(i,s){n&&n.p&&(!e||s&16)&&Vs(n,t,i,i[4],e?Xs(t,i[4],s,null):Ws(i[4]),null)},i(i){e||(gt(n,i),e=!0)},o(i){bt(n,i),e=!1},d(i){n&&n.d(i)}}}function gU(r){let e,t;return e=new pU({props:{object:r[0],onChildMount:r[2],onChildDestroy:r[3],$$slots:{default:[mU]},$$scope:{ctx:r}}}),{c(){Qt(e.$$.fragment)},l(n){jt(e.$$.fragment,n)},m(n,i){en(e,n,i),t=!0},p(n,[i]){const s={};i&1&&(s.object=n[0]),i&1&&(s.onChildMount=n[2]),i&1&&(s.onChildDestroy=n[3]),i&16&&(s.$$scope={dirty:i,ctx:n}),e.$set(s)},i(n){t||(gt(e.$$.fragment,n),t=!0)},o(n){bt(e.$$.fragment,n),t=!1},d(n){tn(e,n)}}}function _U(r,e,t){let{$$slots:n={},$$scope:i}=e,{object:s}=e;const o=u=>s.add(u),c=u=>s.remove(u);return r.$$set=u=>{"object"in u&&t(0,s=u.object),"$$scope"in u&&t(4,i=u.$$scope)},[s,n,o,c,i]}class vU extends jr{constructor(e){super(),es(this,e,_U,gU,ts,{object:0})}}const By=(r,e)=>{if(e.includes(".")){const t=e.split("."),n=t.pop();for(let i=0;i<t.length;i+=1)r=r[t[i]];return{target:r,key:n}}else return{target:r,key:e}},kf=Symbol("initialValueBeforeAttach"),yU=()=>{const{invalidate:r}=to();let e=!1,t=kf,n,i,s;const o=(u,h,d)=>{if(c(),!d){const m=u;(m?.isMaterial||!1)&&(d="material"),(m?.isBufferGeometry||m?.isGeometry||!1)&&(d="geometry")}if(d){if(typeof d=="function")n=d(h,u);else{const{target:m,key:p}=By(h,d);t=m[p],m[p]=u,i=m,s=p}e=!0,r()}},c=()=>{e&&(n?(n(),n=void 0):i&&s&&t!==kf&&(i[s]=t,t=kf,i=void 0,s=void 0),e=!1,r())};return bn(()=>{c()}),{update:o}},xU=r=>r&&r.isCamera,zy=r=>r&&r.isOrthographicCamera,Hy=r=>r&&r.isPerspectiveCamera,MU=r=>Hy(r)||zy(r),bU=()=>{const{invalidate:r,size:e,camera:t}=to();let n,i;bn(()=>{i?.()});const s=u=>{n&&(zy(n)?(n.left=u.width/-2,n.right=u.width/2,n.top=u.height/2,n.bottom=u.height/-2,n.updateProjectionMatrix(),n.updateMatrixWorld(),r()):Hy(n)&&(n.aspect=u.width/u.height,n.updateProjectionMatrix(),n.updateMatrixWorld(),r()))};return{update:(u,h)=>{if(i?.(),h||!MU(u)){n=void 0;return}n=u,i=e.subscribe(s)},makeDefaultCamera:(u,h)=>{!xU(u)||!h||(t.set(u),r())}}};function ky(){const r=Ld(),e=(n,i)=>{const s=r.$$.callbacks[n];s&&s.forEach(o=>{o(i)})},t=n=>!!r.$$.callbacks[n];return e.hasEventListener=t,e}const SU=()=>{const r=ky(),e=[];let t,n=!1;const i=()=>{e.forEach(c=>c()),e.length=0,r("create",{ref:t,cleanup:c=>{e.push(c)}})},s=o=>{t=o,n&&i()};return Eu(()=>{i(),n=!0}),bn(()=>{e.forEach(o=>o())}),{updateRef:s}},_0=r=>!!r?.addEventListener,wU=()=>{const r=ky(),e=Ld(),t=p=>{p?.type&&r(p.type,p)},n=(p,_)=>{_0(p)&&_.forEach(v=>{p.removeEventListener(v,t)})},i=(p,_)=>{_0(p)&&_.forEach(v=>{p.addEventListener(v,t)})};let s=[],o;const c=Si([]),u=c.subscribe(p=>{n(o,s),i(o,p),s=p});bn(u);const h=Si(),d=h.subscribe(p=>{n(o,s),i(p,s),o=p});return bn(d),bn(()=>{n(o,s)}),Eu(()=>{c.set(Object.keys(e.$$.callbacks))}),{updateRef:p=>{h.set(p)}}},EU=r=>{const t=Di("threlte-plugin-context");if(!t)return;const n=Object.values(t).map(h=>h(r)).filter(Boolean),i=n.flatMap(h=>h.pluginProps??[]);let s=[];return bn(()=>{s.forEach(h=>h())}),{updateRef:h=>{s.forEach(d=>d()),s=[],n.forEach(d=>{const m=d.onRefChange?.(h);m&&s.push(m)})},updateProps:h=>{n.forEach(d=>{d.onPropsChange?.(h)})},updateRestProps:h=>{n.forEach(d=>{d.onRestPropsChange?.(h)})},pluginsProps:i}},TU=new Set(["$$scope","$$slots","type","args","attach","instance"]),AU=new Set(["fov","aspect","near","far","left","right","top","bottom","zoom"]),RU=r=>typeof r=="string"||typeof r=="number"||typeof r=="boolean"||typeof r>"u"||r===null,CU=()=>{const{invalidate:r}=to(),e=new Map,t=(i,s,o,c)=>{if(RU(o)){const d=e.get(s);if(d&&d.instance===i&&d.value===o)return;e.set(s,{instance:i,value:o})}const{key:u,target:h}=By(i,s);if(!Array.isArray(o)&&typeof o=="number"&&typeof h[u]?.setScalar=="function")h[u].setScalar(o);else if(typeof h[u]?.set=="function")Array.isArray(o)?h[u].set(...o):h[u].set(o);else{if(h[u]=o,c.manualCamera)return;AU.has(u)&&(h.isPerspectiveCamera||h.isOrthographicCamera)&&h.updateProjectionMatrix()}};return{updateProps:(i,s,o)=>{for(const c in s)!TU.has(c)&&!o.pluginsProps?.includes(c)&&t(i,c,s[c],o),r()}}},PU=r=>({ref:r&2}),v0=r=>({ref:r[1]}),LU=r=>({ref:r&2}),y0=r=>({ref:r[1]});function x0(r){let e,t;return e=new lU({props:{object:r[1],dispose:r[0]}}),{c(){Qt(e.$$.fragment)},l(n){jt(e.$$.fragment,n)},m(n,i){en(e,n,i),t=!0},p(n,i){const s={};i&2&&(s.object=n[1]),i&1&&(s.dispose=n[0]),e.$set(s)},i(n){t||(gt(e.$$.fragment,n),t=!0)},o(n){bt(e.$$.fragment,n),t=!1},d(n){tn(e,n)}}}function IU(r){let e;const t=r[12].default,n=Gs(t,r,r[13],v0);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,s){n&&n.m(i,s),e=!0},p(i,s){n&&n.p&&(!e||s&8194)&&Vs(n,t,i,i[13],e?Xs(t,i[13],s,PU):Ws(i[13]),v0)},i(i){e||(gt(n,i),e=!0)},o(i){bt(n,i),e=!1},d(i){n&&n.d(i)}}}function UU(r){let e,t;return e=new vU({props:{object:r[1],$$slots:{default:[DU]},$$scope:{ctx:r}}}),{c(){Qt(e.$$.fragment)},l(n){jt(e.$$.fragment,n)},m(n,i){en(e,n,i),t=!0},p(n,i){const s={};i&2&&(s.object=n[1]),i&8194&&(s.$$scope={dirty:i,ctx:n}),e.$set(s)},i(n){t||(gt(e.$$.fragment,n),t=!0)},o(n){bt(e.$$.fragment,n),t=!1},d(n){tn(e,n)}}}function DU(r){let e;const t=r[12].default,n=Gs(t,r,r[13],y0);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,s){n&&n.m(i,s),e=!0},p(i,s){n&&n.p&&(!e||s&8194)&&Vs(n,t,i,i[13],e?Xs(t,i[13],s,LU):Ws(i[13]),y0)},i(i){e||(gt(n,i),e=!0)},o(i){bt(n,i),e=!1},d(i){n&&n.d(i)}}}function NU(r){let e=r[4](r[1]),t,n,i,s,o,c,u=e&&x0(r);const h=[UU,IU],d=[];function m(p,_){return _&2&&(n=null),n==null&&(n=!!p[3](p[1])),n?0:1}return i=m(r,-1),s=d[i]=h[i](r),{c(){u&&u.c(),t=Li(),s.c(),o=pu()},l(p){u&&u.l(p),t=Ii(p),s.l(p),o=pu()},m(p,_){u&&u.m(p,_),kn(p,t,_),d[i].m(p,_),kn(p,o,_),c=!0},p(p,[_]){_&2&&(e=p[4](p[1])),e?u?(u.p(p,_),_&2&&gt(u,1)):(u=x0(p),u.c(),gt(u,1),u.m(t.parentNode,t)):u&&(_u(),bt(u,1,1,()=>{u=null}),mu());let v=i;i=m(p,_),i===v?d[i].p(p,_):(_u(),bt(d[v],1,1,()=>{d[v]=null}),mu(),s=d[i],s?s.p(p,_):(s=d[i]=h[i](p),s.c()),gt(s,1),s.m(o.parentNode,o))},i(p){c||(gt(u),gt(s),c=!0)},o(p){bt(u),bt(s),c=!1},d(p){u&&u.d(p),p&&Tn(t),d[i].d(p),p&&Tn(o)}}}function OU(r,e,t){const n=["is","args","attach","manual","makeDefault","dispose","ref"];let i=gu(e,n),s,{$$slots:o={},$$scope:c}=e,{is:u}=e,{args:h=void 0}=e,{attach:d=void 0}=e,{manual:m=void 0}=e,{makeDefault:p=void 0}=e,{dispose:_=void 0}=e;const v=Di("threlte-hierarchical-parent-context");Fs(r,v,X=>t(11,s=X));const M=X=>typeof X=="function"&&/^\s*class\s+/.test(X.toString()),y=X=>Array.isArray(X);let g=M(u)&&y(h)?new u(...h):M(u)?new u:u;const S=SU();let b=!1;const E=()=>{if(!b){b=!0;return}t(1,g=M(u)&&y(h)?new u(...h):M(u)?new u:u)};let{ref:A=g}=e;const L=Si(g);wr("threlte-hierarchical-parent-context",L);const F=EU({ref:g,props:e}),N=F?.pluginsProps??[],T=CU(),U=bU(),$=yU(),he=wU(),Y=X=>!!X.isObject3D,Z=X=>X.dispose!==void 0;return r.$$set=X=>{t(27,e=Wo(Wo({},e),Vf(X))),t(26,i=gu(e,n)),"is"in X&&t(6,u=X.is),"args"in X&&t(7,h=X.args),"attach"in X&&t(8,d=X.attach),"manual"in X&&t(9,m=X.manual),"makeDefault"in X&&t(10,p=X.makeDefault),"dispose"in X&&t(0,_=X.dispose),"ref"in X&&t(5,A=X.ref),"$$scope"in X&&t(13,c=X.$$scope)},r.$$.update=()=>{r.$$.dirty&2&&S.updateRef(g),r.$$.dirty&192&&E(),r.$$.dirty&2&&t(5,A=g),r.$$.dirty&2&&L.set(g),T.updateProps(g,i,{manualCamera:m,pluginsProps:N}),r.$$.dirty&514&&U.update(g,m),r.$$.dirty&1026&&U.makeDefaultCamera(g,p),r.$$.dirty&2306&&$.update(g,s,d),r.$$.dirty&2&&he.updateRef(g),r.$$.dirty&2&&F?.updateRef(g),F?.updateProps(e),F?.updateRestProps(i)},e=Vf(e),[_,g,v,Y,Z,A,u,h,d,m,p,s,o,c]}let Ep=class extends jr{constructor(e){super(),es(this,e,OU,NU,ts,{is:6,args:7,attach:8,manual:9,makeDefault:10,dispose:0,ref:5})}};const qu=typeof window<"u",FU=()=>{const r=Si({width:0,height:0});let e={width:0,height:0};const t=r.subscribe(o=>e=o);bn(t);let n;const i=()=>{const o=e;if(!n||!n.parentElement)return;const{clientWidth:c,clientHeight:u}=n.parentElement;(c!==o.width||u!==o.height)&&r.set({width:c,height:u})},s=o=>{n=o,i(),window.addEventListener("resize",i)};return qu?(bn(()=>{window.removeEventListener("resize",i)}),{parentSizeAction:s,parentSize:r}):{parentSize:r,parentSizeAction:s}},BU=()=>{wr("threlte-cache",[])},Gy=r=>r.userData,zU=()=>{const r=new xn(75,0,.1,1e3);return Gy(r).threlteDefaultCamera=!0,r.position.z=5,r.lookAt(0,0,0),r},HU=r=>{Tp(r.size,e=>{Gy(k1(r.camera)).threlteDefaultCamera&&r.camera.update(t=>{const n=t;return n.aspect=e.width/e.height,n.updateProjectionMatrix(),r.invalidate("Default camera: aspect ratio changed"),n})})},Tp=(r,e)=>{const t=Id(r,s=>s);let n;const i=t.subscribe(async s=>{n&&n();const o=await e(s);o&&(n=o)});bn(()=>{i(),n&&n()})},xr=r=>{const e=Si(r),t={set:n=>{t.current=n,e.set(n)},subscribe:e.subscribe,update:n=>{const i=n(t.current);t.current=i,e.set(i)},current:r};return t},kU=r=>{const e={debugFrameloop:r.debugFrameloop,frame:0,frameInvalidated:!0,invalidations:{},manualFrameHandlers:new Set,autoFrameHandlers:new Set,allFrameHandlers:new Set,renderHandlers:new Set,advance:!1,dispose:async(o=!1)=>{await G1(),!(!e.shouldDispose&&!o)&&(e.disposableObjects.forEach((c,u)=>{(c===0||o)&&(u?.dispose?.(),e.disposableObjects.delete(u))}),e.shouldDispose=!1)},collectDisposableObjects:(o,c)=>{const u=c??[];return o&&(o?.dispose&&typeof o.dispose=="function"&&o.type!=="Scene"&&u.push(o),Object.entries(o).forEach(([h,d])=>{if(h==="parent"||h==="children"||typeof d!="object")return;const m=d;m?.dispose&&e.collectDisposableObjects(m,u)})),u},addDisposableObjects:o=>{o.forEach(c=>{const u=e.disposableObjects.get(c);u?e.disposableObjects.set(c,u+1):e.disposableObjects.set(c,1)})},removeDisposableObjects:o=>{o.length!==0&&(o.forEach(c=>{const u=e.disposableObjects.get(c);u&&u>0&&e.disposableObjects.set(c,u-1)}),e.shouldDispose=!0)},disposableObjects:new Map,shouldDispose:!1},t={size:Id([r.userSize,r.parentSize],([o,c])=>o||c),clock:new Mp,camera:xr(zU()),scene:new np,renderer:void 0,invalidate:o=>{e.frameInvalidated=!0,e.debugFrameloop&&o&&(e.invalidations[o]=e.invalidations[o]?e.invalidations[o]+1:1)},advance:()=>{e.advance=!0},colorSpace:xr(r.colorSpace),toneMapping:xr(r.toneMapping),dpr:xr(r.dpr),useLegacyLights:xr(r.useLegacyLights),shadows:xr(r.shadows),colorManagementEnabled:xr(r.colorManagementEnabled),frameloop:xr(r.frameloop)},n=xr({});return wr("threlte",t),wr("threlte-internal-context",e),wr("threlte-user-context",n),{ctx:t,internalCtx:e,getCtx:()=>t,getInternalCtx:()=>e}},GU=r=>{if(!qu)return;let e;const t=()=>{r(),e=requestAnimationFrame(t)};t(),bn(()=>{e&&cancelAnimationFrame(e)})},VU=(r,e,t)=>{if(e.allFrameHandlers.size===0)return;if(e.debugFrameloop){let i=0;e.autoFrameHandlers.forEach(s=>{s.debugFrameloopMessage?e.invalidations[s.debugFrameloopMessage]=s.debugFrameloopMessage in e.invalidations?e.invalidations[s.debugFrameloopMessage]+1:1:++i}),i>0&&(e.invalidations.useFrame=e.autoFrameHandlers.size)}Array.from(e.allFrameHandlers).reduce((i,s)=>s.order?!0:i,!1)?Array.from(e.allFrameHandlers).sort((i,s)=>(i.order??0)>(s.order??0)?1:-1).forEach(i=>i.fn(r,t)):e.allFrameHandlers.forEach(i=>i.fn(r,t))},WU=(r,e,t)=>{if(e.renderHandlers.size===0)return;Array.from(e.renderHandlers).reduce((i,s)=>s.order?!0:i,!1)?Array.from(e.renderHandlers).sort((i,s)=>(i.order??0)>(s.order??0)?1:-1).forEach(i=>i.fn(r,t)):e.renderHandlers.forEach(i=>i.fn(r,t))},XU=r=>{r.debugFrameloop&&(r.frame+=1,console.log(`frame: ${r.frame}${Object.keys(r.invalidations).length>0?", requested by ↴":""}`),Object.keys(r.invalidations).length>0&&console.table(r.invalidations),r.invalidations={})},qU=(r,e)=>r.frameloop.current==="always"||r.frameloop.current==="demand"&&(e.frameInvalidated||e.autoFrameHandlers.size>0)||r.frameloop.current==="never"&&e.advance,YU=(r,e)=>{GU(()=>{e.dispose();const t=r.clock.getDelta();VU(r,e,t),qU(r,e)&&(e.renderHandlers.size>0?WU(r,e,t):r.renderer&&r.camera.current&&r.renderer.render(r.scene,r.camera.current),XU(e),e.frameInvalidated=!1,e.advance=!1)})},ZU={srgb:Ar,"srgb-linear":jo,"":jo},$U=r=>r.outputColorSpace!==void 0,KU=r=>{const e=Si(void 0),t=(n,i)=>{r.renderer=new tp({powerPreference:"high-performance",canvas:n,antialias:!0,alpha:!0,...i}),e.set(r.renderer)};return Tp([e,r.size,r.toneMapping,r.colorSpace,r.dpr,r.shadows,r.colorManagementEnabled,r.useLegacyLights],([n,i,s,o,c,u,h,d])=>{if(!n)return;if(n.setSize(i.width,i.height),n.setPixelRatio(c),$U(n))n.outputColorSpace=o;else{const _=ZU[o];_?n.outputEncoding=_:console.warn("No encoding found for colorSpace",o)}n.toneMapping=s,n.shadowMap.enabled=!!u,u&&u!==!0?n.shadowMap.type=u:u===!0&&(n.shadowMap.type=Ru);const m=si;m.enabled!==void 0?m.enabled=h:m.legacyMode!==void 0&&(m.legacyMode=!h);const p=n;d&&p.useLegacyLights!==void 0?p.useLegacyLights=d:p.physicallyCorrectLights!==void 0&&(p.physicallyCorrectLights=!d)}),bn(()=>{r.renderer?.dispose()}),{createRenderer:t}};function M0(r){let e,t;return e=new Ep({props:{is:r[3].ctx.scene,$$slots:{default:[JU]},$$scope:{ctx:r}}}),{c(){Qt(e.$$.fragment)},l(n){jt(e.$$.fragment,n)},m(n,i){en(e,n,i),t=!0},p(n,i){const s={};i&131072&&(s.$$scope={dirty:i,ctx:n}),e.$set(s)},i(n){t||(gt(e.$$.fragment,n),t=!0)},o(n){bt(e.$$.fragment,n),t=!1},d(n){tn(e,n)}}}function JU(r){let e;const t=r[15].default,n=Gs(t,r,r[17],null);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,s){n&&n.m(i,s),e=!0},p(i,s){n&&n.p&&(!e||s&131072)&&Vs(n,t,i,i[17],e?Xs(t,i[17],s,null):Ws(i[17]),null)},i(i){e||(gt(n,i),e=!0)},o(i){bt(n,i),e=!1},d(i){n&&n.d(i)}}}function QU(r){let e,t,n,i,s=r[1]&&M0(r);return{c(){e=A0("canvas"),s&&s.c(),this.h()},l(o){e=R0(o,"CANVAS",{class:!0});var c=C0(e);s&&s.l(c),c.forEach(Tn),this.h()},h(){P0(e,"class","svelte-o3oskp")},m(o,c){kn(o,e,c),s&&s.m(e,null),r[16](e),t=!0,n||(i=V1(r[2].call(null,e)),n=!0)},p(o,[c]){o[1]?s?(s.p(o,c),c&2&&gt(s,1)):(s=M0(o),s.c(),gt(s,1),s.m(e,null)):s&&(_u(),bt(s,1,1,()=>{s=null}),mu())},i(o){t||(gt(s),t=!0)},o(o){bt(s),t=!1},d(o){o&&Tn(e),s&&s.d(),r[16](null),n=!1,i()}}}const b0=new Set;function jU(r,e,t){let{$$slots:n={},$$scope:i}=e,{dpr:s=qu?window.devicePixelRatio:1}=e,{toneMapping:o=Fd}=e,{colorSpace:c="srgb"}=e,{frameloop:u="demand"}=e,{debugFrameloop:h=!1}=e,{shadows:d=Ru}=e,{size:m=void 0}=e,{rendererParameters:p=void 0}=e,{colorManagementEnabled:_=!0}=e,{useLegacyLights:v=!0}=e,M,y=!1;const g=Si(m),{parentSize:S,parentSizeAction:b}=FU(),E=kU({colorSpace:c,toneMapping:o,dpr:s,userSize:g,parentSize:S,debugFrameloop:h,frameloop:u,shadows:d,colorManagementEnabled:_,useLegacyLights:v});BU();const A=E.ctx;HU(A),b0.add(A.invalidate),bn(()=>{b0.delete(A.invalidate)});const{createRenderer:L}=KU(A);YU(E.ctx,E.internalCtx),Eu(()=>{M&&(L(M,p),t(1,y=!0))}),bn(()=>{E.internalCtx.dispose(!0)});function F(N){L0[N?"unshift":"push"](()=>{M=N,t(0,M)})}return r.$$set=N=>{"dpr"in N&&t(4,s=N.dpr),"toneMapping"in N&&t(5,o=N.toneMapping),"colorSpace"in N&&t(6,c=N.colorSpace),"frameloop"in N&&t(7,u=N.frameloop),"debugFrameloop"in N&&t(8,h=N.debugFrameloop),"shadows"in N&&t(9,d=N.shadows),"size"in N&&t(10,m=N.size),"rendererParameters"in N&&t(11,p=N.rendererParameters),"colorManagementEnabled"in N&&t(12,_=N.colorManagementEnabled),"useLegacyLights"in N&&t(13,v=N.useLegacyLights),"$$scope"in N&&t(17,i=N.$$scope)},r.$$.update=()=>{r.$$.dirty&1024&&g.set(m)},[M,y,b,E,s,o,c,u,h,d,m,p,_,v,A,n,F,i]}class eD extends jr{constructor(e){super(),es(this,e,jU,QU,ts,{dpr:4,toneMapping:5,colorSpace:6,frameloop:7,debugFrameloop:8,shadows:9,size:10,rendererParameters:11,colorManagementEnabled:12,useLegacyLights:13,ctx:14})}get ctx(){return this.$$.ctx[14]}}const tD={},nD=(r,e)=>{const t=tD[e]||sU[e];if(!t)throw new Error(`No Three.js module found for ${e}. Did you forget to extend the catalogue?`);return{...r,props:{...r.props,is:t}}},iD=r=>new Proxy(class{},{construct(e,[t]){const n=t;return new Ep(nD(n,r))}}),Hn=new Proxy(class{},{construct(r,[e]){const t=e;return new Ep(t)},get(r,e){return iD(e)}}),rD=(r,e)=>{if(!qu)return{start:()=>{},stop:()=>{},started:q1(!1)};const t=e?.invalidate??!0,n=Di("threlte-internal-context"),i={fn:r,order:e?.order,debugFrameloopMessage:e?.debugFrameloopMessage,invalidate:t},s=Si(!1),o=()=>{t?n.autoFrameHandlers.delete(i):n.manualFrameHandlers.delete(i),n.allFrameHandlers.delete(i),s.set(!1)},c=()=>{t?n.autoFrameHandlers.add(i):n.manualFrameHandlers.add(i),n.allFrameHandlers.add(i),s.set(!0)};return(e?.autostart??!0)&&c(),bn(()=>{o()}),{start:c,stop:o,started:{subscribe:s.subscribe}}};function sD(r,e,t){const n=Di("threlte-user-context");if(!n)throw new Error("No user context store found, did you invoke this function outside of your main <Canvas> component?");return r?r&&!e?Id(n,i=>i[r]):(n.update(i=>{if(r in i){if(!t||t.existing==="skip")return i;if(t.existing==="merge")return Object.assign(i[r],e),i}return i[r]=e,i}),n.current[r]):{subscribe:n.subscribe}}const aD=()=>{const r=Ld(),e=Si(void 0);return Tp(e,t=>{t&&Object.entries(r.$$.callbacks).forEach(n=>{const[i,s]=n;i in t.$$.callbacks&&Array.isArray(t.$$.callbacks[i])?t.$$.callbacks[i].push(...s):t.$$.callbacks[i]=s})}),e};new I;new I;new I;var wu={exports:{}};/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */wu.exports;(function(r,e){(function(){var t,n="4.17.21",i=200,s="Unsupported core-js use. Try https://npms.io/search?q=ponyfill.",o="Expected a function",c="Invalid `variable` option passed into `_.template`",u="__lodash_hash_undefined__",h=500,d="__lodash_placeholder__",m=1,p=2,_=4,v=1,M=2,y=1,g=2,S=4,b=8,E=16,A=32,L=64,F=128,N=256,T=512,U=30,$="...",he=800,Y=16,Z=1,X=2,pe=3,ne=1/0,oe=9007199254740991,me=17976931348623157e292,_e=0/0,Ee=4294967295,j=Ee-1,ve=Ee>>>1,Me=[["ary",F],["bind",y],["bindKey",g],["curry",b],["curryRight",E],["flip",T],["partial",A],["partialRight",L],["rearg",N]],Re="[object Arguments]",Ie="[object Array]",Ge="[object AsyncFunction]",je="[object Boolean]",Ye="[object Date]",At="[object DOMException]",$e="[object Error]",H="[object Function]",we="[object GeneratorFunction]",ie="[object Map]",be="[object Number]",fe="[object Null]",De="[object Object]",Ue="[object Promise]",Ne="[object Proxy]",Ze="[object RegExp]",nt="[object Set]",Lt="[object String]",O="[object Symbol]",P="[object Undefined]",te="[object WeakMap]",Se="[object WeakSet]",ye="[object ArrayBuffer]",z="[object DataView]",de="[object Float32Array]",xe="[object Float64Array]",J="[object Int8Array]",ze="[object Int16Array]",qe="[object Int32Array]",Ve="[object Uint8Array]",He="[object Uint8ClampedArray]",Fe="[object Uint16Array]",Je="[object Uint32Array]",xt=/\b__p \+= '';/g,G=/\b(__p \+=) '' \+/g,Ce=/(__e\(.*?\)|\b__t\)) \+\n'';/g,ee=/&(?:amp|lt|gt|quot|#39);/g,Te=/[&<>"']/g,Le=RegExp(ee.source),Tt=RegExp(Te.source),kt=/<%-([\s\S]+?)%>/g,$t=/<%([\s\S]+?)%>/g,Hi=/<%=([\s\S]+?)%>/g,Gt=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,hi=/^\w*$/,Sn=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,$s=/[\\^$.*+?()[\]{}|]/g,Rc=RegExp($s.source),no=/^\s+/,Ks=/\s/,Cc=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,Js=/\{\n\/\* \[wrapped with (.+)\] \*/,Pc=/,? & /,Yu=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,Zu=/[()=,{}\[\]\/\s]/,$u=/\\(\\)?/g,D=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,K=/\w*$/,re=/^[-+]0x[0-9a-f]+$/i,q=/^0b[01]+$/i,ae=/^\[object .+?Constructor\]$/,ke=/^0o[0-7]+$/i,Ke=/^(?:0|[1-9]\d*)$/,rt=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,it=/($^)/,vt=/['\n\r\u2028\u2029\\]/g,st="\\ud800-\\udfff",lt="\\u0300-\\u036f",Ot="\\ufe20-\\ufe2f",Wt="\\u20d0-\\u20ff",Vn=lt+Ot+Wt,fi="\\u2700-\\u27bf",Xt="a-z\\xdf-\\xf6\\xf8-\\xff",St="\\xac\\xb1\\xd7\\xf7",io="\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf",un="\\u2000-\\u206f",nr=" \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",ro="A-Z\\xc0-\\xd6\\xd8-\\xde",Pr="\\ufe0e\\ufe0f",Qs=St+io+un+nr,fn="['’]",ir="["+st+"]",js="["+Qs+"]",_n="["+Vn+"]",ea="\\d+",Ku="["+fi+"]",so="["+Xt+"]",Ap="[^"+st+Qs+ea+fi+Xt+ro+"]",Ju="\\ud83c[\\udffb-\\udfff]",Vy="(?:"+_n+"|"+Ju+")",Rp="[^"+st+"]",Qu="(?:\\ud83c[\\udde6-\\uddff]){2}",ju="[\\ud800-\\udbff][\\udc00-\\udfff]",ta="["+ro+"]",Cp="\\u200d",Pp="(?:"+so+"|"+Ap+")",Wy="(?:"+ta+"|"+Ap+")",Lp="(?:"+fn+"(?:d|ll|m|re|s|t|ve))?",Ip="(?:"+fn+"(?:D|LL|M|RE|S|T|VE))?",Up=Vy+"?",Dp="["+Pr+"]?",Xy="(?:"+Cp+"(?:"+[Rp,Qu,ju].join("|")+")"+Dp+Up+")*",qy="\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",Yy="\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])",Np=Dp+Up+Xy,Zy="(?:"+[Ku,Qu,ju].join("|")+")"+Np,$y="(?:"+[Rp+_n+"?",_n,Qu,ju,ir].join("|")+")",Ky=RegExp(fn,"g"),Jy=RegExp(_n,"g"),eh=RegExp(Ju+"(?="+Ju+")|"+$y+Np,"g"),Qy=RegExp([ta+"?"+so+"+"+Lp+"(?="+[js,ta,"$"].join("|")+")",Wy+"+"+Ip+"(?="+[js,ta+Pp,"$"].join("|")+")",ta+"?"+Pp+"+"+Lp,ta+"+"+Ip,Yy,qy,ea,Zy].join("|"),"g"),jy=RegExp("["+Cp+st+Vn+Pr+"]"),ex=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,tx=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],nx=-1,zt={};zt[de]=zt[xe]=zt[J]=zt[ze]=zt[qe]=zt[Ve]=zt[He]=zt[Fe]=zt[Je]=!0,zt[Re]=zt[Ie]=zt[ye]=zt[je]=zt[z]=zt[Ye]=zt[$e]=zt[H]=zt[ie]=zt[be]=zt[De]=zt[Ze]=zt[nt]=zt[Lt]=zt[te]=!1;var Bt={};Bt[Re]=Bt[Ie]=Bt[ye]=Bt[z]=Bt[je]=Bt[Ye]=Bt[de]=Bt[xe]=Bt[J]=Bt[ze]=Bt[qe]=Bt[ie]=Bt[be]=Bt[De]=Bt[Ze]=Bt[nt]=Bt[Lt]=Bt[O]=Bt[Ve]=Bt[He]=Bt[Fe]=Bt[Je]=!0,Bt[$e]=Bt[H]=Bt[te]=!1;var ix={À:"A",Á:"A",Â:"A",Ã:"A",Ä:"A",Å:"A",à:"a",á:"a",â:"a",ã:"a",ä:"a",å:"a",Ç:"C",ç:"c",Ð:"D",ð:"d",È:"E",É:"E",Ê:"E",Ë:"E",è:"e",é:"e",ê:"e",ë:"e",Ì:"I",Í:"I",Î:"I",Ï:"I",ì:"i",í:"i",î:"i",ï:"i",Ñ:"N",ñ:"n",Ò:"O",Ó:"O",Ô:"O",Õ:"O",Ö:"O",Ø:"O",ò:"o",ó:"o",ô:"o",õ:"o",ö:"o",ø:"o",Ù:"U",Ú:"U",Û:"U",Ü:"U",ù:"u",ú:"u",û:"u",ü:"u",Ý:"Y",ý:"y",ÿ:"y",Æ:"Ae",æ:"ae",Þ:"Th",þ:"th",ß:"ss",Ā:"A",Ă:"A",Ą:"A",ā:"a",ă:"a",ą:"a",Ć:"C",Ĉ:"C",Ċ:"C",Č:"C",ć:"c",ĉ:"c",ċ:"c",č:"c",Ď:"D",Đ:"D",ď:"d",đ:"d",Ē:"E",Ĕ:"E",Ė:"E",Ę:"E",Ě:"E",ē:"e",ĕ:"e",ė:"e",ę:"e",ě:"e",Ĝ:"G",Ğ:"G",Ġ:"G",Ģ:"G",ĝ:"g",ğ:"g",ġ:"g",ģ:"g",Ĥ:"H",Ħ:"H",ĥ:"h",ħ:"h",Ĩ:"I",Ī:"I",Ĭ:"I",Į:"I",İ:"I",ĩ:"i",ī:"i",ĭ:"i",į:"i",ı:"i",Ĵ:"J",ĵ:"j",Ķ:"K",ķ:"k",ĸ:"k",Ĺ:"L",Ļ:"L",Ľ:"L",Ŀ:"L",Ł:"L",ĺ:"l",ļ:"l",ľ:"l",ŀ:"l",ł:"l",Ń:"N",Ņ:"N",Ň:"N",Ŋ:"N",ń:"n",ņ:"n",ň:"n",ŋ:"n",Ō:"O",Ŏ:"O",Ő:"O",ō:"o",ŏ:"o",ő:"o",Ŕ:"R",Ŗ:"R",Ř:"R",ŕ:"r",ŗ:"r",ř:"r",Ś:"S",Ŝ:"S",Ş:"S",Š:"S",ś:"s",ŝ:"s",ş:"s",š:"s",Ţ:"T",Ť:"T",Ŧ:"T",ţ:"t",ť:"t",ŧ:"t",Ũ:"U",Ū:"U",Ŭ:"U",Ů:"U",Ű:"U",Ų:"U",ũ:"u",ū:"u",ŭ:"u",ů:"u",ű:"u",ų:"u",Ŵ:"W",ŵ:"w",Ŷ:"Y",ŷ:"y",Ÿ:"Y",Ź:"Z",Ż:"Z",Ž:"Z",ź:"z",ż:"z",ž:"z",Ĳ:"IJ",ĳ:"ij",Œ:"Oe",œ:"oe",ŉ:"'n",ſ:"s"},rx={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},sx={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"},ax={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},ox=parseFloat,cx=parseInt,Op=typeof bo=="object"&&bo&&bo.Object===Object&&bo,lx=typeof self=="object"&&self&&self.Object===Object&&self,wn=Op||lx||Function("return this")(),th=e&&!e.nodeType&&e,as=th&&!0&&r&&!r.nodeType&&r,Fp=as&&as.exports===th,nh=Fp&&Op.process,di=function(){try{var V=as&&as.require&&as.require("util").types;return V||nh&&nh.binding&&nh.binding("util")}catch{}}(),Bp=di&&di.isArrayBuffer,zp=di&&di.isDate,Hp=di&&di.isMap,kp=di&&di.isRegExp,Gp=di&&di.isSet,Vp=di&&di.isTypedArray;function Kn(V,se,Q){switch(Q.length){case 0:return V.call(se);case 1:return V.call(se,Q[0]);case 2:return V.call(se,Q[0],Q[1]);case 3:return V.call(se,Q[0],Q[1],Q[2])}return V.apply(se,Q)}function ux(V,se,Q,Be){for(var ot=-1,Pt=V==null?0:V.length;++ot<Pt;){var dn=V[ot];se(Be,dn,Q(dn),V)}return Be}function pi(V,se){for(var Q=-1,Be=V==null?0:V.length;++Q<Be&&se(V[Q],Q,V)!==!1;);return V}function hx(V,se){for(var Q=V==null?0:V.length;Q--&&se(V[Q],Q,V)!==!1;);return V}function Wp(V,se){for(var Q=-1,Be=V==null?0:V.length;++Q<Be;)if(!se(V[Q],Q,V))return!1;return!0}function Lr(V,se){for(var Q=-1,Be=V==null?0:V.length,ot=0,Pt=[];++Q<Be;){var dn=V[Q];se(dn,Q,V)&&(Pt[ot++]=dn)}return Pt}function Lc(V,se){var Q=V==null?0:V.length;return!!Q&&na(V,se,0)>-1}function ih(V,se,Q){for(var Be=-1,ot=V==null?0:V.length;++Be<ot;)if(Q(se,V[Be]))return!0;return!1}function Vt(V,se){for(var Q=-1,Be=V==null?0:V.length,ot=Array(Be);++Q<Be;)ot[Q]=se(V[Q],Q,V);return ot}function Ir(V,se){for(var Q=-1,Be=se.length,ot=V.length;++Q<Be;)V[ot+Q]=se[Q];return V}function rh(V,se,Q,Be){var ot=-1,Pt=V==null?0:V.length;for(Be&&Pt&&(Q=V[++ot]);++ot<Pt;)Q=se(Q,V[ot],ot,V);return Q}function fx(V,se,Q,Be){var ot=V==null?0:V.length;for(Be&&ot&&(Q=V[--ot]);ot--;)Q=se(Q,V[ot],ot,V);return Q}function sh(V,se){for(var Q=-1,Be=V==null?0:V.length;++Q<Be;)if(se(V[Q],Q,V))return!0;return!1}var dx=ah("length");function px(V){return V.split("")}function mx(V){return V.match(Yu)||[]}function Xp(V,se,Q){var Be;return Q(V,function(ot,Pt,dn){if(se(ot,Pt,dn))return Be=Pt,!1}),Be}function Ic(V,se,Q,Be){for(var ot=V.length,Pt=Q+(Be?1:-1);Be?Pt--:++Pt<ot;)if(se(V[Pt],Pt,V))return Pt;return-1}function na(V,se,Q){return se===se?Ax(V,se,Q):Ic(V,qp,Q)}function gx(V,se,Q,Be){for(var ot=Q-1,Pt=V.length;++ot<Pt;)if(Be(V[ot],se))return ot;return-1}function qp(V){return V!==V}function Yp(V,se){var Q=V==null?0:V.length;return Q?ch(V,se)/Q:_e}function ah(V){return function(se){return se==null?t:se[V]}}function oh(V){return function(se){return V==null?t:V[se]}}function Zp(V,se,Q,Be,ot){return ot(V,function(Pt,dn,Ft){Q=Be?(Be=!1,Pt):se(Q,Pt,dn,Ft)}),Q}function _x(V,se){var Q=V.length;for(V.sort(se);Q--;)V[Q]=V[Q].value;return V}function ch(V,se){for(var Q,Be=-1,ot=V.length;++Be<ot;){var Pt=se(V[Be]);Pt!==t&&(Q=Q===t?Pt:Q+Pt)}return Q}function lh(V,se){for(var Q=-1,Be=Array(V);++Q<V;)Be[Q]=se(Q);return Be}function vx(V,se){return Vt(se,function(Q){return[Q,V[Q]]})}function $p(V){return V&&V.slice(0,jp(V)+1).replace(no,"")}function Jn(V){return function(se){return V(se)}}function uh(V,se){return Vt(se,function(Q){return V[Q]})}function ao(V,se){return V.has(se)}function Kp(V,se){for(var Q=-1,Be=V.length;++Q<Be&&na(se,V[Q],0)>-1;);return Q}function Jp(V,se){for(var Q=V.length;Q--&&na(se,V[Q],0)>-1;);return Q}function yx(V,se){for(var Q=V.length,Be=0;Q--;)V[Q]===se&&++Be;return Be}var xx=oh(ix),Mx=oh(rx);function bx(V){return"\\"+ax[V]}function Sx(V,se){return V==null?t:V[se]}function ia(V){return jy.test(V)}function wx(V){return ex.test(V)}function Ex(V){for(var se,Q=[];!(se=V.next()).done;)Q.push(se.value);return Q}function hh(V){var se=-1,Q=Array(V.size);return V.forEach(function(Be,ot){Q[++se]=[ot,Be]}),Q}function Qp(V,se){return function(Q){return V(se(Q))}}function Ur(V,se){for(var Q=-1,Be=V.length,ot=0,Pt=[];++Q<Be;){var dn=V[Q];(dn===se||dn===d)&&(V[Q]=d,Pt[ot++]=Q)}return Pt}function Uc(V){var se=-1,Q=Array(V.size);return V.forEach(function(Be){Q[++se]=Be}),Q}function Tx(V){var se=-1,Q=Array(V.size);return V.forEach(function(Be){Q[++se]=[Be,Be]}),Q}function Ax(V,se,Q){for(var Be=Q-1,ot=V.length;++Be<ot;)if(V[Be]===se)return Be;return-1}function Rx(V,se,Q){for(var Be=Q+1;Be--;)if(V[Be]===se)return Be;return Be}function ra(V){return ia(V)?Px(V):dx(V)}function wi(V){return ia(V)?Lx(V):px(V)}function jp(V){for(var se=V.length;se--&&Ks.test(V.charAt(se)););return se}var Cx=oh(sx);function Px(V){for(var se=eh.lastIndex=0;eh.test(V);)++se;return se}function Lx(V){return V.match(eh)||[]}function Ix(V){return V.match(Qy)||[]}var Ux=function V(se){se=se==null?wn:sa.defaults(wn.Object(),se,sa.pick(wn,tx));var Q=se.Array,Be=se.Date,ot=se.Error,Pt=se.Function,dn=se.Math,Ft=se.Object,fh=se.RegExp,Dx=se.String,mi=se.TypeError,Dc=Q.prototype,Nx=Pt.prototype,aa=Ft.prototype,Nc=se["__core-js_shared__"],Oc=Nx.toString,Ut=aa.hasOwnProperty,Ox=0,em=function(){var a=/[^.]+$/.exec(Nc&&Nc.keys&&Nc.keys.IE_PROTO||"");return a?"Symbol(src)_1."+a:""}(),Fc=aa.toString,Fx=Oc.call(Ft),Bx=wn._,zx=fh("^"+Oc.call(Ut).replace($s,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),Bc=Fp?se.Buffer:t,Dr=se.Symbol,zc=se.Uint8Array,tm=Bc?Bc.allocUnsafe:t,Hc=Qp(Ft.getPrototypeOf,Ft),nm=Ft.create,im=aa.propertyIsEnumerable,kc=Dc.splice,rm=Dr?Dr.isConcatSpreadable:t,oo=Dr?Dr.iterator:t,os=Dr?Dr.toStringTag:t,Gc=function(){try{var a=fs(Ft,"defineProperty");return a({},"",{}),a}catch{}}(),Hx=se.clearTimeout!==wn.clearTimeout&&se.clearTimeout,kx=Be&&Be.now!==wn.Date.now&&Be.now,Gx=se.setTimeout!==wn.setTimeout&&se.setTimeout,Vc=dn.ceil,Wc=dn.floor,dh=Ft.getOwnPropertySymbols,Vx=Bc?Bc.isBuffer:t,sm=se.isFinite,Wx=Dc.join,Xx=Qp(Ft.keys,Ft),pn=dn.max,An=dn.min,qx=Be.now,Yx=se.parseInt,am=dn.random,Zx=Dc.reverse,ph=fs(se,"DataView"),co=fs(se,"Map"),mh=fs(se,"Promise"),oa=fs(se,"Set"),lo=fs(se,"WeakMap"),uo=fs(Ft,"create"),Xc=lo&&new lo,ca={},$x=ds(ph),Kx=ds(co),Jx=ds(mh),Qx=ds(oa),jx=ds(lo),qc=Dr?Dr.prototype:t,ho=qc?qc.valueOf:t,om=qc?qc.toString:t;function R(a){if(Kt(a)&&!ct(a)&&!(a instanceof wt)){if(a instanceof gi)return a;if(Ut.call(a,"__wrapped__"))return cg(a)}return new gi(a)}var la=function(){function a(){}return function(l){if(!qt(l))return{};if(nm)return nm(l);a.prototype=l;var f=new a;return a.prototype=t,f}}();function Yc(){}function gi(a,l){this.__wrapped__=a,this.__actions__=[],this.__chain__=!!l,this.__index__=0,this.__values__=t}R.templateSettings={escape:kt,evaluate:$t,interpolate:Hi,variable:"",imports:{_:R}},R.prototype=Yc.prototype,R.prototype.constructor=R,gi.prototype=la(Yc.prototype),gi.prototype.constructor=gi;function wt(a){this.__wrapped__=a,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=Ee,this.__views__=[]}function eM(){var a=new wt(this.__wrapped__);return a.__actions__=Wn(this.__actions__),a.__dir__=this.__dir__,a.__filtered__=this.__filtered__,a.__iteratees__=Wn(this.__iteratees__),a.__takeCount__=this.__takeCount__,a.__views__=Wn(this.__views__),a}function tM(){if(this.__filtered__){var a=new wt(this);a.__dir__=-1,a.__filtered__=!0}else a=this.clone(),a.__dir__*=-1;return a}function nM(){var a=this.__wrapped__.value(),l=this.__dir__,f=ct(a),x=l<0,w=f?a.length:0,C=pb(0,w,this.__views__),B=C.start,k=C.end,W=k-B,le=x?k:B-1,ue=this.__iteratees__,ge=ue.length,Pe=0,Xe=An(W,this.__takeCount__);if(!f||!x&&w==W&&Xe==W)return Lm(a,this.__actions__);var et=[];e:for(;W--&&Pe<Xe;){le+=l;for(var ft=-1,tt=a[le];++ft<ge;){var Mt=ue[ft],Et=Mt.iteratee,ei=Mt.type,Fn=Et(tt);if(ei==X)tt=Fn;else if(!Fn){if(ei==Z)continue e;break e}}et[Pe++]=tt}return et}wt.prototype=la(Yc.prototype),wt.prototype.constructor=wt;function cs(a){var l=-1,f=a==null?0:a.length;for(this.clear();++l<f;){var x=a[l];this.set(x[0],x[1])}}function iM(){this.__data__=uo?uo(null):{},this.size=0}function rM(a){var l=this.has(a)&&delete this.__data__[a];return this.size-=l?1:0,l}function sM(a){var l=this.__data__;if(uo){var f=l[a];return f===u?t:f}return Ut.call(l,a)?l[a]:t}function aM(a){var l=this.__data__;return uo?l[a]!==t:Ut.call(l,a)}function oM(a,l){var f=this.__data__;return this.size+=this.has(a)?0:1,f[a]=uo&&l===t?u:l,this}cs.prototype.clear=iM,cs.prototype.delete=rM,cs.prototype.get=sM,cs.prototype.has=aM,cs.prototype.set=oM;function rr(a){var l=-1,f=a==null?0:a.length;for(this.clear();++l<f;){var x=a[l];this.set(x[0],x[1])}}function cM(){this.__data__=[],this.size=0}function lM(a){var l=this.__data__,f=Zc(l,a);if(f<0)return!1;var x=l.length-1;return f==x?l.pop():kc.call(l,f,1),--this.size,!0}function uM(a){var l=this.__data__,f=Zc(l,a);return f<0?t:l[f][1]}function hM(a){return Zc(this.__data__,a)>-1}function fM(a,l){var f=this.__data__,x=Zc(f,a);return x<0?(++this.size,f.push([a,l])):f[x][1]=l,this}rr.prototype.clear=cM,rr.prototype.delete=lM,rr.prototype.get=uM,rr.prototype.has=hM,rr.prototype.set=fM;function sr(a){var l=-1,f=a==null?0:a.length;for(this.clear();++l<f;){var x=a[l];this.set(x[0],x[1])}}function dM(){this.size=0,this.__data__={hash:new cs,map:new(co||rr),string:new cs}}function pM(a){var l=al(this,a).delete(a);return this.size-=l?1:0,l}function mM(a){return al(this,a).get(a)}function gM(a){return al(this,a).has(a)}function _M(a,l){var f=al(this,a),x=f.size;return f.set(a,l),this.size+=f.size==x?0:1,this}sr.prototype.clear=dM,sr.prototype.delete=pM,sr.prototype.get=mM,sr.prototype.has=gM,sr.prototype.set=_M;function ls(a){var l=-1,f=a==null?0:a.length;for(this.__data__=new sr;++l<f;)this.add(a[l])}function vM(a){return this.__data__.set(a,u),this}function yM(a){return this.__data__.has(a)}ls.prototype.add=ls.prototype.push=vM,ls.prototype.has=yM;function Ei(a){var l=this.__data__=new rr(a);this.size=l.size}function xM(){this.__data__=new rr,this.size=0}function MM(a){var l=this.__data__,f=l.delete(a);return this.size=l.size,f}function bM(a){return this.__data__.get(a)}function SM(a){return this.__data__.has(a)}function wM(a,l){var f=this.__data__;if(f instanceof rr){var x=f.__data__;if(!co||x.length<i-1)return x.push([a,l]),this.size=++f.size,this;f=this.__data__=new sr(x)}return f.set(a,l),this.size=f.size,this}Ei.prototype.clear=xM,Ei.prototype.delete=MM,Ei.prototype.get=bM,Ei.prototype.has=SM,Ei.prototype.set=wM;function cm(a,l){var f=ct(a),x=!f&&ps(a),w=!f&&!x&&zr(a),C=!f&&!x&&!w&&da(a),B=f||x||w||C,k=B?lh(a.length,Dx):[],W=k.length;for(var le in a)(l||Ut.call(a,le))&&!(B&&(le=="length"||w&&(le=="offset"||le=="parent")||C&&(le=="buffer"||le=="byteLength"||le=="byteOffset")||lr(le,W)))&&k.push(le);return k}function lm(a){var l=a.length;return l?a[Th(0,l-1)]:t}function EM(a,l){return ol(Wn(a),us(l,0,a.length))}function TM(a){return ol(Wn(a))}function gh(a,l,f){(f!==t&&!Ti(a[l],f)||f===t&&!(l in a))&&ar(a,l,f)}function fo(a,l,f){var x=a[l];(!(Ut.call(a,l)&&Ti(x,f))||f===t&&!(l in a))&&ar(a,l,f)}function Zc(a,l){for(var f=a.length;f--;)if(Ti(a[f][0],l))return f;return-1}function AM(a,l,f,x){return Nr(a,function(w,C,B){l(x,w,f(w),B)}),x}function um(a,l){return a&&Gi(l,vn(l),a)}function RM(a,l){return a&&Gi(l,qn(l),a)}function ar(a,l,f){l=="__proto__"&&Gc?Gc(a,l,{configurable:!0,enumerable:!0,value:f,writable:!0}):a[l]=f}function _h(a,l){for(var f=-1,x=l.length,w=Q(x),C=a==null;++f<x;)w[f]=C?t:Jh(a,l[f]);return w}function us(a,l,f){return a===a&&(f!==t&&(a=a<=f?a:f),l!==t&&(a=a>=l?a:l)),a}function _i(a,l,f,x,w,C){var B,k=l&m,W=l&p,le=l&_;if(f&&(B=w?f(a,x,w,C):f(a)),B!==t)return B;if(!qt(a))return a;var ue=ct(a);if(ue){if(B=gb(a),!k)return Wn(a,B)}else{var ge=Rn(a),Pe=ge==H||ge==we;if(zr(a))return Dm(a,k);if(ge==De||ge==Re||Pe&&!w){if(B=W||Pe?{}:jm(a),!k)return W?sb(a,RM(B,a)):rb(a,um(B,a))}else{if(!Bt[ge])return w?a:{};B=_b(a,ge,k)}}C||(C=new Ei);var Xe=C.get(a);if(Xe)return Xe;C.set(a,B),Rg(a)?a.forEach(function(tt){B.add(_i(tt,l,f,tt,a,C))}):Tg(a)&&a.forEach(function(tt,Mt){B.set(Mt,_i(tt,l,f,Mt,a,C))});var et=le?W?Fh:Oh:W?qn:vn,ft=ue?t:et(a);return pi(ft||a,function(tt,Mt){ft&&(Mt=tt,tt=a[Mt]),fo(B,Mt,_i(tt,l,f,Mt,a,C))}),B}function CM(a){var l=vn(a);return function(f){return hm(f,a,l)}}function hm(a,l,f){var x=f.length;if(a==null)return!x;for(a=Ft(a);x--;){var w=f[x],C=l[w],B=a[w];if(B===t&&!(w in a)||!C(B))return!1}return!0}function fm(a,l,f){if(typeof a!="function")throw new mi(o);return xo(function(){a.apply(t,f)},l)}function po(a,l,f,x){var w=-1,C=Lc,B=!0,k=a.length,W=[],le=l.length;if(!k)return W;f&&(l=Vt(l,Jn(f))),x?(C=ih,B=!1):l.length>=i&&(C=ao,B=!1,l=new ls(l));e:for(;++w<k;){var ue=a[w],ge=f==null?ue:f(ue);if(ue=x||ue!==0?ue:0,B&&ge===ge){for(var Pe=le;Pe--;)if(l[Pe]===ge)continue e;W.push(ue)}else C(l,ge,x)||W.push(ue)}return W}var Nr=zm(ki),dm=zm(yh,!0);function PM(a,l){var f=!0;return Nr(a,function(x,w,C){return f=!!l(x,w,C),f}),f}function $c(a,l,f){for(var x=-1,w=a.length;++x<w;){var C=a[x],B=l(C);if(B!=null&&(k===t?B===B&&!jn(B):f(B,k)))var k=B,W=C}return W}function LM(a,l,f,x){var w=a.length;for(f=ht(f),f<0&&(f=-f>w?0:w+f),x=x===t||x>w?w:ht(x),x<0&&(x+=w),x=f>x?0:Pg(x);f<x;)a[f++]=l;return a}function pm(a,l){var f=[];return Nr(a,function(x,w,C){l(x,w,C)&&f.push(x)}),f}function En(a,l,f,x,w){var C=-1,B=a.length;for(f||(f=yb),w||(w=[]);++C<B;){var k=a[C];l>0&&f(k)?l>1?En(k,l-1,f,x,w):Ir(w,k):x||(w[w.length]=k)}return w}var vh=Hm(),mm=Hm(!0);function ki(a,l){return a&&vh(a,l,vn)}function yh(a,l){return a&&mm(a,l,vn)}function Kc(a,l){return Lr(l,function(f){return ur(a[f])})}function hs(a,l){l=Fr(l,a);for(var f=0,x=l.length;a!=null&&f<x;)a=a[Vi(l[f++])];return f&&f==x?a:t}function gm(a,l,f){var x=l(a);return ct(a)?x:Ir(x,f(a))}function Nn(a){return a==null?a===t?P:fe:os&&os in Ft(a)?db(a):Tb(a)}function xh(a,l){return a>l}function IM(a,l){return a!=null&&Ut.call(a,l)}function UM(a,l){return a!=null&&l in Ft(a)}function DM(a,l,f){return a>=An(l,f)&&a<pn(l,f)}function Mh(a,l,f){for(var x=f?ih:Lc,w=a[0].length,C=a.length,B=C,k=Q(C),W=1/0,le=[];B--;){var ue=a[B];B&&l&&(ue=Vt(ue,Jn(l))),W=An(ue.length,W),k[B]=!f&&(l||w>=120&&ue.length>=120)?new ls(B&&ue):t}ue=a[0];var ge=-1,Pe=k[0];e:for(;++ge<w&&le.length<W;){var Xe=ue[ge],et=l?l(Xe):Xe;if(Xe=f||Xe!==0?Xe:0,!(Pe?ao(Pe,et):x(le,et,f))){for(B=C;--B;){var ft=k[B];if(!(ft?ao(ft,et):x(a[B],et,f)))continue e}Pe&&Pe.push(et),le.push(Xe)}}return le}function NM(a,l,f,x){return ki(a,function(w,C,B){l(x,f(w),C,B)}),x}function mo(a,l,f){l=Fr(l,a),a=ig(a,l);var x=a==null?a:a[Vi(yi(l))];return x==null?t:Kn(x,a,f)}function _m(a){return Kt(a)&&Nn(a)==Re}function OM(a){return Kt(a)&&Nn(a)==ye}function FM(a){return Kt(a)&&Nn(a)==Ye}function go(a,l,f,x,w){return a===l?!0:a==null||l==null||!Kt(a)&&!Kt(l)?a!==a&&l!==l:BM(a,l,f,x,go,w)}function BM(a,l,f,x,w,C){var B=ct(a),k=ct(l),W=B?Ie:Rn(a),le=k?Ie:Rn(l);W=W==Re?De:W,le=le==Re?De:le;var ue=W==De,ge=le==De,Pe=W==le;if(Pe&&zr(a)){if(!zr(l))return!1;B=!0,ue=!1}if(Pe&&!ue)return C||(C=new Ei),B||da(a)?Km(a,l,f,x,w,C):hb(a,l,W,f,x,w,C);if(!(f&v)){var Xe=ue&&Ut.call(a,"__wrapped__"),et=ge&&Ut.call(l,"__wrapped__");if(Xe||et){var ft=Xe?a.value():a,tt=et?l.value():l;return C||(C=new Ei),w(ft,tt,f,x,C)}}return Pe?(C||(C=new Ei),fb(a,l,f,x,w,C)):!1}function zM(a){return Kt(a)&&Rn(a)==ie}function bh(a,l,f,x){var w=f.length,C=w,B=!x;if(a==null)return!C;for(a=Ft(a);w--;){var k=f[w];if(B&&k[2]?k[1]!==a[k[0]]:!(k[0]in a))return!1}for(;++w<C;){k=f[w];var W=k[0],le=a[W],ue=k[1];if(B&&k[2]){if(le===t&&!(W in a))return!1}else{var ge=new Ei;if(x)var Pe=x(le,ue,W,a,l,ge);if(!(Pe===t?go(ue,le,v|M,x,ge):Pe))return!1}}return!0}function vm(a){if(!qt(a)||Mb(a))return!1;var l=ur(a)?zx:ae;return l.test(ds(a))}function HM(a){return Kt(a)&&Nn(a)==Ze}function kM(a){return Kt(a)&&Rn(a)==nt}function GM(a){return Kt(a)&&dl(a.length)&&!!zt[Nn(a)]}function ym(a){return typeof a=="function"?a:a==null?Yn:typeof a=="object"?ct(a)?bm(a[0],a[1]):Mm(a):kg(a)}function Sh(a){if(!yo(a))return Xx(a);var l=[];for(var f in Ft(a))Ut.call(a,f)&&f!="constructor"&&l.push(f);return l}function VM(a){if(!qt(a))return Eb(a);var l=yo(a),f=[];for(var x in a)x=="constructor"&&(l||!Ut.call(a,x))||f.push(x);return f}function wh(a,l){return a<l}function xm(a,l){var f=-1,x=Xn(a)?Q(a.length):[];return Nr(a,function(w,C,B){x[++f]=l(w,C,B)}),x}function Mm(a){var l=zh(a);return l.length==1&&l[0][2]?tg(l[0][0],l[0][1]):function(f){return f===a||bh(f,a,l)}}function bm(a,l){return kh(a)&&eg(l)?tg(Vi(a),l):function(f){var x=Jh(f,a);return x===t&&x===l?Qh(f,a):go(l,x,v|M)}}function Jc(a,l,f,x,w){a!==l&&vh(l,function(C,B){if(w||(w=new Ei),qt(C))WM(a,l,B,f,Jc,x,w);else{var k=x?x(Vh(a,B),C,B+"",a,l,w):t;k===t&&(k=C),gh(a,B,k)}},qn)}function WM(a,l,f,x,w,C,B){var k=Vh(a,f),W=Vh(l,f),le=B.get(W);if(le){gh(a,f,le);return}var ue=C?C(k,W,f+"",a,l,B):t,ge=ue===t;if(ge){var Pe=ct(W),Xe=!Pe&&zr(W),et=!Pe&&!Xe&&da(W);ue=W,Pe||Xe||et?ct(k)?ue=k:rn(k)?ue=Wn(k):Xe?(ge=!1,ue=Dm(W,!0)):et?(ge=!1,ue=Nm(W,!0)):ue=[]:Mo(W)||ps(W)?(ue=k,ps(k)?ue=Lg(k):(!qt(k)||ur(k))&&(ue=jm(W))):ge=!1}ge&&(B.set(W,ue),w(ue,W,x,C,B),B.delete(W)),gh(a,f,ue)}function Sm(a,l){var f=a.length;if(f)return l+=l<0?f:0,lr(l,f)?a[l]:t}function wm(a,l,f){l.length?l=Vt(l,function(C){return ct(C)?function(B){return hs(B,C.length===1?C[0]:C)}:C}):l=[Yn];var x=-1;l=Vt(l,Jn(Qe()));var w=xm(a,function(C,B,k){var W=Vt(l,function(le){return le(C)});return{criteria:W,index:++x,value:C}});return _x(w,function(C,B){return ib(C,B,f)})}function XM(a,l){return Em(a,l,function(f,x){return Qh(a,x)})}function Em(a,l,f){for(var x=-1,w=l.length,C={};++x<w;){var B=l[x],k=hs(a,B);f(k,B)&&_o(C,Fr(B,a),k)}return C}function qM(a){return function(l){return hs(l,a)}}function Eh(a,l,f,x){var w=x?gx:na,C=-1,B=l.length,k=a;for(a===l&&(l=Wn(l)),f&&(k=Vt(a,Jn(f)));++C<B;)for(var W=0,le=l[C],ue=f?f(le):le;(W=w(k,ue,W,x))>-1;)k!==a&&kc.call(k,W,1),kc.call(a,W,1);return a}function Tm(a,l){for(var f=a?l.length:0,x=f-1;f--;){var w=l[f];if(f==x||w!==C){var C=w;lr(w)?kc.call(a,w,1):Ch(a,w)}}return a}function Th(a,l){return a+Wc(am()*(l-a+1))}function YM(a,l,f,x){for(var w=-1,C=pn(Vc((l-a)/(f||1)),0),B=Q(C);C--;)B[x?C:++w]=a,a+=f;return B}function Ah(a,l){var f="";if(!a||l<1||l>oe)return f;do l%2&&(f+=a),l=Wc(l/2),l&&(a+=a);while(l);return f}function yt(a,l){return Wh(ng(a,l,Yn),a+"")}function ZM(a){return lm(pa(a))}function $M(a,l){var f=pa(a);return ol(f,us(l,0,f.length))}function _o(a,l,f,x){if(!qt(a))return a;l=Fr(l,a);for(var w=-1,C=l.length,B=C-1,k=a;k!=null&&++w<C;){var W=Vi(l[w]),le=f;if(W==="__proto__"||W==="constructor"||W==="prototype")return a;if(w!=B){var ue=k[W];le=x?x(ue,W,k):t,le===t&&(le=qt(ue)?ue:lr(l[w+1])?[]:{})}fo(k,W,le),k=k[W]}return a}var Am=Xc?function(a,l){return Xc.set(a,l),a}:Yn,KM=Gc?function(a,l){return Gc(a,"toString",{configurable:!0,enumerable:!1,value:ef(l),writable:!0})}:Yn;function JM(a){return ol(pa(a))}function vi(a,l,f){var x=-1,w=a.length;l<0&&(l=-l>w?0:w+l),f=f>w?w:f,f<0&&(f+=w),w=l>f?0:f-l>>>0,l>>>=0;for(var C=Q(w);++x<w;)C[x]=a[x+l];return C}function QM(a,l){var f;return Nr(a,function(x,w,C){return f=l(x,w,C),!f}),!!f}function Qc(a,l,f){var x=0,w=a==null?x:a.length;if(typeof l=="number"&&l===l&&w<=ve){for(;x<w;){var C=x+w>>>1,B=a[C];B!==null&&!jn(B)&&(f?B<=l:B<l)?x=C+1:w=C}return w}return Rh(a,l,Yn,f)}function Rh(a,l,f,x){var w=0,C=a==null?0:a.length;if(C===0)return 0;l=f(l);for(var B=l!==l,k=l===null,W=jn(l),le=l===t;w<C;){var ue=Wc((w+C)/2),ge=f(a[ue]),Pe=ge!==t,Xe=ge===null,et=ge===ge,ft=jn(ge);if(B)var tt=x||et;else le?tt=et&&(x||Pe):k?tt=et&&Pe&&(x||!Xe):W?tt=et&&Pe&&!Xe&&(x||!ft):Xe||ft?tt=!1:tt=x?ge<=l:ge<l;tt?w=ue+1:C=ue}return An(C,j)}function Rm(a,l){for(var f=-1,x=a.length,w=0,C=[];++f<x;){var B=a[f],k=l?l(B):B;if(!f||!Ti(k,W)){var W=k;C[w++]=B===0?0:B}}return C}function Cm(a){return typeof a=="number"?a:jn(a)?_e:+a}function Qn(a){if(typeof a=="string")return a;if(ct(a))return Vt(a,Qn)+"";if(jn(a))return om?om.call(a):"";var l=a+"";return l=="0"&&1/a==-ne?"-0":l}function Or(a,l,f){var x=-1,w=Lc,C=a.length,B=!0,k=[],W=k;if(f)B=!1,w=ih;else if(C>=i){var le=l?null:lb(a);if(le)return Uc(le);B=!1,w=ao,W=new ls}else W=l?[]:k;e:for(;++x<C;){var ue=a[x],ge=l?l(ue):ue;if(ue=f||ue!==0?ue:0,B&&ge===ge){for(var Pe=W.length;Pe--;)if(W[Pe]===ge)continue e;l&&W.push(ge),k.push(ue)}else w(W,ge,f)||(W!==k&&W.push(ge),k.push(ue))}return k}function Ch(a,l){return l=Fr(l,a),a=ig(a,l),a==null||delete a[Vi(yi(l))]}function Pm(a,l,f,x){return _o(a,l,f(hs(a,l)),x)}function jc(a,l,f,x){for(var w=a.length,C=x?w:-1;(x?C--:++C<w)&&l(a[C],C,a););return f?vi(a,x?0:C,x?C+1:w):vi(a,x?C+1:0,x?w:C)}function Lm(a,l){var f=a;return f instanceof wt&&(f=f.value()),rh(l,function(x,w){return w.func.apply(w.thisArg,Ir([x],w.args))},f)}function Ph(a,l,f){var x=a.length;if(x<2)return x?Or(a[0]):[];for(var w=-1,C=Q(x);++w<x;)for(var B=a[w],k=-1;++k<x;)k!=w&&(C[w]=po(C[w]||B,a[k],l,f));return Or(En(C,1),l,f)}function Im(a,l,f){for(var x=-1,w=a.length,C=l.length,B={};++x<w;){var k=x<C?l[x]:t;f(B,a[x],k)}return B}function Lh(a){return rn(a)?a:[]}function Ih(a){return typeof a=="function"?a:Yn}function Fr(a,l){return ct(a)?a:kh(a,l)?[a]:og(It(a))}var jM=yt;function Br(a,l,f){var x=a.length;return f=f===t?x:f,!l&&f>=x?a:vi(a,l,f)}var Um=Hx||function(a){return wn.clearTimeout(a)};function Dm(a,l){if(l)return a.slice();var f=a.length,x=tm?tm(f):new a.constructor(f);return a.copy(x),x}function Uh(a){var l=new a.constructor(a.byteLength);return new zc(l).set(new zc(a)),l}function eb(a,l){var f=l?Uh(a.buffer):a.buffer;return new a.constructor(f,a.byteOffset,a.byteLength)}function tb(a){var l=new a.constructor(a.source,K.exec(a));return l.lastIndex=a.lastIndex,l}function nb(a){return ho?Ft(ho.call(a)):{}}function Nm(a,l){var f=l?Uh(a.buffer):a.buffer;return new a.constructor(f,a.byteOffset,a.length)}function Om(a,l){if(a!==l){var f=a!==t,x=a===null,w=a===a,C=jn(a),B=l!==t,k=l===null,W=l===l,le=jn(l);if(!k&&!le&&!C&&a>l||C&&B&&W&&!k&&!le||x&&B&&W||!f&&W||!w)return 1;if(!x&&!C&&!le&&a<l||le&&f&&w&&!x&&!C||k&&f&&w||!B&&w||!W)return-1}return 0}function ib(a,l,f){for(var x=-1,w=a.criteria,C=l.criteria,B=w.length,k=f.length;++x<B;){var W=Om(w[x],C[x]);if(W){if(x>=k)return W;var le=f[x];return W*(le=="desc"?-1:1)}}return a.index-l.index}function Fm(a,l,f,x){for(var w=-1,C=a.length,B=f.length,k=-1,W=l.length,le=pn(C-B,0),ue=Q(W+le),ge=!x;++k<W;)ue[k]=l[k];for(;++w<B;)(ge||w<C)&&(ue[f[w]]=a[w]);for(;le--;)ue[k++]=a[w++];return ue}function Bm(a,l,f,x){for(var w=-1,C=a.length,B=-1,k=f.length,W=-1,le=l.length,ue=pn(C-k,0),ge=Q(ue+le),Pe=!x;++w<ue;)ge[w]=a[w];for(var Xe=w;++W<le;)ge[Xe+W]=l[W];for(;++B<k;)(Pe||w<C)&&(ge[Xe+f[B]]=a[w++]);return ge}function Wn(a,l){var f=-1,x=a.length;for(l||(l=Q(x));++f<x;)l[f]=a[f];return l}function Gi(a,l,f,x){var w=!f;f||(f={});for(var C=-1,B=l.length;++C<B;){var k=l[C],W=x?x(f[k],a[k],k,f,a):t;W===t&&(W=a[k]),w?ar(f,k,W):fo(f,k,W)}return f}function rb(a,l){return Gi(a,Hh(a),l)}function sb(a,l){return Gi(a,Jm(a),l)}function el(a,l){return function(f,x){var w=ct(f)?ux:AM,C=l?l():{};return w(f,a,Qe(x,2),C)}}function ua(a){return yt(function(l,f){var x=-1,w=f.length,C=w>1?f[w-1]:t,B=w>2?f[2]:t;for(C=a.length>3&&typeof C=="function"?(w--,C):t,B&&On(f[0],f[1],B)&&(C=w<3?t:C,w=1),l=Ft(l);++x<w;){var k=f[x];k&&a(l,k,x,C)}return l})}function zm(a,l){return function(f,x){if(f==null)return f;if(!Xn(f))return a(f,x);for(var w=f.length,C=l?w:-1,B=Ft(f);(l?C--:++C<w)&&x(B[C],C,B)!==!1;);return f}}function Hm(a){return function(l,f,x){for(var w=-1,C=Ft(l),B=x(l),k=B.length;k--;){var W=B[a?k:++w];if(f(C[W],W,C)===!1)break}return l}}function ab(a,l,f){var x=l&y,w=vo(a);function C(){var B=this&&this!==wn&&this instanceof C?w:a;return B.apply(x?f:this,arguments)}return C}function km(a){return function(l){l=It(l);var f=ia(l)?wi(l):t,x=f?f[0]:l.charAt(0),w=f?Br(f,1).join(""):l.slice(1);return x[a]()+w}}function ha(a){return function(l){return rh(zg(Bg(l).replace(Ky,"")),a,"")}}function vo(a){return function(){var l=arguments;switch(l.length){case 0:return new a;case 1:return new a(l[0]);case 2:return new a(l[0],l[1]);case 3:return new a(l[0],l[1],l[2]);case 4:return new a(l[0],l[1],l[2],l[3]);case 5:return new a(l[0],l[1],l[2],l[3],l[4]);case 6:return new a(l[0],l[1],l[2],l[3],l[4],l[5]);case 7:return new a(l[0],l[1],l[2],l[3],l[4],l[5],l[6])}var f=la(a.prototype),x=a.apply(f,l);return qt(x)?x:f}}function ob(a,l,f){var x=vo(a);function w(){for(var C=arguments.length,B=Q(C),k=C,W=fa(w);k--;)B[k]=arguments[k];var le=C<3&&B[0]!==W&&B[C-1]!==W?[]:Ur(B,W);if(C-=le.length,C<f)return qm(a,l,tl,w.placeholder,t,B,le,t,t,f-C);var ue=this&&this!==wn&&this instanceof w?x:a;return Kn(ue,this,B)}return w}function Gm(a){return function(l,f,x){var w=Ft(l);if(!Xn(l)){var C=Qe(f,3);l=vn(l),f=function(k){return C(w[k],k,w)}}var B=a(l,f,x);return B>-1?w[C?l[B]:B]:t}}function Vm(a){return cr(function(l){var f=l.length,x=f,w=gi.prototype.thru;for(a&&l.reverse();x--;){var C=l[x];if(typeof C!="function")throw new mi(o);if(w&&!B&&sl(C)=="wrapper")var B=new gi([],!0)}for(x=B?x:f;++x<f;){C=l[x];var k=sl(C),W=k=="wrapper"?Bh(C):t;W&&Gh(W[0])&&W[1]==(F|b|A|N)&&!W[4].length&&W[9]==1?B=B[sl(W[0])].apply(B,W[3]):B=C.length==1&&Gh(C)?B[k]():B.thru(C)}return function(){var le=arguments,ue=le[0];if(B&&le.length==1&&ct(ue))return B.plant(ue).value();for(var ge=0,Pe=f?l[ge].apply(this,le):ue;++ge<f;)Pe=l[ge].call(this,Pe);return Pe}})}function tl(a,l,f,x,w,C,B,k,W,le){var ue=l&F,ge=l&y,Pe=l&g,Xe=l&(b|E),et=l&T,ft=Pe?t:vo(a);function tt(){for(var Mt=arguments.length,Et=Q(Mt),ei=Mt;ei--;)Et[ei]=arguments[ei];if(Xe)var Fn=fa(tt),ti=yx(Et,Fn);if(x&&(Et=Fm(Et,x,w,Xe)),C&&(Et=Bm(Et,C,B,Xe)),Mt-=ti,Xe&&Mt<le){var sn=Ur(Et,Fn);return qm(a,l,tl,tt.placeholder,f,Et,sn,k,W,le-Mt)}var Ai=ge?f:this,fr=Pe?Ai[a]:a;return Mt=Et.length,k?Et=Ab(Et,k):et&&Mt>1&&Et.reverse(),ue&&W<Mt&&(Et.length=W),this&&this!==wn&&this instanceof tt&&(fr=ft||vo(fr)),fr.apply(Ai,Et)}return tt}function Wm(a,l){return function(f,x){return NM(f,a,l(x),{})}}function nl(a,l){return function(f,x){var w;if(f===t&&x===t)return l;if(f!==t&&(w=f),x!==t){if(w===t)return x;typeof f=="string"||typeof x=="string"?(f=Qn(f),x=Qn(x)):(f=Cm(f),x=Cm(x)),w=a(f,x)}return w}}function Dh(a){return cr(function(l){return l=Vt(l,Jn(Qe())),yt(function(f){var x=this;return a(l,function(w){return Kn(w,x,f)})})})}function il(a,l){l=l===t?" ":Qn(l);var f=l.length;if(f<2)return f?Ah(l,a):l;var x=Ah(l,Vc(a/ra(l)));return ia(l)?Br(wi(x),0,a).join(""):x.slice(0,a)}function cb(a,l,f,x){var w=l&y,C=vo(a);function B(){for(var k=-1,W=arguments.length,le=-1,ue=x.length,ge=Q(ue+W),Pe=this&&this!==wn&&this instanceof B?C:a;++le<ue;)ge[le]=x[le];for(;W--;)ge[le++]=arguments[++k];return Kn(Pe,w?f:this,ge)}return B}function Xm(a){return function(l,f,x){return x&&typeof x!="number"&&On(l,f,x)&&(f=x=t),l=hr(l),f===t?(f=l,l=0):f=hr(f),x=x===t?l<f?1:-1:hr(x),YM(l,f,x,a)}}function rl(a){return function(l,f){return typeof l=="string"&&typeof f=="string"||(l=xi(l),f=xi(f)),a(l,f)}}function qm(a,l,f,x,w,C,B,k,W,le){var ue=l&b,ge=ue?B:t,Pe=ue?t:B,Xe=ue?C:t,et=ue?t:C;l|=ue?A:L,l&=~(ue?L:A),l&S||(l&=~(y|g));var ft=[a,l,w,Xe,ge,et,Pe,k,W,le],tt=f.apply(t,ft);return Gh(a)&&rg(tt,ft),tt.placeholder=x,sg(tt,a,l)}function Nh(a){var l=dn[a];return function(f,x){if(f=xi(f),x=x==null?0:An(ht(x),292),x&&sm(f)){var w=(It(f)+"e").split("e"),C=l(w[0]+"e"+(+w[1]+x));return w=(It(C)+"e").split("e"),+(w[0]+"e"+(+w[1]-x))}return l(f)}}var lb=oa&&1/Uc(new oa([,-0]))[1]==ne?function(a){return new oa(a)}:rf;function Ym(a){return function(l){var f=Rn(l);return f==ie?hh(l):f==nt?Tx(l):vx(l,a(l))}}function or(a,l,f,x,w,C,B,k){var W=l&g;if(!W&&typeof a!="function")throw new mi(o);var le=x?x.length:0;if(le||(l&=~(A|L),x=w=t),B=B===t?B:pn(ht(B),0),k=k===t?k:ht(k),le-=w?w.length:0,l&L){var ue=x,ge=w;x=w=t}var Pe=W?t:Bh(a),Xe=[a,l,f,x,w,ue,ge,C,B,k];if(Pe&&wb(Xe,Pe),a=Xe[0],l=Xe[1],f=Xe[2],x=Xe[3],w=Xe[4],k=Xe[9]=Xe[9]===t?W?0:a.length:pn(Xe[9]-le,0),!k&&l&(b|E)&&(l&=~(b|E)),!l||l==y)var et=ab(a,l,f);else l==b||l==E?et=ob(a,l,k):(l==A||l==(y|A))&&!w.length?et=cb(a,l,f,x):et=tl.apply(t,Xe);var ft=Pe?Am:rg;return sg(ft(et,Xe),a,l)}function Zm(a,l,f,x){return a===t||Ti(a,aa[f])&&!Ut.call(x,f)?l:a}function $m(a,l,f,x,w,C){return qt(a)&&qt(l)&&(C.set(l,a),Jc(a,l,t,$m,C),C.delete(l)),a}function ub(a){return Mo(a)?t:a}function Km(a,l,f,x,w,C){var B=f&v,k=a.length,W=l.length;if(k!=W&&!(B&&W>k))return!1;var le=C.get(a),ue=C.get(l);if(le&&ue)return le==l&&ue==a;var ge=-1,Pe=!0,Xe=f&M?new ls:t;for(C.set(a,l),C.set(l,a);++ge<k;){var et=a[ge],ft=l[ge];if(x)var tt=B?x(ft,et,ge,l,a,C):x(et,ft,ge,a,l,C);if(tt!==t){if(tt)continue;Pe=!1;break}if(Xe){if(!sh(l,function(Mt,Et){if(!ao(Xe,Et)&&(et===Mt||w(et,Mt,f,x,C)))return Xe.push(Et)})){Pe=!1;break}}else if(!(et===ft||w(et,ft,f,x,C))){Pe=!1;break}}return C.delete(a),C.delete(l),Pe}function hb(a,l,f,x,w,C,B){switch(f){case z:if(a.byteLength!=l.byteLength||a.byteOffset!=l.byteOffset)return!1;a=a.buffer,l=l.buffer;case ye:return!(a.byteLength!=l.byteLength||!C(new zc(a),new zc(l)));case je:case Ye:case be:return Ti(+a,+l);case $e:return a.name==l.name&&a.message==l.message;case Ze:case Lt:return a==l+"";case ie:var k=hh;case nt:var W=x&v;if(k||(k=Uc),a.size!=l.size&&!W)return!1;var le=B.get(a);if(le)return le==l;x|=M,B.set(a,l);var ue=Km(k(a),k(l),x,w,C,B);return B.delete(a),ue;case O:if(ho)return ho.call(a)==ho.call(l)}return!1}function fb(a,l,f,x,w,C){var B=f&v,k=Oh(a),W=k.length,le=Oh(l),ue=le.length;if(W!=ue&&!B)return!1;for(var ge=W;ge--;){var Pe=k[ge];if(!(B?Pe in l:Ut.call(l,Pe)))return!1}var Xe=C.get(a),et=C.get(l);if(Xe&&et)return Xe==l&&et==a;var ft=!0;C.set(a,l),C.set(l,a);for(var tt=B;++ge<W;){Pe=k[ge];var Mt=a[Pe],Et=l[Pe];if(x)var ei=B?x(Et,Mt,Pe,l,a,C):x(Mt,Et,Pe,a,l,C);if(!(ei===t?Mt===Et||w(Mt,Et,f,x,C):ei)){ft=!1;break}tt||(tt=Pe=="constructor")}if(ft&&!tt){var Fn=a.constructor,ti=l.constructor;Fn!=ti&&"constructor"in a&&"constructor"in l&&!(typeof Fn=="function"&&Fn instanceof Fn&&typeof ti=="function"&&ti instanceof ti)&&(ft=!1)}return C.delete(a),C.delete(l),ft}function cr(a){return Wh(ng(a,t,hg),a+"")}function Oh(a){return gm(a,vn,Hh)}function Fh(a){return gm(a,qn,Jm)}var Bh=Xc?function(a){return Xc.get(a)}:rf;function sl(a){for(var l=a.name+"",f=ca[l],x=Ut.call(ca,l)?f.length:0;x--;){var w=f[x],C=w.func;if(C==null||C==a)return w.name}return l}function fa(a){var l=Ut.call(R,"placeholder")?R:a;return l.placeholder}function Qe(){var a=R.iteratee||tf;return a=a===tf?ym:a,arguments.length?a(arguments[0],arguments[1]):a}function al(a,l){var f=a.__data__;return xb(l)?f[typeof l=="string"?"string":"hash"]:f.map}function zh(a){for(var l=vn(a),f=l.length;f--;){var x=l[f],w=a[x];l[f]=[x,w,eg(w)]}return l}function fs(a,l){var f=Sx(a,l);return vm(f)?f:t}function db(a){var l=Ut.call(a,os),f=a[os];try{a[os]=t;var x=!0}catch{}var w=Fc.call(a);return x&&(l?a[os]=f:delete a[os]),w}var Hh=dh?function(a){return a==null?[]:(a=Ft(a),Lr(dh(a),function(l){return im.call(a,l)}))}:sf,Jm=dh?function(a){for(var l=[];a;)Ir(l,Hh(a)),a=Hc(a);return l}:sf,Rn=Nn;(ph&&Rn(new ph(new ArrayBuffer(1)))!=z||co&&Rn(new co)!=ie||mh&&Rn(mh.resolve())!=Ue||oa&&Rn(new oa)!=nt||lo&&Rn(new lo)!=te)&&(Rn=function(a){var l=Nn(a),f=l==De?a.constructor:t,x=f?ds(f):"";if(x)switch(x){case $x:return z;case Kx:return ie;case Jx:return Ue;case Qx:return nt;case jx:return te}return l});function pb(a,l,f){for(var x=-1,w=f.length;++x<w;){var C=f[x],B=C.size;switch(C.type){case"drop":a+=B;break;case"dropRight":l-=B;break;case"take":l=An(l,a+B);break;case"takeRight":a=pn(a,l-B);break}}return{start:a,end:l}}function mb(a){var l=a.match(Js);return l?l[1].split(Pc):[]}function Qm(a,l,f){l=Fr(l,a);for(var x=-1,w=l.length,C=!1;++x<w;){var B=Vi(l[x]);if(!(C=a!=null&&f(a,B)))break;a=a[B]}return C||++x!=w?C:(w=a==null?0:a.length,!!w&&dl(w)&&lr(B,w)&&(ct(a)||ps(a)))}function gb(a){var l=a.length,f=new a.constructor(l);return l&&typeof a[0]=="string"&&Ut.call(a,"index")&&(f.index=a.index,f.input=a.input),f}function jm(a){return typeof a.constructor=="function"&&!yo(a)?la(Hc(a)):{}}function _b(a,l,f){var x=a.constructor;switch(l){case ye:return Uh(a);case je:case Ye:return new x(+a);case z:return eb(a,f);case de:case xe:case J:case ze:case qe:case Ve:case He:case Fe:case Je:return Nm(a,f);case ie:return new x;case be:case Lt:return new x(a);case Ze:return tb(a);case nt:return new x;case O:return nb(a)}}function vb(a,l){var f=l.length;if(!f)return a;var x=f-1;return l[x]=(f>1?"& ":"")+l[x],l=l.join(f>2?", ":" "),a.replace(Cc,`{
/* [wrapped with `+l+`] */
`)}function yb(a){return ct(a)||ps(a)||!!(rm&&a&&a[rm])}function lr(a,l){var f=typeof a;return l=l??oe,!!l&&(f=="number"||f!="symbol"&&Ke.test(a))&&a>-1&&a%1==0&&a<l}function On(a,l,f){if(!qt(f))return!1;var x=typeof l;return(x=="number"?Xn(f)&&lr(l,f.length):x=="string"&&l in f)?Ti(f[l],a):!1}function kh(a,l){if(ct(a))return!1;var f=typeof a;return f=="number"||f=="symbol"||f=="boolean"||a==null||jn(a)?!0:hi.test(a)||!Gt.test(a)||l!=null&&a in Ft(l)}function xb(a){var l=typeof a;return l=="string"||l=="number"||l=="symbol"||l=="boolean"?a!=="__proto__":a===null}function Gh(a){var l=sl(a),f=R[l];if(typeof f!="function"||!(l in wt.prototype))return!1;if(a===f)return!0;var x=Bh(f);return!!x&&a===x[0]}function Mb(a){return!!em&&em in a}var bb=Nc?ur:af;function yo(a){var l=a&&a.constructor,f=typeof l=="function"&&l.prototype||aa;return a===f}function eg(a){return a===a&&!qt(a)}function tg(a,l){return function(f){return f==null?!1:f[a]===l&&(l!==t||a in Ft(f))}}function Sb(a){var l=hl(a,function(x){return f.size===h&&f.clear(),x}),f=l.cache;return l}function wb(a,l){var f=a[1],x=l[1],w=f|x,C=w<(y|g|F),B=x==F&&f==b||x==F&&f==N&&a[7].length<=l[8]||x==(F|N)&&l[7].length<=l[8]&&f==b;if(!(C||B))return a;x&y&&(a[2]=l[2],w|=f&y?0:S);var k=l[3];if(k){var W=a[3];a[3]=W?Fm(W,k,l[4]):k,a[4]=W?Ur(a[3],d):l[4]}return k=l[5],k&&(W=a[5],a[5]=W?Bm(W,k,l[6]):k,a[6]=W?Ur(a[5],d):l[6]),k=l[7],k&&(a[7]=k),x&F&&(a[8]=a[8]==null?l[8]:An(a[8],l[8])),a[9]==null&&(a[9]=l[9]),a[0]=l[0],a[1]=w,a}function Eb(a){var l=[];if(a!=null)for(var f in Ft(a))l.push(f);return l}function Tb(a){return Fc.call(a)}function ng(a,l,f){return l=pn(l===t?a.length-1:l,0),function(){for(var x=arguments,w=-1,C=pn(x.length-l,0),B=Q(C);++w<C;)B[w]=x[l+w];w=-1;for(var k=Q(l+1);++w<l;)k[w]=x[w];return k[l]=f(B),Kn(a,this,k)}}function ig(a,l){return l.length<2?a:hs(a,vi(l,0,-1))}function Ab(a,l){for(var f=a.length,x=An(l.length,f),w=Wn(a);x--;){var C=l[x];a[x]=lr(C,f)?w[C]:t}return a}function Vh(a,l){if(!(l==="constructor"&&typeof a[l]=="function")&&l!="__proto__")return a[l]}var rg=ag(Am),xo=Gx||function(a,l){return wn.setTimeout(a,l)},Wh=ag(KM);function sg(a,l,f){var x=l+"";return Wh(a,vb(x,Rb(mb(x),f)))}function ag(a){var l=0,f=0;return function(){var x=qx(),w=Y-(x-f);if(f=x,w>0){if(++l>=he)return arguments[0]}else l=0;return a.apply(t,arguments)}}function ol(a,l){var f=-1,x=a.length,w=x-1;for(l=l===t?x:l;++f<l;){var C=Th(f,w),B=a[C];a[C]=a[f],a[f]=B}return a.length=l,a}var og=Sb(function(a){var l=[];return a.charCodeAt(0)===46&&l.push(""),a.replace(Sn,function(f,x,w,C){l.push(w?C.replace($u,"$1"):x||f)}),l});function Vi(a){if(typeof a=="string"||jn(a))return a;var l=a+"";return l=="0"&&1/a==-ne?"-0":l}function ds(a){if(a!=null){try{return Oc.call(a)}catch{}try{return a+""}catch{}}return""}function Rb(a,l){return pi(Me,function(f){var x="_."+f[0];l&f[1]&&!Lc(a,x)&&a.push(x)}),a.sort()}function cg(a){if(a instanceof wt)return a.clone();var l=new gi(a.__wrapped__,a.__chain__);return l.__actions__=Wn(a.__actions__),l.__index__=a.__index__,l.__values__=a.__values__,l}function Cb(a,l,f){(f?On(a,l,f):l===t)?l=1:l=pn(ht(l),0);var x=a==null?0:a.length;if(!x||l<1)return[];for(var w=0,C=0,B=Q(Vc(x/l));w<x;)B[C++]=vi(a,w,w+=l);return B}function Pb(a){for(var l=-1,f=a==null?0:a.length,x=0,w=[];++l<f;){var C=a[l];C&&(w[x++]=C)}return w}function Lb(){var a=arguments.length;if(!a)return[];for(var l=Q(a-1),f=arguments[0],x=a;x--;)l[x-1]=arguments[x];return Ir(ct(f)?Wn(f):[f],En(l,1))}var Ib=yt(function(a,l){return rn(a)?po(a,En(l,1,rn,!0)):[]}),Ub=yt(function(a,l){var f=yi(l);return rn(f)&&(f=t),rn(a)?po(a,En(l,1,rn,!0),Qe(f,2)):[]}),Db=yt(function(a,l){var f=yi(l);return rn(f)&&(f=t),rn(a)?po(a,En(l,1,rn,!0),t,f):[]});function Nb(a,l,f){var x=a==null?0:a.length;return x?(l=f||l===t?1:ht(l),vi(a,l<0?0:l,x)):[]}function Ob(a,l,f){var x=a==null?0:a.length;return x?(l=f||l===t?1:ht(l),l=x-l,vi(a,0,l<0?0:l)):[]}function Fb(a,l){return a&&a.length?jc(a,Qe(l,3),!0,!0):[]}function Bb(a,l){return a&&a.length?jc(a,Qe(l,3),!0):[]}function zb(a,l,f,x){var w=a==null?0:a.length;return w?(f&&typeof f!="number"&&On(a,l,f)&&(f=0,x=w),LM(a,l,f,x)):[]}function lg(a,l,f){var x=a==null?0:a.length;if(!x)return-1;var w=f==null?0:ht(f);return w<0&&(w=pn(x+w,0)),Ic(a,Qe(l,3),w)}function ug(a,l,f){var x=a==null?0:a.length;if(!x)return-1;var w=x-1;return f!==t&&(w=ht(f),w=f<0?pn(x+w,0):An(w,x-1)),Ic(a,Qe(l,3),w,!0)}function hg(a){var l=a==null?0:a.length;return l?En(a,1):[]}function Hb(a){var l=a==null?0:a.length;return l?En(a,ne):[]}function kb(a,l){var f=a==null?0:a.length;return f?(l=l===t?1:ht(l),En(a,l)):[]}function Gb(a){for(var l=-1,f=a==null?0:a.length,x={};++l<f;){var w=a[l];x[w[0]]=w[1]}return x}function fg(a){return a&&a.length?a[0]:t}function Vb(a,l,f){var x=a==null?0:a.length;if(!x)return-1;var w=f==null?0:ht(f);return w<0&&(w=pn(x+w,0)),na(a,l,w)}function Wb(a){var l=a==null?0:a.length;return l?vi(a,0,-1):[]}var Xb=yt(function(a){var l=Vt(a,Lh);return l.length&&l[0]===a[0]?Mh(l):[]}),qb=yt(function(a){var l=yi(a),f=Vt(a,Lh);return l===yi(f)?l=t:f.pop(),f.length&&f[0]===a[0]?Mh(f,Qe(l,2)):[]}),Yb=yt(function(a){var l=yi(a),f=Vt(a,Lh);return l=typeof l=="function"?l:t,l&&f.pop(),f.length&&f[0]===a[0]?Mh(f,t,l):[]});function Zb(a,l){return a==null?"":Wx.call(a,l)}function yi(a){var l=a==null?0:a.length;return l?a[l-1]:t}function $b(a,l,f){var x=a==null?0:a.length;if(!x)return-1;var w=x;return f!==t&&(w=ht(f),w=w<0?pn(x+w,0):An(w,x-1)),l===l?Rx(a,l,w):Ic(a,qp,w,!0)}function Kb(a,l){return a&&a.length?Sm(a,ht(l)):t}var Jb=yt(dg);function dg(a,l){return a&&a.length&&l&&l.length?Eh(a,l):a}function Qb(a,l,f){return a&&a.length&&l&&l.length?Eh(a,l,Qe(f,2)):a}function jb(a,l,f){return a&&a.length&&l&&l.length?Eh(a,l,t,f):a}var eS=cr(function(a,l){var f=a==null?0:a.length,x=_h(a,l);return Tm(a,Vt(l,function(w){return lr(w,f)?+w:w}).sort(Om)),x});function tS(a,l){var f=[];if(!(a&&a.length))return f;var x=-1,w=[],C=a.length;for(l=Qe(l,3);++x<C;){var B=a[x];l(B,x,a)&&(f.push(B),w.push(x))}return Tm(a,w),f}function Xh(a){return a==null?a:Zx.call(a)}function nS(a,l,f){var x=a==null?0:a.length;return x?(f&&typeof f!="number"&&On(a,l,f)?(l=0,f=x):(l=l==null?0:ht(l),f=f===t?x:ht(f)),vi(a,l,f)):[]}function iS(a,l){return Qc(a,l)}function rS(a,l,f){return Rh(a,l,Qe(f,2))}function sS(a,l){var f=a==null?0:a.length;if(f){var x=Qc(a,l);if(x<f&&Ti(a[x],l))return x}return-1}function aS(a,l){return Qc(a,l,!0)}function oS(a,l,f){return Rh(a,l,Qe(f,2),!0)}function cS(a,l){var f=a==null?0:a.length;if(f){var x=Qc(a,l,!0)-1;if(Ti(a[x],l))return x}return-1}function lS(a){return a&&a.length?Rm(a):[]}function uS(a,l){return a&&a.length?Rm(a,Qe(l,2)):[]}function hS(a){var l=a==null?0:a.length;return l?vi(a,1,l):[]}function fS(a,l,f){return a&&a.length?(l=f||l===t?1:ht(l),vi(a,0,l<0?0:l)):[]}function dS(a,l,f){var x=a==null?0:a.length;return x?(l=f||l===t?1:ht(l),l=x-l,vi(a,l<0?0:l,x)):[]}function pS(a,l){return a&&a.length?jc(a,Qe(l,3),!1,!0):[]}function mS(a,l){return a&&a.length?jc(a,Qe(l,3)):[]}var gS=yt(function(a){return Or(En(a,1,rn,!0))}),_S=yt(function(a){var l=yi(a);return rn(l)&&(l=t),Or(En(a,1,rn,!0),Qe(l,2))}),vS=yt(function(a){var l=yi(a);return l=typeof l=="function"?l:t,Or(En(a,1,rn,!0),t,l)});function yS(a){return a&&a.length?Or(a):[]}function xS(a,l){return a&&a.length?Or(a,Qe(l,2)):[]}function MS(a,l){return l=typeof l=="function"?l:t,a&&a.length?Or(a,t,l):[]}function qh(a){if(!(a&&a.length))return[];var l=0;return a=Lr(a,function(f){if(rn(f))return l=pn(f.length,l),!0}),lh(l,function(f){return Vt(a,ah(f))})}function pg(a,l){if(!(a&&a.length))return[];var f=qh(a);return l==null?f:Vt(f,function(x){return Kn(l,t,x)})}var bS=yt(function(a,l){return rn(a)?po(a,l):[]}),SS=yt(function(a){return Ph(Lr(a,rn))}),wS=yt(function(a){var l=yi(a);return rn(l)&&(l=t),Ph(Lr(a,rn),Qe(l,2))}),ES=yt(function(a){var l=yi(a);return l=typeof l=="function"?l:t,Ph(Lr(a,rn),t,l)}),TS=yt(qh);function AS(a,l){return Im(a||[],l||[],fo)}function RS(a,l){return Im(a||[],l||[],_o)}var CS=yt(function(a){var l=a.length,f=l>1?a[l-1]:t;return f=typeof f=="function"?(a.pop(),f):t,pg(a,f)});function mg(a){var l=R(a);return l.__chain__=!0,l}function PS(a,l){return l(a),a}function cl(a,l){return l(a)}var LS=cr(function(a){var l=a.length,f=l?a[0]:0,x=this.__wrapped__,w=function(C){return _h(C,a)};return l>1||this.__actions__.length||!(x instanceof wt)||!lr(f)?this.thru(w):(x=x.slice(f,+f+(l?1:0)),x.__actions__.push({func:cl,args:[w],thisArg:t}),new gi(x,this.__chain__).thru(function(C){return l&&!C.length&&C.push(t),C}))});function IS(){return mg(this)}function US(){return new gi(this.value(),this.__chain__)}function DS(){this.__values__===t&&(this.__values__=Cg(this.value()));var a=this.__index__>=this.__values__.length,l=a?t:this.__values__[this.__index__++];return{done:a,value:l}}function NS(){return this}function OS(a){for(var l,f=this;f instanceof Yc;){var x=cg(f);x.__index__=0,x.__values__=t,l?w.__wrapped__=x:l=x;var w=x;f=f.__wrapped__}return w.__wrapped__=a,l}function FS(){var a=this.__wrapped__;if(a instanceof wt){var l=a;return this.__actions__.length&&(l=new wt(this)),l=l.reverse(),l.__actions__.push({func:cl,args:[Xh],thisArg:t}),new gi(l,this.__chain__)}return this.thru(Xh)}function BS(){return Lm(this.__wrapped__,this.__actions__)}var zS=el(function(a,l,f){Ut.call(a,f)?++a[f]:ar(a,f,1)});function HS(a,l,f){var x=ct(a)?Wp:PM;return f&&On(a,l,f)&&(l=t),x(a,Qe(l,3))}function kS(a,l){var f=ct(a)?Lr:pm;return f(a,Qe(l,3))}var GS=Gm(lg),VS=Gm(ug);function WS(a,l){return En(ll(a,l),1)}function XS(a,l){return En(ll(a,l),ne)}function qS(a,l,f){return f=f===t?1:ht(f),En(ll(a,l),f)}function gg(a,l){var f=ct(a)?pi:Nr;return f(a,Qe(l,3))}function _g(a,l){var f=ct(a)?hx:dm;return f(a,Qe(l,3))}var YS=el(function(a,l,f){Ut.call(a,f)?a[f].push(l):ar(a,f,[l])});function ZS(a,l,f,x){a=Xn(a)?a:pa(a),f=f&&!x?ht(f):0;var w=a.length;return f<0&&(f=pn(w+f,0)),pl(a)?f<=w&&a.indexOf(l,f)>-1:!!w&&na(a,l,f)>-1}var $S=yt(function(a,l,f){var x=-1,w=typeof l=="function",C=Xn(a)?Q(a.length):[];return Nr(a,function(B){C[++x]=w?Kn(l,B,f):mo(B,l,f)}),C}),KS=el(function(a,l,f){ar(a,f,l)});function ll(a,l){var f=ct(a)?Vt:xm;return f(a,Qe(l,3))}function JS(a,l,f,x){return a==null?[]:(ct(l)||(l=l==null?[]:[l]),f=x?t:f,ct(f)||(f=f==null?[]:[f]),wm(a,l,f))}var QS=el(function(a,l,f){a[f?0:1].push(l)},function(){return[[],[]]});function jS(a,l,f){var x=ct(a)?rh:Zp,w=arguments.length<3;return x(a,Qe(l,4),f,w,Nr)}function ew(a,l,f){var x=ct(a)?fx:Zp,w=arguments.length<3;return x(a,Qe(l,4),f,w,dm)}function tw(a,l){var f=ct(a)?Lr:pm;return f(a,fl(Qe(l,3)))}function nw(a){var l=ct(a)?lm:ZM;return l(a)}function iw(a,l,f){(f?On(a,l,f):l===t)?l=1:l=ht(l);var x=ct(a)?EM:$M;return x(a,l)}function rw(a){var l=ct(a)?TM:JM;return l(a)}function sw(a){if(a==null)return 0;if(Xn(a))return pl(a)?ra(a):a.length;var l=Rn(a);return l==ie||l==nt?a.size:Sh(a).length}function aw(a,l,f){var x=ct(a)?sh:QM;return f&&On(a,l,f)&&(l=t),x(a,Qe(l,3))}var ow=yt(function(a,l){if(a==null)return[];var f=l.length;return f>1&&On(a,l[0],l[1])?l=[]:f>2&&On(l[0],l[1],l[2])&&(l=[l[0]]),wm(a,En(l,1),[])}),ul=kx||function(){return wn.Date.now()};function cw(a,l){if(typeof l!="function")throw new mi(o);return a=ht(a),function(){if(--a<1)return l.apply(this,arguments)}}function vg(a,l,f){return l=f?t:l,l=a&&l==null?a.length:l,or(a,F,t,t,t,t,l)}function yg(a,l){var f;if(typeof l!="function")throw new mi(o);return a=ht(a),function(){return--a>0&&(f=l.apply(this,arguments)),a<=1&&(l=t),f}}var Yh=yt(function(a,l,f){var x=y;if(f.length){var w=Ur(f,fa(Yh));x|=A}return or(a,x,l,f,w)}),xg=yt(function(a,l,f){var x=y|g;if(f.length){var w=Ur(f,fa(xg));x|=A}return or(l,x,a,f,w)});function Mg(a,l,f){l=f?t:l;var x=or(a,b,t,t,t,t,t,l);return x.placeholder=Mg.placeholder,x}function bg(a,l,f){l=f?t:l;var x=or(a,E,t,t,t,t,t,l);return x.placeholder=bg.placeholder,x}function Sg(a,l,f){var x,w,C,B,k,W,le=0,ue=!1,ge=!1,Pe=!0;if(typeof a!="function")throw new mi(o);l=xi(l)||0,qt(f)&&(ue=!!f.leading,ge="maxWait"in f,C=ge?pn(xi(f.maxWait)||0,l):C,Pe="trailing"in f?!!f.trailing:Pe);function Xe(sn){var Ai=x,fr=w;return x=w=t,le=sn,B=a.apply(fr,Ai),B}function et(sn){return le=sn,k=xo(Mt,l),ue?Xe(sn):B}function ft(sn){var Ai=sn-W,fr=sn-le,Gg=l-Ai;return ge?An(Gg,C-fr):Gg}function tt(sn){var Ai=sn-W,fr=sn-le;return W===t||Ai>=l||Ai<0||ge&&fr>=C}function Mt(){var sn=ul();if(tt(sn))return Et(sn);k=xo(Mt,ft(sn))}function Et(sn){return k=t,Pe&&x?Xe(sn):(x=w=t,B)}function ei(){k!==t&&Um(k),le=0,x=W=w=k=t}function Fn(){return k===t?B:Et(ul())}function ti(){var sn=ul(),Ai=tt(sn);if(x=arguments,w=this,W=sn,Ai){if(k===t)return et(W);if(ge)return Um(k),k=xo(Mt,l),Xe(W)}return k===t&&(k=xo(Mt,l)),B}return ti.cancel=ei,ti.flush=Fn,ti}var lw=yt(function(a,l){return fm(a,1,l)}),uw=yt(function(a,l,f){return fm(a,xi(l)||0,f)});function hw(a){return or(a,T)}function hl(a,l){if(typeof a!="function"||l!=null&&typeof l!="function")throw new mi(o);var f=function(){var x=arguments,w=l?l.apply(this,x):x[0],C=f.cache;if(C.has(w))return C.get(w);var B=a.apply(this,x);return f.cache=C.set(w,B)||C,B};return f.cache=new(hl.Cache||sr),f}hl.Cache=sr;function fl(a){if(typeof a!="function")throw new mi(o);return function(){var l=arguments;switch(l.length){case 0:return!a.call(this);case 1:return!a.call(this,l[0]);case 2:return!a.call(this,l[0],l[1]);case 3:return!a.call(this,l[0],l[1],l[2])}return!a.apply(this,l)}}function fw(a){return yg(2,a)}var dw=jM(function(a,l){l=l.length==1&&ct(l[0])?Vt(l[0],Jn(Qe())):Vt(En(l,1),Jn(Qe()));var f=l.length;return yt(function(x){for(var w=-1,C=An(x.length,f);++w<C;)x[w]=l[w].call(this,x[w]);return Kn(a,this,x)})}),Zh=yt(function(a,l){var f=Ur(l,fa(Zh));return or(a,A,t,l,f)}),wg=yt(function(a,l){var f=Ur(l,fa(wg));return or(a,L,t,l,f)}),pw=cr(function(a,l){return or(a,N,t,t,t,l)});function mw(a,l){if(typeof a!="function")throw new mi(o);return l=l===t?l:ht(l),yt(a,l)}function gw(a,l){if(typeof a!="function")throw new mi(o);return l=l==null?0:pn(ht(l),0),yt(function(f){var x=f[l],w=Br(f,0,l);return x&&Ir(w,x),Kn(a,this,w)})}function _w(a,l,f){var x=!0,w=!0;if(typeof a!="function")throw new mi(o);return qt(f)&&(x="leading"in f?!!f.leading:x,w="trailing"in f?!!f.trailing:w),Sg(a,l,{leading:x,maxWait:l,trailing:w})}function vw(a){return vg(a,1)}function yw(a,l){return Zh(Ih(l),a)}function xw(){if(!arguments.length)return[];var a=arguments[0];return ct(a)?a:[a]}function Mw(a){return _i(a,_)}function bw(a,l){return l=typeof l=="function"?l:t,_i(a,_,l)}function Sw(a){return _i(a,m|_)}function ww(a,l){return l=typeof l=="function"?l:t,_i(a,m|_,l)}function Ew(a,l){return l==null||hm(a,l,vn(l))}function Ti(a,l){return a===l||a!==a&&l!==l}var Tw=rl(xh),Aw=rl(function(a,l){return a>=l}),ps=_m(function(){return arguments}())?_m:function(a){return Kt(a)&&Ut.call(a,"callee")&&!im.call(a,"callee")},ct=Q.isArray,Rw=Bp?Jn(Bp):OM;function Xn(a){return a!=null&&dl(a.length)&&!ur(a)}function rn(a){return Kt(a)&&Xn(a)}function Cw(a){return a===!0||a===!1||Kt(a)&&Nn(a)==je}var zr=Vx||af,Pw=zp?Jn(zp):FM;function Lw(a){return Kt(a)&&a.nodeType===1&&!Mo(a)}function Iw(a){if(a==null)return!0;if(Xn(a)&&(ct(a)||typeof a=="string"||typeof a.splice=="function"||zr(a)||da(a)||ps(a)))return!a.length;var l=Rn(a);if(l==ie||l==nt)return!a.size;if(yo(a))return!Sh(a).length;for(var f in a)if(Ut.call(a,f))return!1;return!0}function Uw(a,l){return go(a,l)}function Dw(a,l,f){f=typeof f=="function"?f:t;var x=f?f(a,l):t;return x===t?go(a,l,t,f):!!x}function $h(a){if(!Kt(a))return!1;var l=Nn(a);return l==$e||l==At||typeof a.message=="string"&&typeof a.name=="string"&&!Mo(a)}function Nw(a){return typeof a=="number"&&sm(a)}function ur(a){if(!qt(a))return!1;var l=Nn(a);return l==H||l==we||l==Ge||l==Ne}function Eg(a){return typeof a=="number"&&a==ht(a)}function dl(a){return typeof a=="number"&&a>-1&&a%1==0&&a<=oe}function qt(a){var l=typeof a;return a!=null&&(l=="object"||l=="function")}function Kt(a){return a!=null&&typeof a=="object"}var Tg=Hp?Jn(Hp):zM;function Ow(a,l){return a===l||bh(a,l,zh(l))}function Fw(a,l,f){return f=typeof f=="function"?f:t,bh(a,l,zh(l),f)}function Bw(a){return Ag(a)&&a!=+a}function zw(a){if(bb(a))throw new ot(s);return vm(a)}function Hw(a){return a===null}function kw(a){return a==null}function Ag(a){return typeof a=="number"||Kt(a)&&Nn(a)==be}function Mo(a){if(!Kt(a)||Nn(a)!=De)return!1;var l=Hc(a);if(l===null)return!0;var f=Ut.call(l,"constructor")&&l.constructor;return typeof f=="function"&&f instanceof f&&Oc.call(f)==Fx}var Kh=kp?Jn(kp):HM;function Gw(a){return Eg(a)&&a>=-oe&&a<=oe}var Rg=Gp?Jn(Gp):kM;function pl(a){return typeof a=="string"||!ct(a)&&Kt(a)&&Nn(a)==Lt}function jn(a){return typeof a=="symbol"||Kt(a)&&Nn(a)==O}var da=Vp?Jn(Vp):GM;function Vw(a){return a===t}function Ww(a){return Kt(a)&&Rn(a)==te}function Xw(a){return Kt(a)&&Nn(a)==Se}var qw=rl(wh),Yw=rl(function(a,l){return a<=l});function Cg(a){if(!a)return[];if(Xn(a))return pl(a)?wi(a):Wn(a);if(oo&&a[oo])return Ex(a[oo]());var l=Rn(a),f=l==ie?hh:l==nt?Uc:pa;return f(a)}function hr(a){if(!a)return a===0?a:0;if(a=xi(a),a===ne||a===-ne){var l=a<0?-1:1;return l*me}return a===a?a:0}function ht(a){var l=hr(a),f=l%1;return l===l?f?l-f:l:0}function Pg(a){return a?us(ht(a),0,Ee):0}function xi(a){if(typeof a=="number")return a;if(jn(a))return _e;if(qt(a)){var l=typeof a.valueOf=="function"?a.valueOf():a;a=qt(l)?l+"":l}if(typeof a!="string")return a===0?a:+a;a=$p(a);var f=q.test(a);return f||ke.test(a)?cx(a.slice(2),f?2:8):re.test(a)?_e:+a}function Lg(a){return Gi(a,qn(a))}function Zw(a){return a?us(ht(a),-oe,oe):a===0?a:0}function It(a){return a==null?"":Qn(a)}var $w=ua(function(a,l){if(yo(l)||Xn(l)){Gi(l,vn(l),a);return}for(var f in l)Ut.call(l,f)&&fo(a,f,l[f])}),Ig=ua(function(a,l){Gi(l,qn(l),a)}),ml=ua(function(a,l,f,x){Gi(l,qn(l),a,x)}),Kw=ua(function(a,l,f,x){Gi(l,vn(l),a,x)}),Jw=cr(_h);function Qw(a,l){var f=la(a);return l==null?f:um(f,l)}var jw=yt(function(a,l){a=Ft(a);var f=-1,x=l.length,w=x>2?l[2]:t;for(w&&On(l[0],l[1],w)&&(x=1);++f<x;)for(var C=l[f],B=qn(C),k=-1,W=B.length;++k<W;){var le=B[k],ue=a[le];(ue===t||Ti(ue,aa[le])&&!Ut.call(a,le))&&(a[le]=C[le])}return a}),eE=yt(function(a){return a.push(t,$m),Kn(Ug,t,a)});function tE(a,l){return Xp(a,Qe(l,3),ki)}function nE(a,l){return Xp(a,Qe(l,3),yh)}function iE(a,l){return a==null?a:vh(a,Qe(l,3),qn)}function rE(a,l){return a==null?a:mm(a,Qe(l,3),qn)}function sE(a,l){return a&&ki(a,Qe(l,3))}function aE(a,l){return a&&yh(a,Qe(l,3))}function oE(a){return a==null?[]:Kc(a,vn(a))}function cE(a){return a==null?[]:Kc(a,qn(a))}function Jh(a,l,f){var x=a==null?t:hs(a,l);return x===t?f:x}function lE(a,l){return a!=null&&Qm(a,l,IM)}function Qh(a,l){return a!=null&&Qm(a,l,UM)}var uE=Wm(function(a,l,f){l!=null&&typeof l.toString!="function"&&(l=Fc.call(l)),a[l]=f},ef(Yn)),hE=Wm(function(a,l,f){l!=null&&typeof l.toString!="function"&&(l=Fc.call(l)),Ut.call(a,l)?a[l].push(f):a[l]=[f]},Qe),fE=yt(mo);function vn(a){return Xn(a)?cm(a):Sh(a)}function qn(a){return Xn(a)?cm(a,!0):VM(a)}function dE(a,l){var f={};return l=Qe(l,3),ki(a,function(x,w,C){ar(f,l(x,w,C),x)}),f}function pE(a,l){var f={};return l=Qe(l,3),ki(a,function(x,w,C){ar(f,w,l(x,w,C))}),f}var mE=ua(function(a,l,f){Jc(a,l,f)}),Ug=ua(function(a,l,f,x){Jc(a,l,f,x)}),gE=cr(function(a,l){var f={};if(a==null)return f;var x=!1;l=Vt(l,function(C){return C=Fr(C,a),x||(x=C.length>1),C}),Gi(a,Fh(a),f),x&&(f=_i(f,m|p|_,ub));for(var w=l.length;w--;)Ch(f,l[w]);return f});function _E(a,l){return Dg(a,fl(Qe(l)))}var vE=cr(function(a,l){return a==null?{}:XM(a,l)});function Dg(a,l){if(a==null)return{};var f=Vt(Fh(a),function(x){return[x]});return l=Qe(l),Em(a,f,function(x,w){return l(x,w[0])})}function yE(a,l,f){l=Fr(l,a);var x=-1,w=l.length;for(w||(w=1,a=t);++x<w;){var C=a==null?t:a[Vi(l[x])];C===t&&(x=w,C=f),a=ur(C)?C.call(a):C}return a}function xE(a,l,f){return a==null?a:_o(a,l,f)}function ME(a,l,f,x){return x=typeof x=="function"?x:t,a==null?a:_o(a,l,f,x)}var Ng=Ym(vn),Og=Ym(qn);function bE(a,l,f){var x=ct(a),w=x||zr(a)||da(a);if(l=Qe(l,4),f==null){var C=a&&a.constructor;w?f=x?new C:[]:qt(a)?f=ur(C)?la(Hc(a)):{}:f={}}return(w?pi:ki)(a,function(B,k,W){return l(f,B,k,W)}),f}function SE(a,l){return a==null?!0:Ch(a,l)}function wE(a,l,f){return a==null?a:Pm(a,l,Ih(f))}function EE(a,l,f,x){return x=typeof x=="function"?x:t,a==null?a:Pm(a,l,Ih(f),x)}function pa(a){return a==null?[]:uh(a,vn(a))}function TE(a){return a==null?[]:uh(a,qn(a))}function AE(a,l,f){return f===t&&(f=l,l=t),f!==t&&(f=xi(f),f=f===f?f:0),l!==t&&(l=xi(l),l=l===l?l:0),us(xi(a),l,f)}function RE(a,l,f){return l=hr(l),f===t?(f=l,l=0):f=hr(f),a=xi(a),DM(a,l,f)}function CE(a,l,f){if(f&&typeof f!="boolean"&&On(a,l,f)&&(l=f=t),f===t&&(typeof l=="boolean"?(f=l,l=t):typeof a=="boolean"&&(f=a,a=t)),a===t&&l===t?(a=0,l=1):(a=hr(a),l===t?(l=a,a=0):l=hr(l)),a>l){var x=a;a=l,l=x}if(f||a%1||l%1){var w=am();return An(a+w*(l-a+ox("1e-"+((w+"").length-1))),l)}return Th(a,l)}var PE=ha(function(a,l,f){return l=l.toLowerCase(),a+(f?Fg(l):l)});function Fg(a){return jh(It(a).toLowerCase())}function Bg(a){return a=It(a),a&&a.replace(rt,xx).replace(Jy,"")}function LE(a,l,f){a=It(a),l=Qn(l);var x=a.length;f=f===t?x:us(ht(f),0,x);var w=f;return f-=l.length,f>=0&&a.slice(f,w)==l}function IE(a){return a=It(a),a&&Tt.test(a)?a.replace(Te,Mx):a}function UE(a){return a=It(a),a&&Rc.test(a)?a.replace($s,"\\$&"):a}var DE=ha(function(a,l,f){return a+(f?"-":"")+l.toLowerCase()}),NE=ha(function(a,l,f){return a+(f?" ":"")+l.toLowerCase()}),OE=km("toLowerCase");function FE(a,l,f){a=It(a),l=ht(l);var x=l?ra(a):0;if(!l||x>=l)return a;var w=(l-x)/2;return il(Wc(w),f)+a+il(Vc(w),f)}function BE(a,l,f){a=It(a),l=ht(l);var x=l?ra(a):0;return l&&x<l?a+il(l-x,f):a}function zE(a,l,f){a=It(a),l=ht(l);var x=l?ra(a):0;return l&&x<l?il(l-x,f)+a:a}function HE(a,l,f){return f||l==null?l=0:l&&(l=+l),Yx(It(a).replace(no,""),l||0)}function kE(a,l,f){return(f?On(a,l,f):l===t)?l=1:l=ht(l),Ah(It(a),l)}function GE(){var a=arguments,l=It(a[0]);return a.length<3?l:l.replace(a[1],a[2])}var VE=ha(function(a,l,f){return a+(f?"_":"")+l.toLowerCase()});function WE(a,l,f){return f&&typeof f!="number"&&On(a,l,f)&&(l=f=t),f=f===t?Ee:f>>>0,f?(a=It(a),a&&(typeof l=="string"||l!=null&&!Kh(l))&&(l=Qn(l),!l&&ia(a))?Br(wi(a),0,f):a.split(l,f)):[]}var XE=ha(function(a,l,f){return a+(f?" ":"")+jh(l)});function qE(a,l,f){return a=It(a),f=f==null?0:us(ht(f),0,a.length),l=Qn(l),a.slice(f,f+l.length)==l}function YE(a,l,f){var x=R.templateSettings;f&&On(a,l,f)&&(l=t),a=It(a),l=ml({},l,x,Zm);var w=ml({},l.imports,x.imports,Zm),C=vn(w),B=uh(w,C),k,W,le=0,ue=l.interpolate||it,ge="__p += '",Pe=fh((l.escape||it).source+"|"+ue.source+"|"+(ue===Hi?D:it).source+"|"+(l.evaluate||it).source+"|$","g"),Xe="//# sourceURL="+(Ut.call(l,"sourceURL")?(l.sourceURL+"").replace(/\s/g," "):"lodash.templateSources["+ ++nx+"]")+`
`;a.replace(Pe,function(tt,Mt,Et,ei,Fn,ti){return Et||(Et=ei),ge+=a.slice(le,ti).replace(vt,bx),Mt&&(k=!0,ge+=`' +
__e(`+Mt+`) +
'`),Fn&&(W=!0,ge+=`';
`+Fn+`;
__p += '`),Et&&(ge+=`' +
((__t = (`+Et+`)) == null ? '' : __t) +
'`),le=ti+tt.length,tt}),ge+=`';
`;var et=Ut.call(l,"variable")&&l.variable;if(!et)ge=`with (obj) {
`+ge+`
}
`;else if(Zu.test(et))throw new ot(c);ge=(W?ge.replace(xt,""):ge).replace(G,"$1").replace(Ce,"$1;"),ge="function("+(et||"obj")+`) {
`+(et?"":`obj || (obj = {});
`)+"var __t, __p = ''"+(k?", __e = _.escape":"")+(W?`, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
`:`;
`)+ge+`return __p
}`;var ft=Hg(function(){return Pt(C,Xe+"return "+ge).apply(t,B)});if(ft.source=ge,$h(ft))throw ft;return ft}function ZE(a){return It(a).toLowerCase()}function $E(a){return It(a).toUpperCase()}function KE(a,l,f){if(a=It(a),a&&(f||l===t))return $p(a);if(!a||!(l=Qn(l)))return a;var x=wi(a),w=wi(l),C=Kp(x,w),B=Jp(x,w)+1;return Br(x,C,B).join("")}function JE(a,l,f){if(a=It(a),a&&(f||l===t))return a.slice(0,jp(a)+1);if(!a||!(l=Qn(l)))return a;var x=wi(a),w=Jp(x,wi(l))+1;return Br(x,0,w).join("")}function QE(a,l,f){if(a=It(a),a&&(f||l===t))return a.replace(no,"");if(!a||!(l=Qn(l)))return a;var x=wi(a),w=Kp(x,wi(l));return Br(x,w).join("")}function jE(a,l){var f=U,x=$;if(qt(l)){var w="separator"in l?l.separator:w;f="length"in l?ht(l.length):f,x="omission"in l?Qn(l.omission):x}a=It(a);var C=a.length;if(ia(a)){var B=wi(a);C=B.length}if(f>=C)return a;var k=f-ra(x);if(k<1)return x;var W=B?Br(B,0,k).join(""):a.slice(0,k);if(w===t)return W+x;if(B&&(k+=W.length-k),Kh(w)){if(a.slice(k).search(w)){var le,ue=W;for(w.global||(w=fh(w.source,It(K.exec(w))+"g")),w.lastIndex=0;le=w.exec(ue);)var ge=le.index;W=W.slice(0,ge===t?k:ge)}}else if(a.indexOf(Qn(w),k)!=k){var Pe=W.lastIndexOf(w);Pe>-1&&(W=W.slice(0,Pe))}return W+x}function e1(a){return a=It(a),a&&Le.test(a)?a.replace(ee,Cx):a}var t1=ha(function(a,l,f){return a+(f?" ":"")+l.toUpperCase()}),jh=km("toUpperCase");function zg(a,l,f){return a=It(a),l=f?t:l,l===t?wx(a)?Ix(a):mx(a):a.match(l)||[]}var Hg=yt(function(a,l){try{return Kn(a,t,l)}catch(f){return $h(f)?f:new ot(f)}}),n1=cr(function(a,l){return pi(l,function(f){f=Vi(f),ar(a,f,Yh(a[f],a))}),a});function i1(a){var l=a==null?0:a.length,f=Qe();return a=l?Vt(a,function(x){if(typeof x[1]!="function")throw new mi(o);return[f(x[0]),x[1]]}):[],yt(function(x){for(var w=-1;++w<l;){var C=a[w];if(Kn(C[0],this,x))return Kn(C[1],this,x)}})}function r1(a){return CM(_i(a,m))}function ef(a){return function(){return a}}function s1(a,l){return a==null||a!==a?l:a}var a1=Vm(),o1=Vm(!0);function Yn(a){return a}function tf(a){return ym(typeof a=="function"?a:_i(a,m))}function c1(a){return Mm(_i(a,m))}function l1(a,l){return bm(a,_i(l,m))}var u1=yt(function(a,l){return function(f){return mo(f,a,l)}}),h1=yt(function(a,l){return function(f){return mo(a,f,l)}});function nf(a,l,f){var x=vn(l),w=Kc(l,x);f==null&&!(qt(l)&&(w.length||!x.length))&&(f=l,l=a,a=this,w=Kc(l,vn(l)));var C=!(qt(f)&&"chain"in f)||!!f.chain,B=ur(a);return pi(w,function(k){var W=l[k];a[k]=W,B&&(a.prototype[k]=function(){var le=this.__chain__;if(C||le){var ue=a(this.__wrapped__),ge=ue.__actions__=Wn(this.__actions__);return ge.push({func:W,args:arguments,thisArg:a}),ue.__chain__=le,ue}return W.apply(a,Ir([this.value()],arguments))})}),a}function f1(){return wn._===this&&(wn._=Bx),this}function rf(){}function d1(a){return a=ht(a),yt(function(l){return Sm(l,a)})}var p1=Dh(Vt),m1=Dh(Wp),g1=Dh(sh);function kg(a){return kh(a)?ah(Vi(a)):qM(a)}function _1(a){return function(l){return a==null?t:hs(a,l)}}var v1=Xm(),y1=Xm(!0);function sf(){return[]}function af(){return!1}function x1(){return{}}function M1(){return""}function b1(){return!0}function S1(a,l){if(a=ht(a),a<1||a>oe)return[];var f=Ee,x=An(a,Ee);l=Qe(l),a-=Ee;for(var w=lh(x,l);++f<a;)l(f);return w}function w1(a){return ct(a)?Vt(a,Vi):jn(a)?[a]:Wn(og(It(a)))}function E1(a){var l=++Ox;return It(a)+l}var T1=nl(function(a,l){return a+l},0),A1=Nh("ceil"),R1=nl(function(a,l){return a/l},1),C1=Nh("floor");function P1(a){return a&&a.length?$c(a,Yn,xh):t}function L1(a,l){return a&&a.length?$c(a,Qe(l,2),xh):t}function I1(a){return Yp(a,Yn)}function U1(a,l){return Yp(a,Qe(l,2))}function D1(a){return a&&a.length?$c(a,Yn,wh):t}function N1(a,l){return a&&a.length?$c(a,Qe(l,2),wh):t}var O1=nl(function(a,l){return a*l},1),F1=Nh("round"),B1=nl(function(a,l){return a-l},0);function z1(a){return a&&a.length?ch(a,Yn):0}function H1(a,l){return a&&a.length?ch(a,Qe(l,2)):0}return R.after=cw,R.ary=vg,R.assign=$w,R.assignIn=Ig,R.assignInWith=ml,R.assignWith=Kw,R.at=Jw,R.before=yg,R.bind=Yh,R.bindAll=n1,R.bindKey=xg,R.castArray=xw,R.chain=mg,R.chunk=Cb,R.compact=Pb,R.concat=Lb,R.cond=i1,R.conforms=r1,R.constant=ef,R.countBy=zS,R.create=Qw,R.curry=Mg,R.curryRight=bg,R.debounce=Sg,R.defaults=jw,R.defaultsDeep=eE,R.defer=lw,R.delay=uw,R.difference=Ib,R.differenceBy=Ub,R.differenceWith=Db,R.drop=Nb,R.dropRight=Ob,R.dropRightWhile=Fb,R.dropWhile=Bb,R.fill=zb,R.filter=kS,R.flatMap=WS,R.flatMapDeep=XS,R.flatMapDepth=qS,R.flatten=hg,R.flattenDeep=Hb,R.flattenDepth=kb,R.flip=hw,R.flow=a1,R.flowRight=o1,R.fromPairs=Gb,R.functions=oE,R.functionsIn=cE,R.groupBy=YS,R.initial=Wb,R.intersection=Xb,R.intersectionBy=qb,R.intersectionWith=Yb,R.invert=uE,R.invertBy=hE,R.invokeMap=$S,R.iteratee=tf,R.keyBy=KS,R.keys=vn,R.keysIn=qn,R.map=ll,R.mapKeys=dE,R.mapValues=pE,R.matches=c1,R.matchesProperty=l1,R.memoize=hl,R.merge=mE,R.mergeWith=Ug,R.method=u1,R.methodOf=h1,R.mixin=nf,R.negate=fl,R.nthArg=d1,R.omit=gE,R.omitBy=_E,R.once=fw,R.orderBy=JS,R.over=p1,R.overArgs=dw,R.overEvery=m1,R.overSome=g1,R.partial=Zh,R.partialRight=wg,R.partition=QS,R.pick=vE,R.pickBy=Dg,R.property=kg,R.propertyOf=_1,R.pull=Jb,R.pullAll=dg,R.pullAllBy=Qb,R.pullAllWith=jb,R.pullAt=eS,R.range=v1,R.rangeRight=y1,R.rearg=pw,R.reject=tw,R.remove=tS,R.rest=mw,R.reverse=Xh,R.sampleSize=iw,R.set=xE,R.setWith=ME,R.shuffle=rw,R.slice=nS,R.sortBy=ow,R.sortedUniq=lS,R.sortedUniqBy=uS,R.split=WE,R.spread=gw,R.tail=hS,R.take=fS,R.takeRight=dS,R.takeRightWhile=pS,R.takeWhile=mS,R.tap=PS,R.throttle=_w,R.thru=cl,R.toArray=Cg,R.toPairs=Ng,R.toPairsIn=Og,R.toPath=w1,R.toPlainObject=Lg,R.transform=bE,R.unary=vw,R.union=gS,R.unionBy=_S,R.unionWith=vS,R.uniq=yS,R.uniqBy=xS,R.uniqWith=MS,R.unset=SE,R.unzip=qh,R.unzipWith=pg,R.update=wE,R.updateWith=EE,R.values=pa,R.valuesIn=TE,R.without=bS,R.words=zg,R.wrap=yw,R.xor=SS,R.xorBy=wS,R.xorWith=ES,R.zip=TS,R.zipObject=AS,R.zipObjectDeep=RS,R.zipWith=CS,R.entries=Ng,R.entriesIn=Og,R.extend=Ig,R.extendWith=ml,nf(R,R),R.add=T1,R.attempt=Hg,R.camelCase=PE,R.capitalize=Fg,R.ceil=A1,R.clamp=AE,R.clone=Mw,R.cloneDeep=Sw,R.cloneDeepWith=ww,R.cloneWith=bw,R.conformsTo=Ew,R.deburr=Bg,R.defaultTo=s1,R.divide=R1,R.endsWith=LE,R.eq=Ti,R.escape=IE,R.escapeRegExp=UE,R.every=HS,R.find=GS,R.findIndex=lg,R.findKey=tE,R.findLast=VS,R.findLastIndex=ug,R.findLastKey=nE,R.floor=C1,R.forEach=gg,R.forEachRight=_g,R.forIn=iE,R.forInRight=rE,R.forOwn=sE,R.forOwnRight=aE,R.get=Jh,R.gt=Tw,R.gte=Aw,R.has=lE,R.hasIn=Qh,R.head=fg,R.identity=Yn,R.includes=ZS,R.indexOf=Vb,R.inRange=RE,R.invoke=fE,R.isArguments=ps,R.isArray=ct,R.isArrayBuffer=Rw,R.isArrayLike=Xn,R.isArrayLikeObject=rn,R.isBoolean=Cw,R.isBuffer=zr,R.isDate=Pw,R.isElement=Lw,R.isEmpty=Iw,R.isEqual=Uw,R.isEqualWith=Dw,R.isError=$h,R.isFinite=Nw,R.isFunction=ur,R.isInteger=Eg,R.isLength=dl,R.isMap=Tg,R.isMatch=Ow,R.isMatchWith=Fw,R.isNaN=Bw,R.isNative=zw,R.isNil=kw,R.isNull=Hw,R.isNumber=Ag,R.isObject=qt,R.isObjectLike=Kt,R.isPlainObject=Mo,R.isRegExp=Kh,R.isSafeInteger=Gw,R.isSet=Rg,R.isString=pl,R.isSymbol=jn,R.isTypedArray=da,R.isUndefined=Vw,R.isWeakMap=Ww,R.isWeakSet=Xw,R.join=Zb,R.kebabCase=DE,R.last=yi,R.lastIndexOf=$b,R.lowerCase=NE,R.lowerFirst=OE,R.lt=qw,R.lte=Yw,R.max=P1,R.maxBy=L1,R.mean=I1,R.meanBy=U1,R.min=D1,R.minBy=N1,R.stubArray=sf,R.stubFalse=af,R.stubObject=x1,R.stubString=M1,R.stubTrue=b1,R.multiply=O1,R.nth=Kb,R.noConflict=f1,R.noop=rf,R.now=ul,R.pad=FE,R.padEnd=BE,R.padStart=zE,R.parseInt=HE,R.random=CE,R.reduce=jS,R.reduceRight=ew,R.repeat=kE,R.replace=GE,R.result=yE,R.round=F1,R.runInContext=V,R.sample=nw,R.size=sw,R.snakeCase=VE,R.some=aw,R.sortedIndex=iS,R.sortedIndexBy=rS,R.sortedIndexOf=sS,R.sortedLastIndex=aS,R.sortedLastIndexBy=oS,R.sortedLastIndexOf=cS,R.startCase=XE,R.startsWith=qE,R.subtract=B1,R.sum=z1,R.sumBy=H1,R.template=YE,R.times=S1,R.toFinite=hr,R.toInteger=ht,R.toLength=Pg,R.toLower=ZE,R.toNumber=xi,R.toSafeInteger=Zw,R.toString=It,R.toUpper=$E,R.trim=KE,R.trimEnd=JE,R.trimStart=QE,R.truncate=jE,R.unescape=e1,R.uniqueId=E1,R.upperCase=t1,R.upperFirst=jh,R.each=gg,R.eachRight=_g,R.first=fg,nf(R,function(){var a={};return ki(R,function(l,f){Ut.call(R.prototype,f)||(a[f]=l)}),a}(),{chain:!1}),R.VERSION=n,pi(["bind","bindKey","curry","curryRight","partial","partialRight"],function(a){R[a].placeholder=R}),pi(["drop","take"],function(a,l){wt.prototype[a]=function(f){f=f===t?1:pn(ht(f),0);var x=this.__filtered__&&!l?new wt(this):this.clone();return x.__filtered__?x.__takeCount__=An(f,x.__takeCount__):x.__views__.push({size:An(f,Ee),type:a+(x.__dir__<0?"Right":"")}),x},wt.prototype[a+"Right"]=function(f){return this.reverse()[a](f).reverse()}}),pi(["filter","map","takeWhile"],function(a,l){var f=l+1,x=f==Z||f==pe;wt.prototype[a]=function(w){var C=this.clone();return C.__iteratees__.push({iteratee:Qe(w,3),type:f}),C.__filtered__=C.__filtered__||x,C}}),pi(["head","last"],function(a,l){var f="take"+(l?"Right":"");wt.prototype[a]=function(){return this[f](1).value()[0]}}),pi(["initial","tail"],function(a,l){var f="drop"+(l?"":"Right");wt.prototype[a]=function(){return this.__filtered__?new wt(this):this[f](1)}}),wt.prototype.compact=function(){return this.filter(Yn)},wt.prototype.find=function(a){return this.filter(a).head()},wt.prototype.findLast=function(a){return this.reverse().find(a)},wt.prototype.invokeMap=yt(function(a,l){return typeof a=="function"?new wt(this):this.map(function(f){return mo(f,a,l)})}),wt.prototype.reject=function(a){return this.filter(fl(Qe(a)))},wt.prototype.slice=function(a,l){a=ht(a);var f=this;return f.__filtered__&&(a>0||l<0)?new wt(f):(a<0?f=f.takeRight(-a):a&&(f=f.drop(a)),l!==t&&(l=ht(l),f=l<0?f.dropRight(-l):f.take(l-a)),f)},wt.prototype.takeRightWhile=function(a){return this.reverse().takeWhile(a).reverse()},wt.prototype.toArray=function(){return this.take(Ee)},ki(wt.prototype,function(a,l){var f=/^(?:filter|find|map|reject)|While$/.test(l),x=/^(?:head|last)$/.test(l),w=R[x?"take"+(l=="last"?"Right":""):l],C=x||/^find/.test(l);w&&(R.prototype[l]=function(){var B=this.__wrapped__,k=x?[1]:arguments,W=B instanceof wt,le=k[0],ue=W||ct(B),ge=function(Mt){var Et=w.apply(R,Ir([Mt],k));return x&&Pe?Et[0]:Et};ue&&f&&typeof le=="function"&&le.length!=1&&(W=ue=!1);var Pe=this.__chain__,Xe=!!this.__actions__.length,et=C&&!Pe,ft=W&&!Xe;if(!C&&ue){B=ft?B:new wt(this);var tt=a.apply(B,k);return tt.__actions__.push({func:cl,args:[ge],thisArg:t}),new gi(tt,Pe)}return et&&ft?a.apply(this,k):(tt=this.thru(ge),et?x?tt.value()[0]:tt.value():tt)})}),pi(["pop","push","shift","sort","splice","unshift"],function(a){var l=Dc[a],f=/^(?:push|sort|unshift)$/.test(a)?"tap":"thru",x=/^(?:pop|shift)$/.test(a);R.prototype[a]=function(){var w=arguments;if(x&&!this.__chain__){var C=this.value();return l.apply(ct(C)?C:[],w)}return this[f](function(B){return l.apply(ct(B)?B:[],w)})}}),ki(wt.prototype,function(a,l){var f=R[l];if(f){var x=f.name+"";Ut.call(ca,x)||(ca[x]=[]),ca[x].push({name:l,func:f})}}),ca[tl(t,g).name]=[{name:"wrapper",func:t}],wt.prototype.clone=eM,wt.prototype.reverse=tM,wt.prototype.value=nM,R.prototype.at=LS,R.prototype.chain=IS,R.prototype.commit=US,R.prototype.next=DS,R.prototype.plant=OS,R.prototype.reverse=FS,R.prototype.toJSON=R.prototype.valueOf=R.prototype.value=BS,R.prototype.first=R.prototype.head,oo&&(R.prototype[oo]=NS),R},sa=Ux();as?((as.exports=sa)._=sa,th._=sa):wn._=sa}).call(bo)})(wu,wu.exports);wu.exports;const oD=()=>sD("threlte-controls",{orbitControls:Si(void 0)}),S0={type:"change"},Gf={type:"start"},w0={type:"end"};let cD=class extends ji{constructor(e,t){super(),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new I,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:ws.ROTATE,MIDDLE:ws.DOLLY,RIGHT:ws.PAN},this.touches={ONE:Es.ROTATE,TWO:Es.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return c.phi},this.getAzimuthalAngle=function(){return c.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(z){z.addEventListener("keydown",Ze),this._domElementKeyEvents=z},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",Ze),this._domElementKeyEvents=null},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(S0),n.update(),s=i.NONE},this.update=function(){const z=new I,de=new Un().setFromUnitVectors(e.up,new I(0,1,0)),xe=de.clone().invert(),J=new I,ze=new Un,qe=new I,Ve=2*Math.PI;return function(){const Fe=n.object.position;z.copy(Fe).sub(n.target),z.applyQuaternion(de),c.setFromVector3(z),n.autoRotate&&s===i.NONE&&T(F()),n.enableDamping?(c.theta+=u.theta*n.dampingFactor,c.phi+=u.phi*n.dampingFactor):(c.theta+=u.theta,c.phi+=u.phi);let Je=n.minAzimuthAngle,xt=n.maxAzimuthAngle;return isFinite(Je)&&isFinite(xt)&&(Je<-Math.PI?Je+=Ve:Je>Math.PI&&(Je-=Ve),xt<-Math.PI?xt+=Ve:xt>Math.PI&&(xt-=Ve),Je<=xt?c.theta=Math.max(Je,Math.min(xt,c.theta)):c.theta=c.theta>(Je+xt)/2?Math.max(Je,c.theta):Math.min(xt,c.theta)),c.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,c.phi)),c.makeSafe(),c.radius*=h,c.radius=Math.max(n.minDistance,Math.min(n.maxDistance,c.radius)),n.enableDamping===!0?n.target.addScaledVector(d,n.dampingFactor):n.target.add(d),z.setFromSpherical(c),z.applyQuaternion(xe),Fe.copy(n.target).add(z),n.object.lookAt(n.target),n.enableDamping===!0?(u.theta*=1-n.dampingFactor,u.phi*=1-n.dampingFactor,d.multiplyScalar(1-n.dampingFactor)):(u.set(0,0,0),d.set(0,0,0)),h=1,m||J.distanceToSquared(n.object.position)>o||8*(1-ze.dot(n.object.quaternion))>o||qe.distanceToSquared(n.target)>0?(n.dispatchEvent(S0),J.copy(n.object.position),ze.copy(n.object.quaternion),qe.copy(n.target),m=!1,!0):!1}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",O),n.domElement.removeEventListener("pointerdown",ie),n.domElement.removeEventListener("pointercancel",fe),n.domElement.removeEventListener("wheel",Ne),n.domElement.removeEventListener("pointermove",be),n.domElement.removeEventListener("pointerup",fe),n._domElementKeyEvents!==null&&(n._domElementKeyEvents.removeEventListener("keydown",Ze),n._domElementKeyEvents=null)};const n=this,i={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let s=i.NONE;const o=1e-6,c=new Pd,u=new Pd;let h=1;const d=new I;let m=!1;const p=new ce,_=new ce,v=new ce,M=new ce,y=new ce,g=new ce,S=new ce,b=new ce,E=new ce,A=[],L={};function F(){return 2*Math.PI/60/60*n.autoRotateSpeed}function N(){return Math.pow(.95,n.zoomSpeed)}function T(z){u.theta-=z}function U(z){u.phi-=z}const $=function(){const z=new I;return function(xe,J){z.setFromMatrixColumn(J,0),z.multiplyScalar(-xe),d.add(z)}}(),he=function(){const z=new I;return function(xe,J){n.screenSpacePanning===!0?z.setFromMatrixColumn(J,1):(z.setFromMatrixColumn(J,0),z.crossVectors(n.object.up,z)),z.multiplyScalar(xe),d.add(z)}}(),Y=function(){const z=new I;return function(xe,J){const ze=n.domElement;if(n.object.isPerspectiveCamera){const qe=n.object.position;z.copy(qe).sub(n.target);let Ve=z.length();Ve*=Math.tan(n.object.fov/2*Math.PI/180),$(2*xe*Ve/ze.clientHeight,n.object.matrix),he(2*J*Ve/ze.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?($(xe*(n.object.right-n.object.left)/n.object.zoom/ze.clientWidth,n.object.matrix),he(J*(n.object.top-n.object.bottom)/n.object.zoom/ze.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function Z(z){n.object.isPerspectiveCamera?h/=z:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*z)),n.object.updateProjectionMatrix(),m=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function X(z){n.object.isPerspectiveCamera?h*=z:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/z)),n.object.updateProjectionMatrix(),m=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function pe(z){p.set(z.clientX,z.clientY)}function ne(z){S.set(z.clientX,z.clientY)}function oe(z){M.set(z.clientX,z.clientY)}function me(z){_.set(z.clientX,z.clientY),v.subVectors(_,p).multiplyScalar(n.rotateSpeed);const de=n.domElement;T(2*Math.PI*v.x/de.clientHeight),U(2*Math.PI*v.y/de.clientHeight),p.copy(_),n.update()}function _e(z){b.set(z.clientX,z.clientY),E.subVectors(b,S),E.y>0?Z(N()):E.y<0&&X(N()),S.copy(b),n.update()}function Ee(z){y.set(z.clientX,z.clientY),g.subVectors(y,M).multiplyScalar(n.panSpeed),Y(g.x,g.y),M.copy(y),n.update()}function j(z){z.deltaY<0?X(N()):z.deltaY>0&&Z(N()),n.update()}function ve(z){let de=!1;switch(z.code){case n.keys.UP:z.ctrlKey||z.metaKey||z.shiftKey?U(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):Y(0,n.keyPanSpeed),de=!0;break;case n.keys.BOTTOM:z.ctrlKey||z.metaKey||z.shiftKey?U(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):Y(0,-n.keyPanSpeed),de=!0;break;case n.keys.LEFT:z.ctrlKey||z.metaKey||z.shiftKey?T(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):Y(n.keyPanSpeed,0),de=!0;break;case n.keys.RIGHT:z.ctrlKey||z.metaKey||z.shiftKey?T(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):Y(-n.keyPanSpeed,0),de=!0;break}de&&(z.preventDefault(),n.update())}function Me(){if(A.length===1)p.set(A[0].pageX,A[0].pageY);else{const z=.5*(A[0].pageX+A[1].pageX),de=.5*(A[0].pageY+A[1].pageY);p.set(z,de)}}function Re(){if(A.length===1)M.set(A[0].pageX,A[0].pageY);else{const z=.5*(A[0].pageX+A[1].pageX),de=.5*(A[0].pageY+A[1].pageY);M.set(z,de)}}function Ie(){const z=A[0].pageX-A[1].pageX,de=A[0].pageY-A[1].pageY,xe=Math.sqrt(z*z+de*de);S.set(0,xe)}function Ge(){n.enableZoom&&Ie(),n.enablePan&&Re()}function je(){n.enableZoom&&Ie(),n.enableRotate&&Me()}function Ye(z){if(A.length==1)_.set(z.pageX,z.pageY);else{const xe=ye(z),J=.5*(z.pageX+xe.x),ze=.5*(z.pageY+xe.y);_.set(J,ze)}v.subVectors(_,p).multiplyScalar(n.rotateSpeed);const de=n.domElement;T(2*Math.PI*v.x/de.clientHeight),U(2*Math.PI*v.y/de.clientHeight),p.copy(_)}function At(z){if(A.length===1)y.set(z.pageX,z.pageY);else{const de=ye(z),xe=.5*(z.pageX+de.x),J=.5*(z.pageY+de.y);y.set(xe,J)}g.subVectors(y,M).multiplyScalar(n.panSpeed),Y(g.x,g.y),M.copy(y)}function $e(z){const de=ye(z),xe=z.pageX-de.x,J=z.pageY-de.y,ze=Math.sqrt(xe*xe+J*J);b.set(0,ze),E.set(0,Math.pow(b.y/S.y,n.zoomSpeed)),Z(E.y),S.copy(b)}function H(z){n.enableZoom&&$e(z),n.enablePan&&At(z)}function we(z){n.enableZoom&&$e(z),n.enableRotate&&Ye(z)}function ie(z){n.enabled!==!1&&(A.length===0&&(n.domElement.setPointerCapture(z.pointerId),n.domElement.addEventListener("pointermove",be),n.domElement.addEventListener("pointerup",fe)),P(z),z.pointerType==="touch"?nt(z):De(z))}function be(z){n.enabled!==!1&&(z.pointerType==="touch"?Lt(z):Ue(z))}function fe(z){te(z),A.length===0&&(n.domElement.releasePointerCapture(z.pointerId),n.domElement.removeEventListener("pointermove",be),n.domElement.removeEventListener("pointerup",fe)),n.dispatchEvent(w0),s=i.NONE}function De(z){let de;switch(z.button){case 0:de=n.mouseButtons.LEFT;break;case 1:de=n.mouseButtons.MIDDLE;break;case 2:de=n.mouseButtons.RIGHT;break;default:de=-1}switch(de){case ws.DOLLY:if(n.enableZoom===!1)return;ne(z),s=i.DOLLY;break;case ws.ROTATE:if(z.ctrlKey||z.metaKey||z.shiftKey){if(n.enablePan===!1)return;oe(z),s=i.PAN}else{if(n.enableRotate===!1)return;pe(z),s=i.ROTATE}break;case ws.PAN:if(z.ctrlKey||z.metaKey||z.shiftKey){if(n.enableRotate===!1)return;pe(z),s=i.ROTATE}else{if(n.enablePan===!1)return;oe(z),s=i.PAN}break;default:s=i.NONE}s!==i.NONE&&n.dispatchEvent(Gf)}function Ue(z){switch(s){case i.ROTATE:if(n.enableRotate===!1)return;me(z);break;case i.DOLLY:if(n.enableZoom===!1)return;_e(z);break;case i.PAN:if(n.enablePan===!1)return;Ee(z);break}}function Ne(z){n.enabled===!1||n.enableZoom===!1||s!==i.NONE||(z.preventDefault(),n.dispatchEvent(Gf),j(z),n.dispatchEvent(w0))}function Ze(z){n.enabled===!1||n.enablePan===!1||ve(z)}function nt(z){switch(Se(z),A.length){case 1:switch(n.touches.ONE){case Es.ROTATE:if(n.enableRotate===!1)return;Me(),s=i.TOUCH_ROTATE;break;case Es.PAN:if(n.enablePan===!1)return;Re(),s=i.TOUCH_PAN;break;default:s=i.NONE}break;case 2:switch(n.touches.TWO){case Es.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Ge(),s=i.TOUCH_DOLLY_PAN;break;case Es.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;je(),s=i.TOUCH_DOLLY_ROTATE;break;default:s=i.NONE}break;default:s=i.NONE}s!==i.NONE&&n.dispatchEvent(Gf)}function Lt(z){switch(Se(z),s){case i.TOUCH_ROTATE:if(n.enableRotate===!1)return;Ye(z),n.update();break;case i.TOUCH_PAN:if(n.enablePan===!1)return;At(z),n.update();break;case i.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;H(z),n.update();break;case i.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;we(z),n.update();break;default:s=i.NONE}}function O(z){n.enabled!==!1&&z.preventDefault()}function P(z){A.push(z)}function te(z){delete L[z.pointerId];for(let de=0;de<A.length;de++)if(A[de].pointerId==z.pointerId){A.splice(de,1);return}}function Se(z){let de=L[z.pointerId];de===void 0&&(de=new ce,L[z.pointerId]=de),de.set(z.pageX,z.pageY)}function ye(z){const de=z.pointerId===A[0].pointerId?A[1]:A[0];return L[de.pointerId]}n.domElement.addEventListener("contextmenu",O),n.domElement.addEventListener("pointerdown",ie),n.domElement.addEventListener("pointercancel",fe),n.domElement.addEventListener("wheel",Ne,{passive:!1}),this.update()}};const lD=r=>({ref:r&1}),E0=r=>({ref:r[0]});function uD(r){let e;const t=r[7].default,n=Gs(t,r,r[10],E0);return{c(){n&&n.c()},l(i){n&&n.l(i)},m(i,s){n&&n.m(i,s),e=!0},p(i,s){n&&n.p&&(!e||s&1025)&&Vs(n,t,i,i[10],e?Xs(t,i[10],s,lD):Ws(i[10]),E0)},i(i){e||(gt(n,i),e=!0)},o(i){bt(n,i),e=!1},d(i){n&&n.d(i)}}}function hD(r){let e,t;const n=[{is:r[0]},r[6]];let i={$$slots:{default:[uD,({ref:s})=>({0:s}),({ref:s})=>s?1:0]},$$scope:{ctx:r}};for(let s=0;s<n.length;s+=1)i=Wo(i,n[s]);return e=new Hn({props:i}),r[8](e),e.$on("change",r[3]),e.$on("create",r[9]),{c(){Qt(e.$$.fragment)},l(s){jt(e.$$.fragment,s)},m(s,o){en(e,s,o),t=!0},p(s,[o]){const c=o&65?W1(n,[o&1&&{is:s[0]},o&64&&X1(s[6])]):{};o&1025&&(c.$$scope={dirty:o,ctx:s}),e.$set(c)},i(s){t||(gt(e.$$.fragment,s),t=!0)},o(s){bt(e.$$.fragment,s),t=!1},d(s){r[8](null),tn(e,s)}}}function fD(r,e,t){const n=["ref"];let i=gu(e,n),s,o,{$$slots:c={},$$scope:u}=e;const h=Fy();Fs(r,h,b=>t(11,s=b));const{renderer:d,invalidate:m}=to();if(!d)throw new Error("Threlte Context missing: Is <OrbitControls> a child of <Canvas>?");if(!(s instanceof dc))throw new Error("Parent missing: <OrbitControls> need to be a child of a <Camera>");const p=new cD(s,d.domElement),{start:_,stop:v}=rD(()=>p.update(),{autostart:!1,debugFrameloopMessage:"OrbitControls: updating controls"}),M=aD();Fs(r,M,b=>t(1,o=b));const{orbitControls:y}=oD();function g(b){L0[b?"unshift":"push"](()=>{o=b,M.set(o)})}const S=({ref:b,cleanup:E})=>{y.set(b),E(()=>{y.set(void 0)})};return r.$$set=b=>{e=Wo(Wo({},e),Vf(b)),t(6,i=gu(e,n)),"$$scope"in b&&t(10,u=b.$$scope)},r.$$.update=()=>{i.autoRotate||i.enableDamping?_():v()},[p,o,h,m,M,y,i,c,g,S,u]}class dD extends jr{constructor(e){super(),es(this,e,fD,hD,ts,{ref:0})}get ref(){return this.$$.ctx[0]}}new at;new at;new Mn;const pD=Math.PI/180;function mD(r){let e,t;return e=new dD({props:{enablePan:!0,enableZoom:!0,enableDamping:!0}}),{c(){Qt(e.$$.fragment)},l(n){jt(e.$$.fragment,n)},m(n,i){en(e,n,i),t=!0},p:Tu,i(n){t||(gt(e.$$.fragment,n),t=!0)},o(n){bt(e.$$.fragment,n),t=!1},d(n){tn(e,n)}}}function gD(r){let e,t,n,i;return e=new Hn.BoxGeometry({}),n=new Hn.MeshBasicMaterial({props:{color:"blue",transparent:!0,opacity:.1,wireframe:!0}}),{c(){Qt(e.$$.fragment),t=Li(),Qt(n.$$.fragment)},l(s){jt(e.$$.fragment,s),t=Ii(s),jt(n.$$.fragment,s)},m(s,o){en(e,s,o),kn(s,t,o),en(n,s,o),i=!0},p:Tu,i(s){i||(gt(e.$$.fragment,s),gt(n.$$.fragment,s),i=!0)},o(s){bt(e.$$.fragment,s),bt(n.$$.fragment,s),i=!1},d(s){tn(e,s),s&&Tn(t),tn(n,s)}}}function _D(r){let e,t,n,i;return e=new Hn.Mesh({props:{geometry:r[0],material:r[1][0],castShadow:!0,receiveShadow:!1}}),n=new Hn.Mesh({props:{geometry:r[0],material:r[1][1],castShadow:!0,receiveShadow:!1}}),{c(){Qt(e.$$.fragment),t=Li(),Qt(n.$$.fragment)},l(s){jt(e.$$.fragment,s),t=Ii(s),jt(n.$$.fragment,s)},m(s,o){en(e,s,o),kn(s,t,o),en(n,s,o),i=!0},p:Tu,i(s){i||(gt(e.$$.fragment,s),gt(n.$$.fragment,s),i=!0)},o(s){bt(e.$$.fragment,s),bt(n.$$.fragment,s),i=!1},d(s){tn(e,s),s&&Tn(t),tn(n,s)}}}function vD(r){let e,t,n,i;return e=new Hn.CircleGeometry({props:{args:[2,60]}}),n=new Hn.MeshStandardMaterial({}),{c(){Qt(e.$$.fragment),t=Li(),Qt(n.$$.fragment)},l(s){jt(e.$$.fragment,s),t=Ii(s),jt(n.$$.fragment,s)},m(s,o){en(e,s,o),kn(s,t,o),en(n,s,o),i=!0},p:Tu,i(s){i||(gt(e.$$.fragment,s),gt(n.$$.fragment,s),i=!0)},o(s){bt(e.$$.fragment,s),bt(n.$$.fragment,s),i=!1},d(s){tn(e,s),s&&Tn(t),tn(n,s)}}}function yD(r){let e,t,n,i,s,o,c,u,h,d,m,p,_,v,M,y;return e=new Hn.AxesHelper({props:{scale:10}}),n=new Hn.DirectionalLight({props:{position:[3,10,10],castShadow:!0,intensity:1.5}}),s=new Hn.DirectionalLight({props:{position:[-3,10,-10],intensity:.5}}),c=new Hn.AmbientLight({props:{intensity:.5}}),h=new Hn.PerspectiveCamera({props:{makeDefault:!0,position:[-10,10,10],fov:15,$$slots:{default:[mD]},$$scope:{ctx:r}}}),m=new Hn.Mesh({props:{scale:[ri,ri,ri],$$slots:{default:[gD]},$$scope:{ctx:r}}}),_=new Hn.Group({props:{position:[ri-ri/2,ri-ri/2,ri-ri/2],scale:[-ri,-ri,-ri],$$slots:{default:[_D]},$$scope:{ctx:r}}}),M=new Hn.Mesh({props:{receiveShadow:!0,"position.y":-ri/2-.1,"rotation.x":pD*-90,$$slots:{default:[vD]},$$scope:{ctx:r}}}),{c(){Qt(e.$$.fragment),t=Li(),Qt(n.$$.fragment),i=Li(),Qt(s.$$.fragment),o=Li(),Qt(c.$$.fragment),u=Li(),Qt(h.$$.fragment),d=Li(),Qt(m.$$.fragment),p=Li(),Qt(_.$$.fragment),v=Li(),Qt(M.$$.fragment)},l(g){jt(e.$$.fragment,g),t=Ii(g),jt(n.$$.fragment,g),i=Ii(g),jt(s.$$.fragment,g),o=Ii(g),jt(c.$$.fragment,g),u=Ii(g),jt(h.$$.fragment,g),d=Ii(g),jt(m.$$.fragment,g),p=Ii(g),jt(_.$$.fragment,g),v=Ii(g),jt(M.$$.fragment,g)},m(g,S){en(e,g,S),kn(g,t,S),en(n,g,S),kn(g,i,S),en(s,g,S),kn(g,o,S),en(c,g,S),kn(g,u,S),en(h,g,S),kn(g,d,S),en(m,g,S),kn(g,p,S),en(_,g,S),kn(g,v,S),en(M,g,S),y=!0},p(g,[S]){const b={};S&32&&(b.$$scope={dirty:S,ctx:g}),h.$set(b);const E={};S&32&&(E.$$scope={dirty:S,ctx:g}),m.$set(E);const A={};S&32&&(A.$$scope={dirty:S,ctx:g}),_.$set(A);const L={};S&32&&(L.$$scope={dirty:S,ctx:g}),M.$set(L)},i(g){y||(gt(e.$$.fragment,g),gt(n.$$.fragment,g),gt(s.$$.fragment,g),gt(c.$$.fragment,g),gt(h.$$.fragment,g),gt(m.$$.fragment,g),gt(_.$$.fragment,g),gt(M.$$.fragment,g),y=!0)},o(g){bt(e.$$.fragment,g),bt(n.$$.fragment,g),bt(s.$$.fragment,g),bt(c.$$.fragment,g),bt(h.$$.fragment,g),bt(m.$$.fragment,g),bt(_.$$.fragment,g),bt(M.$$.fragment,g),y=!1},d(g){tn(e,g),g&&Tn(t),tn(n,g),g&&Tn(i),tn(s,g),g&&Tn(o),tn(c,g),g&&Tn(u),tn(h,g),g&&Tn(d),tn(m,g),g&&Tn(p),tn(_,g),g&&Tn(v),tn(M,g)}}}const ri=2.5;function xD(r,e,t){let{bufferVertices:n}=e,{bufferIndeces:i}=e;const{renderer:s}=to();let o=new _t,c=[new Su({color:"#dc2626",side:In,transparent:!0,opacity:.9}),new Su({color:"#1d4ed8",side:Ji,transparent:!0,opacity:.9})];return r.$$set=u=>{"bufferVertices"in u&&t(2,n=u.bufferVertices),"bufferIndeces"in u&&t(3,i=u.bufferIndeces)},r.$$.update=()=>{r.$$.dirty&16&&s&&(t(4,s.shadowMap.enabled=!0,s),t(4,s.shadowMap.type=O0,s),console.log({renderer:s})),r.$$.dirty&12&&o&&(o.setAttribute("position",new Nt(n,3)),o.setIndex(new Nt(i,1)),o.computeVertexNormals())},[o,c,n,i,s]}class MD extends jr{constructor(e){super(),es(this,e,xD,yD,ts,{bufferVertices:2,bufferIndeces:3})}}function T0(r){let e,t;return e=new MD({props:{bufferVertices:r[0],bufferIndeces:r[1]}}),{c(){Qt(e.$$.fragment)},l(n){jt(e.$$.fragment,n)},m(n,i){en(e,n,i),t=!0},p(n,i){const s={};i&1&&(s.bufferVertices=n[0]),i&2&&(s.bufferIndeces=n[1]),e.$set(s)},i(n){t||(gt(e.$$.fragment,n),t=!0)},o(n){bt(e.$$.fragment,n),t=!1},d(n){tn(e,n)}}}function bD(r){let e,t,n=r[0]&&r[1]&&T0(r);return{c(){n&&n.c(),e=pu()},l(i){n&&n.l(i),e=pu()},m(i,s){n&&n.m(i,s),kn(i,e,s),t=!0},p(i,s){i[0]&&i[1]?n?(n.p(i,s),s&3&&gt(n,1)):(n=T0(i),n.c(),gt(n,1),n.m(e.parentNode,e)):n&&(_u(),bt(n,1,1,()=>{n=null}),mu())},i(i){t||(gt(n),t=!0)},o(i){bt(n),t=!1},d(i){n&&n.d(i),i&&Tn(e)}}}function SD(r){let e,t,n;return t=new eD({props:{$$slots:{default:[bD]},$$scope:{ctx:r}}}),{c(){e=A0("div"),Qt(t.$$.fragment),this.h()},l(i){e=R0(i,"DIV",{class:!0});var s=C0(e);jt(t.$$.fragment,s),s.forEach(Tn),this.h()},h(){P0(e,"class","w-[45rem] h-[45rem]")},m(i,s){kn(i,e,s),en(t,e,null),n=!0},p(i,[s]){const o={};s&67&&(o.$$scope={dirty:s,ctx:i}),t.$set(o)},i(i){n||(gt(t.$$.fragment,i),n=!0)},o(i){bt(t.$$.fragment,i),n=!1},d(i){i&&Tn(e),tn(t)}}}function wD(r,e,t){let n;const{outputUniverse:i}=Di("layoutData");Fs(r,i,h=>t(4,n=h));let s,o,c=!1;function u(){if(!n)return console.log("no outputUniverse");const h=Xo.new(n.size);n.nodes.map(_=>{h.add_node({red_agents:_.red_agents,blue_agents:_.blue_agents})});const d=J1(h),m=d.get_vertices(),p=d.get_indeces();t(0,s=new Float32Array(m)),t(1,o=new Uint32Array(p))}return Eu(async()=>{await U0(),t(3,c=!0)}),r.$$.update=()=>{r.$$.dirty&24&&c&&n&&u()},[s,o,i,c,n]}class PD extends jr{constructor(e){super(),es(this,e,wD,SD,ts,{})}}export{PD as component};
